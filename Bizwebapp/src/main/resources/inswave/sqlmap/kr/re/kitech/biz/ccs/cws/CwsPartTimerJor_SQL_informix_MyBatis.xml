<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper      
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"      
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.re.kitech.biz.ccs.cws">

    <insert id="insertCwsPartTimerJor" parameterType="kr.re.kitech.biz.ccs.cws.vo.CwsPartTimerJorVo">	
        INSERT INTO CWSPARTTIMERJOR   /* QueryID : kr.re.kitech.biz.ccs.cws.insertCwsPartTimerJor */
        ( 
            REQ_NO
            <if test="req_syspayno      != null"> , REQ_SYSPAYNO       </if>
            <if test="start_ymd         != null"> , START_YMD          </if>
            <if test="start_time        != null"> , START_TIME         </if>
            <if test="cls_ymd           != null"> , CLS_YMD            </if>
            <if test="cls_time          != null"> , CLS_TIME           </if>
            <if test="work_plan         != null"> , WORK_PLAN          </if>
            <if test="work_act          != null"> , WORK_ACT           </if>
            <if test="attach_file_no    != null"> , ATTACH_FILE_NO     </if>
            <if test="regst_syspayno 	!= null"> , REGST_PSN_SYSPAYNO </if>
            <if test="regst_daytm       != null"> , REGST_DAYTM        </if>
        )
        VALUES  
        ( 
            #{req_no}
            <if test="req_syspayno      != null"> , #{req_syspayno}       </if>
            <if test="start_ymd         != null"> , #{start_ymd}          </if>
            <if test="start_time        != null"> , #{start_time}         </if>
            <if test="cls_ymd           != null"> , #{cls_ymd}            </if>
            <if test="cls_time          != null"> , #{cls_time}           </if>
            <if test="work_plan         != null"> , #{work_plan}          </if>
            <if test="work_act          != null"> , #{work_act}           </if>
            <if test="attach_file_no    != null"> , #{attach_file_no}     </if>
            <if test="regst_syspayno 	!= null"> , #{regst_syspayno}  	  </if>
            <if test="regst_daytm       != null"> , CURRENT        </if>
        )          
    </insert>	
	
    <update id="updateCwsPartTimerJor" parameterType="kr.re.kitech.biz.ccs.cws.vo.CwsPartTimerJorVo">
        UPDATE CWSPARTTIMERJOR    /* QueryID : kr.re.kitech.biz.ccs.cws.updateCwsPartTimerJor */      
      	  SET  
                REQ_NO             = #{req_no}                    	                       
            <if test="req_syspayno      != null"> , REQ_SYSPAYNO       = #{req_syspayno}       </if>
            <if test="start_ymd         != null"> , START_YMD          = #{start_ymd}          </if>
            <if test="start_time        != null"> , START_TIME         = #{start_time}         </if>
            <if test="cls_ymd           != null"> , CLS_YMD            = #{cls_ymd}            </if>
            <if test="cls_time          != null"> , CLS_TIME           = #{cls_time}           </if>
            <if test="work_plan         != null"> , WORK_PLAN          = #{work_plan}          </if>
            <if test="work_act          != null"> , WORK_ACT           = #{work_act}           </if>
            <if test="attach_file_no    != null"> , ATTACH_FILE_NO     = #{attach_file_no}     </if>
            <if test="updt_syspayno 	!= null"> , UPDT_PSN_SYSPAYNO  = #{updt_syspayno}  	   </if>
            <if test="updt_daytm        != null"> , UPDT_DAYTM         = CURRENT         </if>                 
        WHERE   
                REQ_NO             = #{req_no}            
    </update>
	
    <delete id="deleteCwsPartTimerJor" parameterType="kr.re.kitech.biz.ccs.cws.vo.CwsPartTimerJorVo">
        DELETE FROM CWSPARTTIMERJOR   /* QueryID : kr.re.kitech.biz.ccs.cws.deleteCwsPartTimerJor */ 
        WHERE   
                REQ_NO             = #{req_no}                    
    </delete>
	
    <select id="selectCwsPartTimerJor" parameterType="kr.re.kitech.biz.ccs.cws.vo.CwsPartTimerJorVo" resultType="kr.re.kitech.biz.ccs.cws.vo.CwsPartTimerJorVo">	
        SELECT 		t1.req_no, 
	        		t1.req_syspayno, 
	        		t1.start_ymd, 
	        		t1.start_time, 
	        		t1.cls_ymd, 
					t1.cls_time, 
					t1.work_plan, 
					t1.work_act, 
					t1.regst_psn_syspayno, 
					t1.regst_daytm, 
					t1.updt_psn_syspayno, 
					t1.updt_daytm, 
					t2.empno, 
					t2.nm, 
					t3.dept_nm, 
					t4.posi_nm, 
					t5.apr_state, 
					t1.attach_file_no 
		FROM 		cwsparttimerjor t1
		INNER JOIN 	humbasicinfo t2 ON t2.syspayno = t1.req_syspayno
		INNER JOIN 	xodhdeptinfo t3 ON t2.dept_cd = t3.dept_cd AND t2.dept_new_ymd = t3.dept_new_ymd
		INNER JOIN 	xodhposiinfo t4 ON t2.posi_cd = t4.posi_cd
		INNER JOIN 	xomxintfatab t5 ON t5.req_no = t1.req_no
		WHERE 		1 = 1
		AND			t1.req_no  = #{req_no}
    </select>
	
    <select id="selectListCwsPartTimerJor" parameterType="kr.re.kitech.biz.ccs.cws.vo.CwsPartTimerJorVo" resultType="kr.re.kitech.biz.ccs.cws.vo.CwsPartTimerJorVo">
		SELECT 		t1.req_no, 
					t1.req_syspayno, 
					t1.start_ymd, 
					t1.start_time, 
					t1.cls_ymd, 
					t1.cls_time, 
					t1.work_plan, 
					t1.work_act, 
					t1.regst_psn_syspayno, 
					t1.regst_daytm, 
					t1.updt_psn_syspayno, 
					t1.updt_daytm, 
					t2.empno, 
					t2.nm, 
					t3.dept_nm, 
					t4.posi_nm, 
					t5.apr_state, 
					t6.cd_nm as apr_state_nm
		FROM 		cwsparttimerjor t1
		INNER JOIN 	humbasicinfo t2 ON t2.syspayno = t1.req_syspayno
		INNER JOIN 	xodhdeptinfo t3 ON t2.dept_cd = t3.dept_cd AND t2.dept_new_ymd = t3.dept_new_ymd
		INNER JOIN 	xodhposiinfo t4 ON t2.posi_cd = t4.posi_cd
		INNER JOIN 	xomxintfatab t5 ON t5.req_no = t1.req_no
		INNER JOIN 	xodxcommst t6 ON t6.cd = t5.apr_state
		WHERE 		1 = 1
		<if test = "req_no != null and req_no != ''"> AND t1.req_no = #{req_no}</if>
		<if test = "req_syspayno != null and req_syspayno != ''"> AND t1.req_syspayno = #{req_syspayno}</if>
		AND (start_ymd BETWEEN #{start_ymd} AND #{cls_ymd})
		ORDER BY 	req_no desc
    </select>
	
    <select id="selectListCountCwsPartTimerJor" parameterType="kr.re.kitech.biz.ccs.cws.vo.CwsPartTimerJorVo" resultType="long">
         SELECT    /* QueryID : kr.re.kitech.biz.ccs.cws.selectListCountCwsPartTimerJor */
             COUNT(*) totcnt  		                  
         FROM CWSPARTTIMERJOR
         WHERE  1=1    		

    </select>
    
	<select id="selectCwsWorkTime" parameterType="kr.re.kitech.biz.ccs.cws.vo.CwsWorkTimeVo" resultType="kr.re.kitech.biz.ccs.cws.vo.CwsWorkTimeVo">
		SELECT  
		    t1.syspayno
		    ,x2.month_work_time * 60 UNITS MINUTE::INTERVAL HOUR(5) TO MINUTE AS month_work_time
		    ,SUM(CASE WHEN (t2.date_cls LIKE '%근무%' OR t2.is_holwork OR t2.is_ctrwork OR t2.is_extwork) AND (t2.basedate BETWEEN t0.mstdate AND t0.meddate) THEN t2.sum_wrk_time ELSE ('00:00')::INTERVAL HOUR(5) TO MINUTE END) AS cur_work_times
		FROM cwshuminfolog t1
		    JOIN (
		            SELECT  TO_DATE(TO_CHAR(TO_DATE(#{cls_ymd}, '%Y%m%d'), '%Y%m')||'01', '%Y%m%d')::DATE AS mstdate
		                , LAST_DAY(TO_DATE(#{cls_ymd}, '%Y%m%d'))::DATE AS meddate
		            FROM sysmaster:sysdual
		        ) AS t0 ON 1=1
		    LEFT JOIN cwsworktime t2 ON t2.syspayno = t1.syspayno AND t2.yyyymm = t1.yyyymm AND t2.basedate = t1.basedate
		    LEFT JOIN (SELECT req_ymd, syspayno, month_work_time 
		              FROM (
		                    SELECT 
		                    req_ymd, syspayno, month_work_time 
		                    , ROW_NUMBER() OVER(PARTITION BY syspayno ORDER BY req_ymd DESC) AS rank
		                    FROM humrctbasinfo 
		                ) x0
		                WHERE rank = 1) AS x2 ON t1.syspayno = x2.syspayno
		WHERE t1.yyyymm BETWEEN TO_CHAR(TO_DATE(#{cls_ymd}, '%Y%m%d') - 1 UNITS MONTH, '%Y%m') AND TO_CHAR(TO_DATE(#{cls_ymd}, '%Y%m%d') + 1 UNITS MONTH, '%Y%m')
		AND t1.syspayno = #{syspayno}
		GROUP BY 1,2
	</select>
	
	<select id="selectWorksDays" parameterType="kr.re.kitech.biz.ccs.cws.vo.CwsWorkDaysVo" resultType="kr.re.kitech.biz.ccs.cws.vo.CwsWorkDaysVo">
		SELECT FIRST 1
		      x0.commute_cd
		    , x0.work_days
		    , x0.occutyp_cd
		    , x0.day_no
		    , x0.except_cd
		    , DECODE( x0.occutyp_cd, '170000', ('0:00')::INTERVAL HOUR TO MINUTE, x0.target_core_time) AS target_core_time
		    , DECODE( x0.occutyp_cd, '170000', ('0:00')::INTERVAL HOUR TO MINUTE, x0.target_flex_time) AS target_flex_time
		    , NVL( x1.month_work_time, x0.target_core_time + target_flex_time) AS target_total_time
		    , x0.std_over_time
		    , x0.rmk
		FROM (
		    SELECT 
		          x0.syspayno
		        , x0.occutyp_cd
		        , x0.commute_cd
		        , MAX(x2.cause_rmk) AS rmk
		        , MAX(x2.day_no) AS day_no
		        , MAX(x2.except_cd) AS except_cd
		        , SUM( CASE WHEN '170000' = x0.occutyp_cd   THEN (3 UNITS HOUR)::INTERVAL HOUR TO MINUTE * 0.5  -- 시간선택제: 50%
		                    WHEN 'HWF110' = x2.except_cd AND x0.basedate BETWEEN x2.start_dt AND x2.close_dt THEN (3 UNITS HOUR)::INTERVAL HOUR TO MINUTE    -- 임산부: 동일
		                    WHEN 'HWF120' = x2.except_cd AND x0.basedate BETWEEN x2.start_dt AND x2.close_dt THEN x0.tgt_time * 0.375  -- 임금피크제: 
		                    WHEN 'HWF130' = x2.except_cd AND x0.basedate BETWEEN x2.start_dt AND x2.close_dt THEN (DECODE( x3.day_no, NVL(x2.day_no, 9), 0, 3)  UNITS HOUR)::INTERVAL HOUR TO MINUTE  -- 단축근무 : 학위수학
		                    ELSE (3 UNITS HOUR)::INTERVAL HOUR TO MINUTE END) AS target_core_time
		        , SUM( CASE WHEN '170000' = x0.occutyp_cd   THEN (5 UNITS HOUR)::INTERVAL HOUR TO MINUTE * 0.5  -- 시간선택제: 50%
		                    WHEN 'HWF110' = x2.except_cd AND x0.basedate BETWEEN x2.start_dt AND x2.close_dt THEN x0.tgt_time - (3 UNITS HOUR)::INTERVAL HOUR TO MINUTE   -- 임산부: 1~2시간 제외
		                    WHEN 'HWF120' = x2.except_cd AND x0.basedate BETWEEN x2.start_dt AND x2.close_dt THEN x0.tgt_time * 0.625  -- 임금피크제:
		                    WHEN 'HWF130' = x2.except_cd AND x0.basedate BETWEEN x2.start_dt AND x2.close_dt THEN x0.tgt_time - (DECODE( x3.day_no, NVL(x2.day_no, 9), 0, 3)  UNITS HOUR)::INTERVAL HOUR TO MINUTE  -- 단축근무 : 학위수학
		                    ELSE (5 UNITS HOUR)::INTERVAL HOUR TO MINUTE END) AS target_flex_time
		        , COUNT(*) AS work_days
		        , SUM(DECODE( x1.is_extwork, 't', x1.over_am_time + x1.over_pm_time, ('0:00')::INTERVAL HOUR TO MINUTE))AS std_over_time
		    FROM cwshuminfolog AS x0 
		    LEFT JOIN cwsworktime AS x1 ON x1.syspayno = x0.syspayno AND x1.yyyymm = x0.yyyymm AND x1.basedate = x0.basedate
		    LEFT JOIN xomdtmst AS x3 ON x3.ymd = TO_CHAR(x0.basedate, '%Y%m%d') 
		    LEFT JOIN cwsworkexcepts AS x2 ON x2.is_use AND is_excepts = 'f' AND x2.syspayno = x0.syspayno AND x0.basedate BETWEEN x2.start_dt AND x2.close_dt
		    WHERE x0.is_target
		    AND x0.is_holiday = 'f'
		    AND x0.yyyymm = #{yyyymm}
		    AND x0.syspayno = #{syspayno}
		    AND x0.commute_rmk NOT LIKE '%휴직%'
		    GROUP BY 1,2,3
		) AS x0 LEFT JOIN (
		    SELECT FIRST 1 
		          x0.month_work_time * 60 UNITS MINUTE::INTERVAL HOUR(5) TO MINUTE AS month_work_time
		        , x0.syspayno, x0.occutyp_cd
		    FROM humrctbasinfo AS x0 
		        JOIN xomxintfatab AS x1 ON x1.req_no = x0.req_no
		    WHERE x0.syspayno = #{syspayno}
		    AND x0.occutyp_cd = '310000'
		    AND x1.apr_state = 'XAD100'
		    ORDER BY x0.req_no DESC
		) AS x1 ON x1.syspayno = x0.syspayno AND x1.occutyp_cd = x0.occutyp_cd
		ORDER BY except_cd DESC
	</select>
	
	<select id="selectCwsWorkDays" parameterType="kr.re.kitech.biz.ccs.cws.vo.CwsWorkTimeVo" resultType="java.lang.String">
		SELECT COUNT(*) AS work_days
		FROM xomdtmst AS x0
		WHERE off_yn = 'N' 
		AND x0.ymd BETWEEN #{start_ymd} AND #{cls_ymd}
	</select>
	
	<select id="selectCwsPartTimerJorChk" parameterType="kr.re.kitech.biz.ccs.cws.vo.CwsPartTimerJorVo" resultType="java.lang.String">
			SELECT 	NVL(MAX(t1.req_no),'') AS req_no
			 FROM 	cwsparttimerjor t1
		    INNER JOIN xomxintfatab t2 ON (t2.req_no = t1.req_no)
			WHERE 	t2.apr_state <![CDATA[<>]]> 'XAD015' 
		    AND 	t1.start_ymd <![CDATA[<=]]> #{cls_ymd}
		    AND 	t1.cls_ymd <![CDATA[>=]]> #{start_ymd}
		    AND 	t1.req_syspayno = #{req_syspayno}
		    AND 	t1.req_no <![CDATA[<>]]> #{req_no}
	</select>
	
</mapper>
