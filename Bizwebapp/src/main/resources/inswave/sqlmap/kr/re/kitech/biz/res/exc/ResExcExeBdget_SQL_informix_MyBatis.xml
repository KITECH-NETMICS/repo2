<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper      
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"      
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.re.kitech.biz.res.exc">
  <!-- 연구관리 >협약예산, 실행예산편성관리 조회 -->
  <!-- kitech.res.exc.xda.ResBgAcctmMS07 -->
  <select id="selectResExcExeBdgetList" parameterType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo" resultType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo">
SELECT /* QueryID : kr.re.kitech.biz.res.exc.selectResExcExeBdgetList */ 
		  tot_resch_cash_amt
      , main_amt
      , intrst_amt
      , cryfwd_amt
      , accnt_no
      , accnt_rspns
      , accnt_rspns_nm_01
      , accnt_rspns_nm
      , dept_nm
      , divsn_dept_nm
      , accnt_clsf
      , accnt_clsf_nm
      , prj_no
      , prj_nm
      , resch_prd_term
      , accnt_state
      , accnt_state_nm
      , itm_solve_base
      , itm_solve_base_pm
      , final_bsns_plan_submit_affir
      , curr_prj_anal
      , tot_prj_yrs
      , prj_no_yr
      , bsns_cd_inout
      , bsns_cd_inout_nm
      , bsns_cd_detls_bsns
      , bsns_req_no
      , agree_direct_cost_fix_yn
      , ram001_amt
      , resbgallow_amt
      , bsns_cd_bsns_nm
      , bsns_cd_detls_bsns_nm
      , max_seq
      , NVL(exect010_amt,0) AS exect010_amt
      , NVL(exect190_amt,0) AS exect190_amt
      , NVL(exect300_amt,0) AS exect300_amt
  FROM (
       SELECT  a.tot_resch_cash_amt
              , a.main_amt
              , a.intrst_amt
              , a.cryfwd_amt
              , a.accnt_no
              , a.accnt_rspns
              , a.accnt_rspns_nm_01
              , a.accnt_rspns_nm
              , a.dept_nm
              , a.divsn_dept_nm
              , a.accnt_clsf
              , a.accnt_clsf_nm
              , a.prj_no
              , a.prj_nm
              , a.resch_prd_term
              , a.accnt_state
              , a.accnt_state_nm
              , a.itm_solve_base
              , a.itm_solve_base_pm
              , a.final_bsns_plan_submit_affir
              , a.curr_prj_anal
              , a.tot_prj_yrs
              , a.prj_no_yr
              , a.bsns_cd_inout
              , a.bsns_cd_inout_nm
              , a.bsns_cd_detls_bsns
              , a.bsns_req_no
              , a.agree_direct_cost_fix_yn
              , a.ram001_amt
              , a.resbgallow_amt
              , a.bsns_cd_bsns_nm
              , a.bsns_cd_detls_bsns_nm
              , a.max_seq
              ,  (SELECT NVL(x.amt,0)
                      FROM resbgexect AS x 
                      INNER JOIN resbgacctm AS m ON x.accnt_no = m.accnt_no
                      INNER JOIN fbaitmaccnt AS y ON x.bugt_item = y.accnt_cd AND m.itm_solve_base = y.itm_solve_base AND y.itm_clsf = 'FAE011'
                      INNER JOIN xodfaccnt  AS z ON y.accnt_cd = z.accnt_cd AND z.resch_accnt_clsf = 'FBL010'
                      WHERE x.accnt_no = a.accnt_no AND x.exec_bugt_seq = a.max_seq) AS exect010_amt
              ,  (SELECT NVL(x.amt,0)
                  FROM resbgexect AS x 
                  INNER JOIN resbgacctm AS m ON x.accnt_no = m.accnt_no
                  INNER JOIN fbaitmaccnt AS y ON x.bugt_item = y.accnt_cd AND m.itm_solve_base = y.itm_solve_base AND y.itm_clsf = 'FAE028'
                  INNER JOIN xodfaccnt  AS z ON y.accnt_cd = z.accnt_cd AND z.resch_accnt_clsf = 'FBL190'
                  WHERE x.accnt_no = a.accnt_no AND x.exec_bugt_seq = a.max_seq) AS exect190_amt
              ,  (SELECT NVL(x.amt,0)
                  FROM resbgexect AS x 
                  INNER JOIN resbgacctm AS m ON x.accnt_no = m.accnt_no
                  INNER JOIN fbaitmaccnt AS y ON x.bugt_item = y.accnt_cd AND m.itm_solve_base = y.itm_solve_base 
                  INNER JOIN xodfaccnt  AS z ON y.accnt_cd = z.accnt_cd AND z.resch_accnt_clsf = 'FBL300'
                  WHERE x.accnt_no = a.accnt_no AND x.exec_bugt_seq = a.max_seq) AS exect300_amt
      FROM (
 SELECT 
         NVL(j.gov_cntrbamt, 0 ) +  NVL(j.gov_subsidy, 0 ) + NVL(j.area_share_wide, 0 ) + NVL(j.area_share_base, 0 ) 
         + NVL(j.self_share, 0 ) + NVL(j.cmpy_cash, 0 ) + NVL(j.cmpy_goods, 0 ) + NVL(j.contpat_goods, 0 ) + NVL(j.intrst_amt, 0 )
         + NVL(j.cryfwd_amt, 0 ) + NVL(j.local_gov_cash, 0 ) + NVL(j.univ_cash, 0 ) + NVL(j.etc_cash, 0 ) AS tot_resch_cash_amt    -- 총연구비(현금)
       , SUM(CASE WHEN d.accnt_clsf IN ('RAR001', 'RAR002') THEN d.gov_cntrbamt + d.gov_subsidy + d.area_share_wide + d.area_share_base + d.self_share + d.cmpy_cash + d.local_gov_cash + d.univ_cash + d.etc_cash ELSE 0 END) AS main_amt
       , SUM(CASE WHEN d.accnt_clsf = 'RAR003' THEN CASE WHEN NVL(d.tot_amt,0) = 0 THEN d.gov_cntrbamt + d.gov_subsidy + d.area_share_wide + d.area_share_base + d.self_share + d.cmpy_cash 
                   + d.local_gov_cash + d.univ_cash + d.etc_cash ELSE d.tot_amt END ELSE 0  END) AS intrst_amt
       , SUM(CASE WHEN d.accnt_clsf = 'RAR004' THEN CASE WHEN NVL(d.tot_amt,0) = 0 THEN d.gov_cntrbamt + d.gov_subsidy + d.area_share_wide + d.area_share_base + d.self_share + d.cmpy_cash 
                   + d.local_gov_cash + d.univ_cash + d.etc_cash ELSE d.tot_amt END ELSE 0  END) AS cryfwd_amt
       , a.accnt_no    -- 계정번호
       , a.accnt_rspns    -- 계정책임자
       , c.nm             AS accnt_rspns_nm_01                -- 계정책임자명
       , TRIM(c.nm) || '(' || c.empno || ')'  AS accnt_rspns_nm                -- 계정책임자명
       , f.dept_nm   -- 부서명
       , g.dept_nm  AS divsn_dept_nm  -- 부본부명
       , a.accnt_clsf   -- 계정구분(RAR)
       , fun_xodxcommst_cd_nm(a.accnt_clsf,0) AS accnt_clsf_nm                 -- 계정구분명
       , a.prj_no            -- 과제번호
       , b.prj_nm           -- 과제명
       , a.start_ymd || ' ~ ' || a.cls_ymd  AS resch_prd_term    -- 연구기간(시작일 ~ 종료일)
       , a.accnt_state             -- 계정상태(RAK)
       , fun_xodxcommst_cd_nm(a.accnt_state,0) AS accnt_state_nm                -- 계정상태명
       , a.itm_solve_base              -- 비목해소기준
       , b.itm_solve_base AS itm_solve_base_pm             -- 비목해소기준(과제 MASTER)
       , NVL(b.final_bsns_plan_submit_affir, 'N') AS final_bsns_plan_submit_affir  -- 최종사업계획서제출확인
       , b.curr_prj_anal    -- 현재과제년차
       , b.tot_prj_yrs      -- 총과제년수
       , b.prj_no_yr
       , b.bsns_cd_inout  -- 내외구분
       , e.cd_nm AS bsns_cd_inout_nm  -- 내외구분명
       , b.bsns_cd_detls_bsns
       , b.bsns_req_no
       , b.agree_direct_cost_fix_yn    -- 직접비 확정여부
       , NVL(h.gov_cntrbamt, 0) + nvl(h.gov_subsidy,0) + nvl(h.area_share_wide,0) + nvl(h.area_share_base,0) + nvl(h.self_share,0) + NVL(h.cmpy_cash, 0) + NVL(h.cmpy_goods, 0) + 
         NVL(h.contpat_goods, 0) + NVL(h.intrst_amt, 0) + NVL(h.cryfwd_amt, 0) + 
         NVL(h.local_gov_cash, 0) + NVL(h.univ_cash, 0) + NVL(h.etc_cash, 0) AS ram001_amt   -- 내부1
       , NVL(i.gov_cntrbamt, 0) + nvl(i.gov_subsidy,0) + nvl(i.area_share_wide,0) + nvl(i.area_share_base,0) + nvl(i.self_share,0) + NVL(i.cmpy_cash, 0) + NVL(i.local_gov_cash, 0) + 
         NVL(i.univ_cash, 0) + NVL(i.etc_cash, 0) AS resbgallow_amt   -- 연구수당(현금)
       , fun_res_bsns_nm( b.bsns_cd_bsns ) AS bsns_cd_bsns_nm 
       , fun_res_bsns_nm( b.bsns_cd_detls_bsns ) AS bsns_cd_detls_bsns_nm
       , (SELECT MAX(exec_bugt_seq) FROM resbgexect WHERE accnt_no = a.accnt_no) AS max_seq
 FROM resbgacctm a            
 JOIN resinpmast b ON  a.prj_no = b.prj_no
 JOIN xodxcommst e ON e.cd = b.bsns_cd_inout 
 JOIN humbasicinfo c ON a.accnt_rspns = c.syspayno
 JOIN xodhdeptinfo f ON f.dept_cd = c.dept_cd AND f.dept_new_ymd = c.dept_new_ymd
 JOIN xodhdeptinfo g ON g.dept_cd = f.divsn_dept AND g.dept_new_ymd = f.divsn_dept_new_ymd
 JOIN resinpbugt j ON b.prj_no = j.prj_no  
 LEFT JOIN resbgagree d ON b.prj_no = d.prj_no 
 LEFT JOIN resbgagree h ON h.prj_no = a.prj_no AND h.bugt_item IN (SELECT accnt_cd FROM xodfaccnt WHERE accnt_cd_abbr = '내부인건비(Ⅰ)')
 LEFT JOIN resbgagree i ON i.prj_no = a.prj_no AND i.bugt_item IN (SELECT accnt_cd FROM xodfaccnt WHERE accnt_cd_abbr = '연구수당')
 WHERE a.mngmt_clsf = 'R' 
<if test="prj_orign_yyyy != null and prj_orign_yyyy != ''">
	 AND a.start_ymd BETWEEN TRIM(#{prj_orign_yyyy})||'0101' AND TRIM(#{prj_orign_yyyy})||'1231'
</if> 
<if test="accnt_rspns != null and accnt_rspns != ''">
	 AND a.accnt_rspns = #{accnt_rspns}
</if>
<if test="accnt_no != null and accnt_no != ''">
	 AND a.accnt_no LIKE '%'||UPPER(TRIM(#{accnt_no}))||'%'
</if>
<if test="prj_no != null and prj_no != ''">
	 AND a.prj_no LIKE '%'||TRIM(#{prj_no})||'%'
</if>
<if test="prj_nm != null and prj_nm != ''">
	 AND b.prj_nm  LIKE '%'||TRIM(#{prj_nm})||'%'
</if>
<if test="accnt_state != null and accnt_state != ''">
	 AND a.accnt_state = #{accnt_state}
</if>
 <if test="accnt_clsf != null and accnt_clsf != ''">
	 AND a.accnt_clsf = #{accnt_clsf}
</if>
 <if test="prj_state != null and prj_state != ''">
	 AND b.prj_state = #{prj_state}
</if>
 <if test="bsns_req_no != null and bsns_req_no != ''">
	 AND b.bsns_req_no = #{bsns_req_no}
</if>
 <if test="bsns_cd_inout != null and bsns_cd_inout != ''">
	 AND b.bsns_cd_inout = #{bsns_cd_inout}
</if>
 <if test="bugt_ctrl_psn != null and bugt_ctrl_psn != ''">
	 AND a.bugt_ctrl_psn = #{bugt_ctrl_psn}
</if>
 GROUP BY 1,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32
        )a
     )
  </select>

  <!-- 실행예산 변경사유 조회 -->
  <!-- kitech.res.exc.xda.ResBgExereMS01 -->
  <select id="selectResExcBdgetExereList" parameterType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo" resultType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo">
SELECT /* QueryID : kr.re.kitech.biz.res.exc.selectResExcBdgetExereList */ 
       b.accnt_no       as accnt_no       -- 계정번호
     , b.exec_bugt_seq  as exec_bugt_seq  -- 실행예산차수
     , b.resn_contnt    as resn_contnt    -- 사유내용
     , b.attach_file    as attach_file    -- 첨부파일
     , a.req_ymd
    , a.req_no
FROM 
(SELECT accnt_no, exec_bugt_seq, req_ymd, req_no
FROM resbgexect 
GROUP BY accnt_no, exec_bugt_seq, req_ymd, req_no) a
JOIN resbgexere b on a.accnt_no = b.accnt_no and a.exec_bugt_seq = b.exec_bugt_seq
    <if test="accnt_no != null and accnt_no != ''">
	 AND a.accnt_no      = #{accnt_no}
</if>
    <if test="exec_bugt_seq != null and exec_bugt_seq != ''">
	 AND a.exec_bugt_seq = #{exec_bugt_seq}
</if>
  ORDER BY a.accnt_no, a.exec_bugt_seq
  </select>  
  
  <!-- 사용자용 실행예산편성 조회  -->
  <!-- kitech.res.exc.xda.ResBgAcctmUMS05 -->
  <select id="selectResExcExeBdgetForUserList" parameterType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo" resultType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo">
SELECT /* QueryID : kr.re.kitech.biz.res.exc.selectResExcExeBdgetForUserList */ 
		 a.accnt_no
     , a.accnt_clsf
     , x1.cd_nm AS accnt_clsf_nm
     , h1.nm AS accnt_rspns_nm
     , a.prj_no
     , a.accnt_no_nm
     , a.start_ymd || '~' || a.cls_ymd AS resch_prd_term
     , a.accnt_state
     , x2.cd_nm AS accnt_state_nm
     , b.prj_state
     , b.bsns_req_no
     , x3.cd_nm AS prj_state_nm
     , a.itm_solve_base
     , b.itm_solve_base as itm_solve_base_pm
     , b.bsns_cd_inout
     , b.bsns_cd_detls_bsns
     , b.prj_no_yr
FROM resbgacctm a
JOIN humbasicinfo h1 ON a.accnt_rspns = h1.syspayno
JOIN xodxcommst x1 ON a.accnt_clsf = x1.cd
JOIN xodxcommst x2 ON a.accnt_state = x2.cd
JOIN resinpmast b ON a.prj_no = b.prj_no
JOIN xodxcommst x3 ON b.prj_state = x3.cd
WHERE a.mngmt_clsf = 'R'
    <if test="accnt_no != null and accnt_no != ''">
	 AND a.accnt_no like '%'||UPPER(TRIM(#{accnt_no}))||'%'
</if>
    <if test="prj_no != null and prj_no != ''">
	 AND a.prj_no = #{prj_no}
</if>
    <if test="accnt_rspns != null and accnt_rspns != ''">
	 AND a.accnt_rspns = #{accnt_rspns}
</if>
    <if test="prj_orign != null and prj_orign != ''">
	 AND a.start_ymd BETWEEN TRIM(#{prj_orign})||'0101' AND TRIM(#{prj_orign})||'1231'  
</if>
    <if test="accnt_no_nm != null and accnt_no_nm != ''">
	 AND a.accnt_no_nm like '%'||TRIM(#{accnt_no_nm})||'%'
</if>
    <if test="accnt_state != null and accnt_state != ''">
	 AND a.accnt_state = #{accnt_state}
</if>
    <if test="prj_state != null and prj_state != ''">
	 AND b.prj_state = #{prj_state}
</if>
    <if test="bsns_req_no != null and bsns_req_no != ''">
	 AND b.bsns_req_no = #{bsns_req_no}
</if>
ORDER BY a.cls_ymd DESC
  </select>  
  
   <!-- 계정의 실행예산에 대한 검증 -->
   <!-- kitech.res.exc.xda.ResBgexEctMS01 -->
   <select id="selectResExcExeBdgetEct" parameterType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo" resultType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo">
SELECT /* QueryID : kr.re.kitech.biz.res.exc.selectResExcExeBdgetEct */ 
		 NVL(SUM(b.amt), 0) AS tot_amt 
FROM ( SELECT MAX(exec_bugt_seq) AS exec_bugt_seq, accnt_no
       FROM resbgexect
       WHERE accnt_no LIKE #{accnt_no1} ||'%'
       GROUP BY accnt_no
       )a  
INNER JOIN resbgexect b ON a.accnt_no = b.accnt_no AND a.exec_bugt_seq = b.exec_bugt_seq
WHERE a.accnt_no NOT LIKE '%Y' 
AND a.accnt_no NOT LIKE '%Z' 
AND a.accnt_no NOT LIKE #{accnt_no2} ||'%'
  </select> 
  
   <!-- 이자,이월계정 금액검증 조회 -->
   <!-- kitech.res.exc.xda.ResBgAgreeMS02 -->  
  <select id="selectResExcBdgetAgreeTotal" parameterType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo" resultType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo">
select /* QueryID : kr.re.kitech.biz.res.exc.selectResExcBdgetAgreeTotal */ 
		 nvl(tot_amt, 0) as tot_amt
from resbgagree
where accnt_no = #{accnt_no}
and   accnt_clsf = #{accnt_clsf}
  </select> 

   <!-- 연구과제추진비 대한 검증 -->
   <!-- kitech.res.exc.xda.ResBgexEctMS02 -->  
  <select id="selectResExcPrjBdgetEct" parameterType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo" resultType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo">
SELECT /* QueryID : kr.re.kitech.biz.res.exc.selectResExcPrjBdgetEct */ 
		 nvl(sum(b.amt), 0) as tot_026_amt -- a.exec_bugt_seq, a.accnt_no, a.bugt_item, 
FROM
(
select max(a.exec_bugt_seq) as exec_bugt_seq, a.accnt_no, a.bugt_item
from RESBGEXECT a
join fbaitmaccnt b on a.bugt_item = b.accnt_cd and b.itm_clsf = 'FAE026'
where a.accnt_no like #{accnt_no1} ||'%'
and b.itm_solve_base = (select itm_solve_base from resbgacctm where accnt_no = #{accnt_no2})
GROUP BY a.accnt_no, a.bugt_item
)a  JOIN RESBGEXECT b ON a.accnt_no = b.accnt_no and a.exec_bugt_seq = b.exec_bugt_seq and a.bugt_item = b.bugt_item
WHERE a.accnt_no not like '%Y' 
and a.accnt_no not like '%Z' 
and a.accnt_no not like #{accnt_no2} ||'%'
  </select>  
  
  <!-- (연구비)입금관리상세 내역(입금구분, 계산서번호, 입금의뢰번호) 조회 -->
  <!-- kitech.res.exc.xda.ResBgRectlMS03 -->
  <select id="selectResExcBdgetRectl" parameterType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo" resultType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo">
SELECT /* QueryID : kr.re.kitech.biz.res.exc.selectResExcBdgetRectl */ 
		 a.accnt_no
     , a.depst_clsf    -- 입금구분
     , a.demnd_bill_no -- 청구계산서번호
     , a.recv_bill_no  -- 영수계산서번호
     , CASE WHEN TRIM(a.demnd_bill_no) <![CDATA[ <> ]]> '' THEN TRIM(a.demnd_bill_no) ELSE REPLACE(TRIM(a.recv_bill_no),'발행','') END AS bill_no -- (청구/영수)계산서번호
     , a.depst_req_no  -- 입금의뢰번호
FROM resbgrectl a  -- 입금관리상세
INNER JOIN resinpmast b ON a.accnt_no = b.curr_accnt_no
<if test="accnt_no != null and accnt_no != ''">
	 AND a.accnt_no = #{accnt_no}
</if>
<if test="depst_odr != null and depst_odr != ''">
	 AND a.depst_odr = #{depst_odr}
</if>
<if test="odr != null and odr != ''">
	 AND a.odr = #{odr}
</if>
<if test="req_no != null and req_no != ''">
	 AND a.req_no = #{req_no}
</if>
<if test="bsns_req_no != null and bsns_req_no != ''">
	 AND b.bsns_req_no = #{bsns_req_no}
</if>
GROUP BY a.accnt_no, a.depst_clsf, a.demnd_bill_no, a.recv_bill_no, a.depst_req_no
  </select>
  
  <!-- 실행예산(계정) 내역 조회 -->
  <!-- kitech.res.exc.xda.ResBgAcctmMS01 -->
  <select id="selectResExcBdgetAcctm" parameterType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo" resultType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo">
SELECT /* QueryID : kr.re.kitech.biz.res.exc.selectResExcBdgetAcctm */ 
		 accnt_no,
       main_accnt_no,
       accnt_clsf,
       accnt_clsf_nm,
       accnt_rspns,
       accnt_rspns_nm,
       accnt_rspns_empno,
       prj_no,
       prj_nm,
       tot_resch_prd_orign_ymd,
       tot_resch_prd_cls_ymd,
       start_ymd,
       cls_ymd,
       accnt_state,
       tax_cd,
       accnt_state_nm,
       bsns_cd_bsns,
       bsns_cd_bsns_nm,
       bsns_cd_exclsv_agncy,
       bsns_cd_detls_bsns,
       CASE WHEN tax_cd == 'FTX001'
            THEN (tot_resch_cash_amt + (tot_resch_cash_amt * 0.1)) - agree_amt
            ELSE tot_resch_cash_amt - agree_amt
             END tot_resch_cash_amt,
       tot_resch_amt - NVL(cnt_amt,0) AS tot_resch_amt,
       itm_solve_base,
       bsns_req_no,
       prj_state,
       prj_state_nm,
       oh_absrp_rt,
       posi_cd,
       posi_nm,
       dept_cd,
       dept_nm,
       email,
       NVL(res_email,'') as res_email,
       first_pre_prj_no,
       curr_prj_anal,
       tot_prj_yrs,
       bsns_cd_inout,
       bsns_cd_inout_nm,
       prj_kind,
       bsns_cd_ofic,
       bugt_ctrl_psn,
       card_use_ex,
       curr_resch_rspns,
       curr_resch_rspns_nm,
       curr_posi_cd,
       curr_posi_nm,
       curr_dept_cd,
       curr_new_ymd,
       curr_dept_nm,
       curr_empno,
       vacct_no,
       note_use_ex,
       bankaccnt_type,
       note_yn,
       agree_direct_cost_fix_yn,
       reschamt_card_use_clsf,
       intgr_mngmt_unit,
       '' as temp
FROM(
SELECT a.accnt_no    		/* 계정번호 */
     , main_accnt_no 		/* 메인계정번호 */
     , a.accnt_clsf  		/* 계정구분(RAR) */
     , fun_xodxcommst_cd_nm(TRIM(a.accnt_clsf), 0)  AS accnt_clsf_nm   /* 계정구분명 */
     , a.accnt_rspns   						/* 계정책임자 */     
     , c.nm         AS accnt_rspns_nm      	/* 계정책임자명 */
     , c.empno      AS accnt_rspns_empno   	/* 계정책임자(개인번호) */
     , a.prj_no    							/* 과제번호 */
     , b.prj_nm    							/* 과제명  */
     , b.current_step_orign_ymd  AS tot_resch_prd_orign_ymd       /* 총연구기간시작일자(시작) */
     , b.current_step_cls_ymd    AS tot_resch_prd_cls_ymd         /* 총연구기간종료일자(종료) */     
     , a.start_ymd   						/* 연구기간시작일자(시작) */
     , a.cls_ymd     						/* 연구기간종료일자(종료 ) */   
     , a.accnt_state     					/* 계정상태(RAK) */
     , a.tax_cd
     , fun_xodxcommst_cd_nm(TRIM(a.accnt_state), 0) AS accnt_state_nm   /* 계정상태명 */
     , b.bsns_cd_bsns   					/* 사업코드사업구분 */
     , cd1.bsns_nm      AS bsns_cd_bsns_nm  /* 사업코드사업구분명 */    
     , NVL(e.gov_cntrbamt  , 0) +
       NVL(e.gov_subsidy, 0) + 
       NVL(e.area_share_wide, 0) +
       NVL(e.area_share_base, 0) +
       NVL(e.self_share, 0) +
       NVL(e.cmpy_cash     , 0) +
       NVL(e.local_gov_cash, 0) +
       NVL(e.univ_cash     , 0) +
       NVL(e.etc_cash      , 0)   AS tot_resch_cash_amt            /* 총연구금액(현금) */
     , NVL(e.gov_cntrbamt  , 0) +
       NVL(e.gov_subsidy, 0) + 
       NVL(e.area_share_wide, 0) +
       NVL(e.area_share_base, 0) +
       NVL(e.self_share, 0) +
       NVL(e.cmpy_cash     , 0) +
       NVL(e.cmpy_goods    , 0) +
       NVL(e.contpat_goods , 0) +
       NVL(e.local_gov_cash, 0) +
       NVL(e.univ_cash     , 0) +
       NVL(e.etc_cash      , 0)   AS tot_resch_amt                 	/* 총연구금액 */
     , a.itm_solve_base    											/* 비목해소기준 */
     , b.bsns_req_no
     , b.prj_state        	 										/* 과제상태(RBA) */  
     , fun_xodxcommst_cd_nm(TRIM(b.prj_state), 0) AS prj_state_nm   /* 과제상태명 */    
     , NVL(cd2.oh_absrp_rt, 0.0)  AS oh_absrp_rt  					/* OH흡수율 */
     , c.posi_cd      												/* 직급코드 */
     , fun_posi_nm(c.posi_cd) AS posi_nm      						/* 직급명 */
     , c.dept_cd     												/* 부서코드 */
     , fun_dept_nm(c.dept_cd, c.dept_new_ymd) AS dept_nm     		/* 부서명 */    
     , c.email           											/* E-Mail */
     , c2.email AS res_email
     , b.first_pre_prj_no     										/* 최초선행과제번호 */
     , b.curr_prj_anal        										/* 현재과제년차 */
     , b.tot_prj_yrs          										/* 총과제년수 */        
     , b.bsns_cd_inout      										/* 사업코드내외 */
     , b.bsns_cd_exclsv_agncy
     , b.bsns_cd_detls_bsns
     , fun_xodxcommst_cd_nm(b.bsns_cd_inout, 0) AS bsns_cd_inout_nm	/* 사업코드내외명 */
     , b.prj_kind 													/* 과제참여유형 */
     , b.bsns_cd_ofic												/* 관계부처 */
     , a.bugt_ctrl_psn         										/* 예산통제자 */
     , a.card_use_ex
     , b.curr_resch_rspns       									/* 연구책임자 */
     , c1.nm AS curr_resch_rspns_nm
     , c1.posi_cd AS curr_posi_cd
     , fun_posi_nm(c1.posi_cd) AS curr_posi_nm
     , c1.dept_cd AS curr_dept_cd
     , c1.dept_new_ymd AS curr_new_ymd
     , fun_dept_nm(c1.dept_cd, c1.dept_new_ymd) AS curr_dept_nm
     , c1.empno AS curr_empno    
     , NVL(x.vacct_no, '-') AS vacct_no  							/* 가상계좌 */    
     , b.note_use_ex
     , b.bankaccnt_type /* C 통합계좌, I 별도계좌, X 미입금계좌 */
     , CASE WHEN b.note_use_ex = 'Y' AND (b.note_type_cd = 'RCN002' OR NVL(s2.note_cnt, 0)  <![CDATA[ > ]]>  0) THEN 'Y' 
            ELSE CASE WHEN b.note_use_ex = 'Y' AND  NVL(s2.note_cnt, 0) = 0 THEN 'N' ELSE 'O' END END AS note_yn 
     , b.agree_direct_cost_fix_yn
     , f.reschamt_card_use_clsf
     , b.intgr_mngmt_unit 
     , (SELECT NVL(SUM(q.tot_amt),0) AS agree_amt 
          FROM resbgacctm AS x
          JOIN ( SELECT z.accnt_cd, z.itm_solve_base
                   FROM fbaitmaccnt z 
                   JOIN xodfaccnt j ON z.accnt_cd = j.accnt_cd 
                   LEFT OUTER JOIN xodxcommst c ON z.itm_clsf = c.cd AND c.cd_clsf  = 'FAE' 
                   LEFT OUTER JOIN xodxcommst d ON j.resch_accnt_clsf = d.cd 
                  WHERE z.itm_clsf IN ('FAE051','FAE055')) AS y ON x.itm_solve_base = y.itm_solve_base
          JOIN resbgagree AS q ON x.accnt_no = q.accnt_no AND y.accnt_cd = q.bugt_item
         WHERE  x.card_use_ex = 'FAJ007' AND x.accnt_no = a.accnt_no) AS agree_amt 
       , (SELECT NVL(p.gov_cntrbamt,0) AS cnt_amt
            FROM resbgacctm AS q 
            JOIN resbgagree AS p ON q.prj_no = p.prj_no
           WHERE q.card_use_ex = 'FAJ007'
             AND q.accnt_no = a.accnt_no
             AND p.bugt_item = '51120200') AS cnt_amt
       FROM resbgacctm a 
JOIN resinpmast b ON a.prj_no = b.prj_no 
JOIN humbasicinfo c ON a.accnt_rspns = c.syspayno 
LEFT JOIN humbasicinfo c2 ON a.dept_res_psn = c2.syspayno 
JOIN xodrbacode cd1 ON b.bsns_cd_bsns = cd1.bsns_cd
JOIN xodrbacode cd2 ON b.bsns_cd_detls_bsns = cd2.bsns_cd 
JOIN resinpbugt e ON b.prj_no = e.prj_no
JOIN resinpyear f ON a.prj_no = f.prj_no
LEFT JOIN humbasicinfo c1 ON b.curr_resch_rspns = c1.syspayno 
LEFT JOIN ffnvacct x ON b.bsns_req_no = x.bsns_req_no
LEFT JOIN ( SELECT prj_no, COUNT(*) note_cnt 
            FROM resnotemnt a
            JOIN xomxintfatab b ON b.req_no = a.req_no AND b.apr_state = 'XAD100'
            GROUP BY prj_no ) s2 ON a.prj_no = s2.prj_no
<where>
<if test="accnt_no != null and accnt_no != ''">
	 AND a.accnt_no = #{accnt_no}
</if>
<if test="prj_no != null and prj_no != ''">
	 AND a.prj_no = #{prj_no}
</if>
<if test="prj_nm != null and prj_nm != ''">
	 AND b.prj_nm LIKE '%'||TRIM(#{prj_nm})||'%'
</if>
<if test="prj_orign_yyyy != null and prj_orign_yyyy != ''">
	 AND b.tot_resch_prd_orign_ymd BETWEEN TRIM(#{prj_orign_yyyy})||'0101' AND TRIM(#{prj_orign_yyyy})||'1231' 
</if>
<if test="accnt_state != null and accnt_state != ''">
	 AND a.accnt_state =  #{accnt_state}
</if>
<if test="accnt_clsf != null and accnt_clsf != ''">
	 AND a.accnt_clsf   <![CDATA[ <> ]]>   #{accnt_clsf}
</if>
<if test="mngmt_clsf != null and mngmt_clsf != ''">
	 AND a.mngmt_clsf  =  #{mngmt_clsf}
</if>
<if test="accnt_rspns != null and accnt_rspns != ''">
	 AND TRIM(NVL(c.nm, '')) LIKE '%'||TRIM(#{accnt_rspns})||'%'
</if>
<if test='prj_clsf0 == "0"'> AND a.accnt_no NOT IN ( SELECT DISTINCT accnt_no FROM resbgagree WHERE '0' = #{prj_clsf0}  AND TRIM(accnt_no) != '' )</if>
<if test='prj_clsf1 == "1"'> AND a.accnt_no IN ( SELECT DISTINCT accnt_no FROM resbgagree WHERE '1' = #{prj_clsf1} AND TRIM(accnt_no) != '' ) </if>
<if test="req_no != null and req_no != ''">
	 AND a.accnt_no = ( SELECT DISTINCT accnt_no FROM resbgallow WHERE TRIM(req_no) = #{req_no})
</if>  
</where>                
ORDER BY a.accnt_no
)
  </select>  
  
  <!-- 계정별 실행예산상태, 실행예산차수 MAX, 계정상태 조회 -->
  <!-- kitech.res.exc.xda.ResBgExectSS01 -->
  <select id="selectResExcBdgetState" parameterType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo" resultType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo">
SELECT /* QueryID : kr.re.kitech.biz.res.exc.selectResExcBdgetState */ 
		  a.accnt_no   -- 계정번호  
     , NVL(x2.state, '')             AS state              -- 실행예산상태(RDC)
     , NVL(x2.state_nm, '')          AS state_nm           -- 실행예산상태명
     , NVL(x2.exec_bugt_seq_max, 0)  AS exec_bugt_seq_max  -- 실행예산차수 MAX
     , NVL(x2.req_no , '')           AS req_no             -- 전자결재신청번호
     , NVL(x2.req_ymd, '')           AS req_ymd            -- 전자결재신청일자
     , NVL(x2.req_psn, '')           AS req_psn            -- 전자결재신청자    
     , NVL(x3.apr_state, '')         AS apr_state          -- (전자결재인터페이스)결재상태
     , TRIM(DECODE(NVL(x3.apr_state, ''), '', '', fun_xodxcommst_cd_nm(x3.apr_state, 0))) AS apr_state_nm  -- (전자결재인터페이스)결재상태(명)
FROM resbgacctm a  -- 계정 MASTER
LEFT OUTER JOIN (  -- [실행예산상태, 실행예산차수 MAX Query]
         SELECT FIRST 1
                a.accnt_no    -- 계정번호
              , a.state       -- 실행예산상태(RDC)
              , c.cd_nm           AS state_nm           -- 실행예산상태명
              , a.exec_bugt_seq   AS exec_bugt_seq_max  -- 실행예산차수 MAX
              , a.req_no         -- 전자결재신청번호
              , a.req_ymd        -- 전자결재신청일자
              , a.req_psn        -- 전자결재신청자
         FROM resbgexect a  -- 실행예산관리
         LEFT JOIN xodxcommst c ON c.cd = a.state 
         WHERE a.accnt_no = #{accnt_no}
         GROUP BY a.accnt_no, a.state, c.cd_nm, a.exec_bugt_seq, a.req_no, a.req_ymd, a.req_psn
         ORDER BY a.exec_bugt_seq DESC, a.state ASC
       ) x2 ON a.accnt_no = x2.accnt_no 
LEFT OUTER JOIN xomxintfatab x3 ON x2.req_no = x3.req_no -- 전자결재 인터페이스 테이블
WHERE a.accnt_no = #{accnt_no}
ORDER BY a.accnt_no asc, x2.exec_bugt_seq_max DESC
  </select>  

  <!-- 계정별 대비목/세부비목에 대한 예산(협약예산/집행금액(원인금액포함)) 내역 조회 -->
  <!-- kitech.res.exc.xda.ResBgAgreeMS01 -->
  <select id="selectResExcBdgetAgree" parameterType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo" resultType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo">
SELECT /* QueryID : kr.re.kitech.biz.res.exc.selectResBgAgree */ 
		 x1.itm_solve_base  /* 비목해소기준 */
     , x1.seq             	/* 순번(정렬순서) */
     , x1.bugt_item       	/* 회계코드(예산항목) */
     , x1.bugt_item_nm    	/* 회계코드명(대비목명) */
     , x1.itm_clsf        	/* 비목구분(비목구분) */
     , x1.itm_clsf_nm     	/* 비목구분명(세부비목명) */
     , x1.resch_accnt_clsf 	/* 연구계정구분 */
     , x1.resch_accnt_clsf_nm      /* 연구계정구분명 */
     , NVL(x2.prj_no    , '') AS prj_no      /* 과제번호 */
     , NVL(x2.accnt_clsf, '') AS accnt_clsf  /* 계정구분 */
     , NVL(x2.anal      , '') AS anal        /* 년차 */
     , NVL(x3.accnt_no  , '') AS accnt_no    /* 계정번호 */
     , NVL(x2.bg_agree_tot_sum, 0) AS bg_agree_tot_sum     /* 협약예산 SUM */
     , NVL(x3.enfrc_cause_amt , 0) AS enfrc_cause_amt      /* 집행(+원인)금액 */
     , DECODE(NVL(x2.bugt_item, ''),  '', 'N', 'Y') AS bugt_item_yn
     , NVL(x2.agrt_cryfwd_amt, 0) AS agrt_cryfwd_amt /* 이지바로,RCMS 이월금액 */
  FROM ( /* 비목해소기준 템플릿 목록 조회  */
         SELECT a.itm_solve_base    				/* 비목해소기준 */
              , a.seq               				/* 순번(정렬순서) */
              , a.accnt_cd   AS bugt_item      		/* 회계코드(예산항목) */
              , b.accnt_cd_abbr   AS bugt_item_nm   /* 회계코드명(대비목명) */
              , a.itm_clsf   						/* 비목구분(비목구분) */
              , c.cd_nm    AS itm_clsf_nm    		/* 비목구분명(세부비목명) */
              , b.resch_accnt_clsf  				/* 연구계정구분 */
              , d.cd_nm    AS resch_accnt_clsf_nm  	/* 연구계정구분명 */
           FROM fbaitmaccnt a 
           JOIN xodfaccnt b ON a.accnt_cd = b.accnt_cd 
           LEFT OUTER JOIN xodxcommst c ON a.itm_clsf = c.cd AND c.sys_clsf IN ('F', 'FIN') AND c.cd_clsf  = 'FAE' 
           LEFT OUTER JOIN xodxcommst d ON  b.resch_accnt_clsf = d.cd 
           WHERE a.itm_solve_base = #{itm_solve_base} 
           ORDER BY a.itm_solve_base, a.seq
       ) x1
LEFT OUTER JOIN ( /* 협약예산 내역 조회 */
         SELECT  b.itm_solve_base   /* 비목해소기준  */
              , a.prj_no            /* 과제번호  */
              , a.accnt_clsf        /* 계정구분  */
              , a.anal              /* 년차  */
              , a.bugt_item         /* 예산항목  */
              , a.accnt_no          /* 계정번호  */
              , NVL(a.gov_cntrbamt  , 0)  +   /* 정부출연금  */
                nvl(a.gov_subsidy    , 0) +                        /* 국고보조금  */
                nvl(a.area_share_wide, 0) +                        /* 지방비부담금(광역)  */
                nvl(a.area_share_base, 0) +                        /* 지방비부담금(기초)  */
                nvl(a.self_share    , 0) +                         /* 자기부담금  */
                NVL(a.cmpy_cash     , 0)  +   /* 기업현금  */
                NVL(a.intrst_amt    , 0)  +   /* 이자금액  */
                NVL(a.cryfwd_amt    , 0)  +   /* 이월금액  */
                NVL(a.local_gov_cash, 0)  +   /* 지방정부현금  */
                NVL(a.univ_cash     , 0)  +   /* 대학현금  */
                NVL(a.etc_cash      , 0)  AS bg_agree_tot_sum  /* 기타현금 (협약예산 SUM)  */
              , NVL(a.agrt_cryfwd_amt, 0)  AS agrt_cryfwd_amt  /* 이지바로,RCMS 이월금액  */
           FROM resbgagree a 
           LEFT JOIN resbgacctm b ON a.prj_no = b.prj_no AND a.accnt_no = b.accnt_no  /* 협약예산/계정 MASTER */
           WHERE a.accnt_no = #{accnt_no1}    										  /* 계정번호 */
             AND a.prj_no = #{prj_no}      											  /* 과제번호	*/
             AND b.itm_solve_base = #{itm_solve_base}    							  /* 비목해소기준 */
             AND a.accnt_clsf  = 'RAR001'  /* 계정구분이 [RAR001](Main계정)인 것만... */
       ) x2 ON x1.bugt_item = x2.bugt_item AND x1.itm_solve_base = x2.itm_solve_base 
LEFT OUTER JOIN ( /* 집행금액(원인금액포함) 내역 조회 */
         SELECT a.bugt_yr           /* 예산년도  */
              , a.fomat_unit        /* 편성단위  */
              , a.bugt_item_clsf    /* 예산항목구분  */
              , a.accnt_no          /* 계정번호  */
              , a.accnt_cd          /* 회계코드  */
              , a.close_yr          /* 마감년도  */
              , NVL(a.bugt_amt , 0)       AS bugt_amt   							/* 예산금액 */
              , NVL(a.cause_amt, 0)       AS cause_amt   							/* 원인금액 */
              , NVL(a.preyr_enfrc_amt, 0) + NVL(a.enfrc_amt, 0)   AS enfrc_amt  	/* 집행금액 */
              , NVL(a.cause_amt, 0) + NVL(a.preyr_enfrc_amt, 0) +
                NVL(a.enfrc_amt, 0)       AS enfrc_cause_amt      					/* 집행(+원인)금액 */
           FROM bblbugtactrslt a
           WHERE a.accnt_no = #{accnt_no}   
           AND   trim( NVL(a.close_yr,''))  <![CDATA[ > ]]> ''      
        ) x3 ON x1.bugt_item = x3.accnt_cd 
ORDER BY x1.seq, x1.itm_clsf, x1.bugt_item
  </select>     

  <!-- 계정별 대비목/세부비목에 대한 차수별 실행예산 내역 조회 -->
  <!-- kitech.res.exc.xda.ResBgExectMS01 -->
  <select id="selectResExcBdgetExect" parameterType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo" resultType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo">
SELECT /* QueryID : kr.re.kitech.biz.res.exc.selectResExcBdgetExect */ 
       x1.itm_solve_base          as itm_solve_base    -- 비목해소기준
     , x1.seq                     as seq               -- 순번(정렬순서)
     , x1.bugt_item               as bugt_item         -- 회계코드(예산항목)
     , x1.bugt_item_nm            as bugt_item_nm      -- 회계코드명(대비목명)
     , x1.itm_clsf                as itm_clsf          -- 비목구분(비목구분)
     , x1.itm_clsf_nm             as itm_clsf_nm       -- 비목구분명(세부비목명)
     , x1.resch_accnt_clsf        as resch_accnt_clsf  -- 연구계정구분
     , nvl(x2.accnt_no     , '')  as accnt_no          -- 계정번호
     , nvl(x2.exec_bugt_seq, '')  as exec_bugt_seq     -- 실행예산차수
     , nvl(x2.amt          , 0 )  as amt               -- 금액
     , nvl(x2.state        , '')  as state             -- 실행예산상태(RDC)
     , nvl(case when x2.exec_bugt_seq <![CDATA[ < ]]> 10 then to_char(x2.exec_bugt_seq, '0#') else to_char(x2.exec_bugt_seq, '##') end, 'XX')
                                  as grid_column_id    -- 그리드 컬럼 ID
     , x2.req_no                  as req_no            -- 전자결재신청번호
     , x2.req_ymd                 as req_ymd           -- 전자결재신청일자
     , x2.req_psn                 as req_psn           -- 전자결재신청자
  FROM
       (
         -- 비목해소기준 템플릿 목록 조회
         SELECT
                a.itm_solve_base    as itm_solve_base    -- 비목해소기준
              , a.seq               as seq               -- 순번(정렬순서)
              , a.accnt_cd          as bugt_item         -- 회계코드(예산항목)
              , b.accnt_cd_abbr     as bugt_item_nm      -- 회계코드명(대비목명)
              , a.itm_clsf          as itm_clsf          -- 비목구분(비목구분)
              , c.cd_nm             as itm_clsf_nm       -- 비목구분명(세부비목명)
              , b.resch_accnt_clsf  as resch_accnt_clsf  -- 연구계정구분
           FROM fbaitmaccnt a join xodfaccnt  b on ( a.accnt_cd = b.accnt_cd )
                              left outer join xodxcommst c on ( a.itm_clsf = c.cd AND c.sys_clsf in ('F', 'FIN') AND c.cd_clsf  = 'FAE' )
           WHERE ( a.itm_solve_base = #{itm_solve_base} )
           ORDER BY a.itm_solve_base, a.seq
       ) x1
       LEFT OUTER JOIN
       (
         -- 계정별 대비목/세부비목에 대한 차수별 실행예산 내역 조회
         SELECT
                a.accnt_no        as accnt_no        -- 계정번호
              , a.exec_bugt_seq   as exec_bugt_seq   -- 실행예산차수
              , a.bugt_item       as bugt_item       -- 예산항목
              , a.amt             as amt             -- 금액
              , a.state           as state           -- 실행예산상태(RDC)
              , a.req_no          as req_no          -- 전자결재신청번호
              , a.req_ymd         as req_ymd         -- 전자결재신청일자
              , a.req_psn         as req_psn         -- 전자결재신청자
           FROM resbgexect a  -- 실행예산관리
           WHERE ( a.accnt_no      = #{accnt_no} )  -- 계정번호
             AND ( a.exec_bugt_seq = #{exec_bugt_seq} )  -- 실행예산차수
           ORDER BY a.accnt_no, a.exec_bugt_seq, a.bugt_item
       ) x2
       ON ( x1.bugt_item = x2.bugt_item )
  ORDER BY x1.seq, x1.itm_clsf, x1.bugt_item
  </select>
  
  <!-- 실행예산 변경사유 수정 -->
  <!-- kitech.res.exc.xda.ResBgExereSU01 -->
  <update id="updateResExcBdgetExere" parameterType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo">
UPDATE /* QueryID : kr.re.kitech.biz.res.exc.updateResExcBdgetExere */ 
		 resbgexere
  SET
      resn_contnt    = #{resn_contnt}        -- 사유내용
    , attach_file    = #{attach_file}        -- 첨부파일
    , updt_syspayno  = #{updt_syspayno}        -- 수정시스템개인번호
    , updt_daytm     = current  -- 수정일시
  WHERE accnt_no      = #{accnt_no}       -- 계정번호
    AND exec_bugt_seq = #{exec_bugt_seq}       -- 실행예산차수
  </update>  

  <!-- 실행예산 내역 수정 -->
  <!-- kitech.res.exc.xda.ResBgExectSU01 --> 
  <update id="updateResExcBdgetExect" parameterType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo">
UPDATE /* QueryID : kr.re.kitech.biz.res.exc.updateResBdgetExect */ 
		 resbgexect
  SET
      amt            = #{amt}        -- 금액
    , updt_syspayno  = #{updt_syspayno}        -- 수정시스템개인번호
    , updt_daytm     = current  -- 수정일시
  WHERE accnt_no      = #{accnt_no}       -- 계정번호
    AND exec_bugt_seq = #{exec_bugt_seq}       -- 실행예산차수
    AND bugt_item     = #{bugt_item}       -- 예산항목
  </update> 

  <!-- 실행예산 내역 등록 -->
  <!-- kitech.res.exc.xda.ResBgExectSI01 --> 
  <insert id="insertResExcBdgetExect" parameterType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo">
INSERT /* QueryID : kr.re.kitech.biz.res.exc.insertResExcBdgetExect */ 
		 INTO resbgexect
  (
      accnt_no        -- 계정번호
    , exec_bugt_seq   -- 실행예산차수
    , bugt_item       -- 예산항목
    , amt             -- 금액
    , state           -- 상태
    , req_no          -- 전자결재신청번호
    , req_ymd         -- 전자결재신청일자
    , req_psn         -- 전자결재신청자
    , regst_syspayno  -- 등록시스템개인번호
    , regst_daytm     -- 등록일시
    , updt_syspayno   -- 수정시스템개인번호
    , updt_daytm      -- 수정일시
  )
  VALUES
  (
      #{accnt_no}               -- 계정번호
    , #{exec_bugt_seq}               -- 실행예산차수
    , #{bugt_item}               -- 예산항목
    , #{amt}               -- 금액
    , #{state}               -- 상태
    , #{req_no}               -- 전자결재신청번호
    , #{req_ymd}               -- 전자결재신청일자
    , #{req_psn}               -- 전자결재신청자
    , #{regst_syspayno}               -- 등록시스템개인번호
    , current         -- 등록일시
    , null            -- 수정시스템개인번호
    , null            -- 수정일시
  )
  </insert>
     
  <!-- 실행예산 변경사유 등록 -->
  <!-- kitech.res.exc.xda.ResBgExereSI01 -->
  <insert id="insertResExcBdgetExere" parameterType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo">
INSERT /* QueryID : kr.re.kitech.biz.res.exc.insertResExcBdgetExere */ 
		 INTO resbgexere
  (
      accnt_no        -- 계정번호
    , exec_bugt_seq   -- 실행예산차수
    , resn_contnt     -- 사유내용
    , attach_file     -- 첨부파일
    , regst_syspayno  -- 등록시스템개인번호
    , regst_daytm     -- 등록일시
    , updt_syspayno   -- 수정시스템개인번호
    , updt_daytm      -- 수정일시
  )
  VALUES
  (
      #{accnt_no}               -- 계정번호
    , #{exec_bugt_seq}               -- 실행예산차수
    , #{resn_contnt}               -- 첨부파일
    , #{attach_file}               -- 사유내용
    , #{regst_syspayno}               -- 등록시스템개인번호
    , current         -- 등록일시
    , null            -- 수정시스템개인번호
    , null            -- 수정일시
  )
  </insert>  

  <!-- 실행예산신청번호를 가지고 과제번호,계정번호 가져오기 -->
  <!-- kitech.res.exc.xda.ResBgExectSS02 -->
  <select id="selectResExcBdgetPrjAccntNoByReqNo" parameterType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo" resultType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo">
select /* QueryID : kr.re.kitech.biz.res.exc.selectResExcBdgetPrjAccntNoByReqNo */ 
		  a.prj_no , a.accnt_no , a.itm_solve_base
          from resbgacctm a  , ( select distinct accnt_no from resbgexect where req_no = #{req_no} )  b 
           where a.accnt_no = b.accnt_no
  </select>
  
  <!-- 실행예산 신청시 계정상태 변경 -->
  <!-- kitech.res.exc.xda.ResBgExectSU04 -->
  <update id="updateResExcBgacctmState" parameterType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo">
UPDATE /* QueryID : kr.re.kitech.biz.res.exc.updateResExcBgacctmState */ 
		 resbgacctm 
SET accnt_state = DECODE(#{exec_bugt_seq}, '1', 'RAK011', #{accnt_state}), 
    /*삭제대상 차수가 1차일 경우 계정상태는 실행예산미편성으로 한다*/
    updt_syspayno = #{updt_syspayno},
    updt_daytm = SYSDATE   
WHERE accnt_no = #{accnt_no}
  </update>  
  
  <!-- 실행예산 편성 삭제 -->
  <!-- kitech.res.exc.xda.ResBgExectDD01 -->
  <delete id="deleteResExcBgExect" parameterType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo">
DELETE /* QueryID : kr.re.kitech.biz.res.exc.deleteResExcBgExect */ 
		 FROM resbgexect WHERE req_no = #{req_no} AND exec_bugt_seq = #{exec_bugt_seq}
  </delete>  

  <!-- 실행예산 편성 변경 사유 삭제 -->
  <!-- kitech.res.exc.xda.ResBgExectDD02 -->  
  <delete id="deleteResExcBgExere" parameterType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo">
DELETE /* QueryID : kr.re.kitech.biz.res.exc.deleteResBgExect */ 
		 FROM resbgexere WHERE accnt_no = #{accnt_no} AND exec_bugt_seq = #{exec_bugt_seq}
  </delete>  
  
  <!-- 위탁사업계획서 존재유무 확인 -->
  <!-- kitech.res.exc.xda.ConsWorkFileCHK -->
  <select id="selectResExcConsWorkFile" parameterType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo" resultType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo">
select /* QueryID : kr.re.kitech.biz.res.exc.selectResExcConsWorkFile */ 
		 cons_work_attach_file_no as cons_work_file from resappmast a 
join resinpmast b on a.bsns_req_no = b.bsns_req_no
join resbgacctm c on b.prj_no = c.prj_no 
where c.accnt_no = #{accnt_no}
  </select>  

  <!-- 외부전문기술활용비, 국제공동연구 직접비 체크 -->
  <!-- kitech.res.exc.xda.DrctAmtCHK05 -->
  <select id="selectResExcDrctAmtChk" parameterType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo" resultType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo">
/*외부전문기술활용비가 직접비보다 크면 'Y' 작으면 'N'*/
/* 20221229 이월금액(cryfwd_amt)은 일단 제외한다*/
/*검증은 기존 하나에서 2가지로 분리하여 진행*/
/*메인+서브의 협약예산 <![CDATA[ < ]]> 메인+서브의 실행예산이면 검증에 걸림*/
/*이월 협약예산 <![CDATA[ < ]]> 이월 실행예산이면 검증에 걸림*/
SELECT /* QueryID : kr.re.kitech.biz.res.exc.selectResExcDrctAmtChk */ 
		 CASE WHEN drct_amt * 0.4 <![CDATA[ < ]]> amt
            THEN 'Y'
            ELSE 'N'
             END AS drct_chk
      , NVL(amt,0) AS amt  -- 메인 + 서브 실행예산
      , NVL(agreeAmt,0) AS agree_amt  -- 메인 + 서브 협약예산
      , NVL(cryfwd_amt,0) AS cryfwd_amt  -- 이월 실행예산
      , NVL(cryfwd_agreeAmt,0) AS cryfwd_agree_amt  -- 이월 협약예산
      , NVL(amt2,0) AS amt2  -- 메인 + 서브 실행예산
      , NVL(agreeAmt2,0) AS agree_amt2  -- 메인 + 서브 협약예산
      , NVL(cryfwd_amt2,0) AS cryfwd_amt2  -- 이월 실행예산
      , NVL(cryfwd_agreeAmt2,0) AS cryfwd_agree_amt2  -- 이월 협약예산
  FROM (SELECT ((NVL(z.gov_cntrbamt  , 0) + NVL(z.gov_subsidy, 0) + 
                 NVL(z.area_share_wide, 0) + NVL(z.area_share_base, 0) +
                 NVL(z.self_share, 0) + NVL(z.cmpy_cash     , 0) +
                 NVL(z.cmpy_goods    , 0) + NVL(z.contpat_goods , 0) +
                 NVL(z.local_gov_cash, 0) + NVL(z.univ_cash     , 0) +
                 NVL(z.etc_cash      , 0)) - NVL(y.amt, 0))  AS drct_amt -- 직접비
              , ( SELECT NVL(SUM(a.amt),0) AS amt     
                    FROM resbgexect AS a
                    JOIN (SELECT accnt_no,MAX(exec_bugt_seq) AS exec_bugt_seq
                            FROM resbgexect  
                           WHERE  accnt_no LIKE '%'||#{accnt_no}||'%'  AND SUBSTR(accnt_no,8,1) != 'Z'
                           GROUP BY 1
                         ) AS b ON a.accnt_no = b.accnt_no AND a.exec_bugt_seq = b.exec_bugt_seq
                   WHERE a.bugt_item IN (SELECT accnt_cd FROM xodfaccnt
                                             WHERE resch_accnt_clsf='FBL340')        -- 외부전문기술활용비
                     AND a.accnt_no LIKE '%'||#{accnt_no}||'%'
                ) AS amt
              , ( SELECT NVL(SUM(a.amt),0) AS amt     
                    FROM resbgexect AS a
                    JOIN (SELECT accnt_no,MAX(exec_bugt_seq) AS exec_bugt_seq
                            FROM resbgexect  
                           WHERE  accnt_no LIKE '%'||#{accnt_no}||'%'  AND SUBSTR(accnt_no,8,1) = 'Z'
                           GROUP BY 1
                         ) AS b ON a.accnt_no = b.accnt_no AND a.exec_bugt_seq = b.exec_bugt_seq
                   WHERE a.bugt_item IN (SELECT accnt_cd FROM xodfaccnt
                                             WHERE resch_accnt_clsf='FBL340')        -- 외부전문기술활용비
                     AND a.accnt_no LIKE '%'||#{accnt_no}||'%'
                ) AS cryfwd_amt
               , ( SELECT NVL(SUM(a.amt),0) AS amt     
                    FROM resbgexect AS a
                    JOIN (SELECT accnt_no,MAX(exec_bugt_seq) AS exec_bugt_seq
                            FROM resbgexect  
                           WHERE  accnt_no LIKE '%'||#{accnt_no}||'%'  AND SUBSTR(accnt_no,8,1) != 'Z'
                           GROUP BY 1
                         ) AS b ON a.accnt_no = b.accnt_no AND a.exec_bugt_seq = b.exec_bugt_seq
                   WHERE a.bugt_item IN (SELECT accnt_cd FROM xodfaccnt
                                                       WHERE resch_accnt_clsf='FBL360')        -- 국제공동연구
                     AND a.accnt_no LIKE '%'||#{accnt_no}||'%'
                ) AS amt2
               , ( SELECT NVL(SUM(a.amt),0) AS amt     
                    FROM resbgexect AS a
                    JOIN (SELECT accnt_no,MAX(exec_bugt_seq) AS exec_bugt_seq
                            FROM resbgexect  
                           WHERE  accnt_no LIKE '%'||#{accnt_no}||'%' AND SUBSTR(accnt_no,8,1) = 'Z'
                           GROUP BY 1
                         ) AS b ON a.accnt_no = b.accnt_no AND a.exec_bugt_seq = b.exec_bugt_seq
                   WHERE a.bugt_item IN (SELECT accnt_cd FROM xodfaccnt
                                                       WHERE resch_accnt_clsf='FBL360')        -- 국제공동연구
                     AND a.accnt_no LIKE '%'||#{accnt_no}||'%'
                ) AS cryfwd_amt2
              , (
                     SELECT SUM(tot_amt)
                       FROM resbgagree 
                          WHERE bugt_item IN (SELECT accnt_cd FROM xodfaccnt
                                                WHERE resch_accnt_clsf='FBL340') -- 외부전문기술활용비
                            AND accnt_no LIKE '%'||#{accnt_no}||'%' AND SUBSTR(accnt_no,8,1) != 'Z'
                   ) AS agreeAmt  
              , (
                     SELECT SUM(NVL(agrt_cryfwd_amt,0))
                       FROM resbgagree 
                          WHERE bugt_item IN (SELECT accnt_cd FROM xodfaccnt
                                                WHERE resch_accnt_clsf='FBL340') -- 외부전문기술활용비
                            AND accnt_no LIKE '%'||#{accnt_no}||'%' AND accnt_clsf = 'RAR001'
                   ) AS cryfwd_agreeAmt
                  , (
                    SELECT SUM(tot_amt)
                           FROM resbgagree 
                          WHERE bugt_item IN (SELECT accnt_cd FROM xodfaccnt
                                                       WHERE resch_accnt_clsf='FBL360')  -- 국제공동연구
                            AND accnt_no LIKE '%'||#{accnt_no}||'%' AND SUBSTR(accnt_no,8,1) != 'Z'
                   ) AS agreeAmt2 
                  , (
                    SELECT SUM(NVL(agrt_cryfwd_amt,0))
                           FROM resbgagree 
                          WHERE bugt_item IN (SELECT accnt_cd FROM xodfaccnt
                                                       WHERE resch_accnt_clsf='FBL360')  -- 국제공동연구
                            AND accnt_no LIKE '%'||#{accnt_no}||'%' AND accnt_clsf = 'RAR001'
                   ) AS cryfwd_agreeAmt2
          FROM resbgacctm x
          JOIN( SELECT  a.accnt_no
                      , SUM(a.amt) AS amt
                  FROM resbgexect a  -- 실행예산관리
                  JOIN (SELECT accnt_no, MAX(exec_bugt_seq) AS exec_bugt_seq 
                          FROM resbgexect  
                         WHERE  accnt_no LIKE '%'||#{accnt_no}||'%'   
                         GROUP BY accnt_no ) b ON a.accnt_no = b.accnt_no AND a.exec_bugt_seq  = b.exec_bugt_seq
                 WHERE a.accnt_no LIKE '%'||#{accnt_no}||'%'
                   AND a.bugt_item IN (  SELECT c.accnt_cd AS bugt_item    
                                           FROM fbaitmaccnt c 
                                           JOIN xodfaccnt  d on ( c.accnt_cd = d.accnt_cd )
                                           JOIN xodxcommst e on ( c.itm_clsf = e.cd AND e.sys_clsf in ('F', 'FIN') 
                                                          AND e.cd_clsf  = 'FAE' ) AND e.cd IN ('FAE031','FAE055') 
                                          WHERE c.itm_solve_base = #{itm_solve_base}  AND d.accnt_cd_abbr IN ('간접경비','국내위탁연구개발비','국제공동연구개발비','연구개발부담비')
                                       )
                  GROUP BY a.accnt_no
                ) AS y ON x.accnt_no = y.accnt_no
           JOIN resinpbugt AS z ON x.prj_no = z.prj_no
          WHERE x.accnt_clsf = 'RAR001'   
        )
  </select>  

  <!-- 실행예산 내 외부전문기술활용비를 협약예산과 체크 -->
  <!-- kitech.res.exc.xda.RstAmtChk02 -->
  <select id="selectResExcRstAmtChk" parameterType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo" resultType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo">
/* [외부전문기술활용비] [실행예산]이 [협약예산]보다 큰 경우 'Y'  */
SELECT /* QueryID : kr.re.kitech.biz.res.exc.selectResExcRstAmtChk */ 
		 CASE WHEN exectAmt <![CDATA[ > ]]> agreeAmt
            THEN 'Y'
            ELSE 'N'
             END AS rstAmtChk
  FROM ( SELECT SUM(a.amt) AS exectAmt,     
                (SELECT SUM(tot_amt)
                   FROM resbgagree 
                  WHERE bugt_item = '51120130' -- 외부전문기술활용비
                    AND accnt_no LIKE '%'||#{accnt_no}||'%' AND SUBSTR(accnt_no,8,1) != 'Z'
                ) AS agreeAmt                  -- 협약예산_외부전문기술활용비
          FROM resbgexect AS a
          JOIN (SELECT accnt_no,MAX(exec_bugt_seq) AS exec_bugt_seq
                  FROM resbgexect  
                 WHERE  accnt_no LIKE '%'||#{accnt_no}||'%' AND SUBSTR(accnt_no,8,1) != 'Z'
                 GROUP BY 1
                ) AS b ON a.accnt_no = b.accnt_no AND a.exec_bugt_seq = b.exec_bugt_seq
         WHERE a.bugt_item = '51120130'         -- 외부전문기술활용비
           AND a.accnt_no LIKE '%'||#{accnt_no}||'%'
        )
  </select>  
  
  <!-- 계정번호로 sub계정 있는지 체크 -->
  <!-- kitech.res.exc.xda.mainAccntCheck01 -->
  <select id="selectMainAccntChk" parameterType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo" resultType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo">
SELECT /* QueryID : kr.re.kitech.biz.res.exc.selectMainAccntChk */ 
		 count(*) as count FROM resbgacctm 
WHERE prj_no = (SELECT prj_no FROM resbgacctm WHERE accnt_no = #{accnt_no})  -- 과제번호
AND accnt_clsf = 'RAR002'
  </select>  
  
  <!-- 과제별 타계정 O/H 흡수 비목(예산항목) 금액 조회 -->
  <select id="selectResBgAgreeSum" parameterType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo" resultType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo">
SELECT /* QueryID : kr.re.kitech.biz.res.exc.selectResBgAgreeSum */ 
       max(x1.anal)                       as max_anal             /* 년차(Max) */
     , sum(x1.bg_agree_tot_sum)           as othr_accnt_amt_sum   /* 타계정(O/H 흡수 비목(예산항목)) 금액 SUM */
  FROM (
         SELECT
                b.itm_solve_base          as itm_solve_base       /* 비목해소기준 */
              , a.prj_no                  as prj_no               /* 과제번호 */
              , a.accnt_clsf              as accnt_clsf           /* 계정구분 */
              , a.anal                    as anal                 /* 년차 */
              , a.bugt_item               as bugt_item            /* 예산항목 */
              , a.accnt_no                as accnt_no             /* 계정번호 */
              , nvl(a.gov_cntrbamt  , 0)  +                       /* 정부출연금 */
                nvl(a.gov_subsidy    , 0) +                       /* 국고보조금 */
                nvl(a.area_share_wide, 0) +                       /* 지방비부담금(광역) */
                nvl(a.area_share_base, 0) +                       /* 지방비부담금(기초) */
                nvl(a.self_share    , 0) +                        /* 자기부담금 */
                nvl(a.cmpy_cash     , 0)  +                       /* 기업현금 */
                nvl(a.intrst_amt    , 0)  +                       /* 이자금액 */
                nvl(a.cryfwd_amt    , 0)  +                       /* 이월금액 */
                nvl(a.local_gov_cash, 0)  +                       /* 지방정부현금 */
                nvl(a.univ_cash     , 0)  +                       /* 대학현금 */
                nvl(a.etc_cash      , 0)                          /* 기타현금 */
                                          as bg_agree_tot_sum     /* 협약예산 SUM */
              , c.resch_accnt_clsf        as resch_accnt_clsf     /* 연구계정구분 */
           FROM resbgagree a LEFT JOIN resbgacctm b ON (a.prj_no = b.prj_no AND a.accnt_no = b.accnt_no )  /* 협약예산/계정 MASTER */
                             LEFT JOIN xodfaccnt  c ON (a.bugt_item = c.accnt_cd )
           WHERE a.accnt_no <![CDATA[ <> ]]> #{accnt_no}  /* 계정번호  */
             AND a.prj_no   =  #{prj_no}  /* 과제번호 */
             AND c.resch_accnt_clsf IN ('FBL010', 'FBL070', 'FBL170', 'FBL200' ,'FBL150' ,'FBL205' ,'FBL210' ,'FBL220' ,'FBL223' ,'FBL225') 
             AND b.accnt_clsf in ('RAR001','RAR002')
                    /* [FBL010]"내부인건비", [FBL070]"내부장비임차료", [FBL170]"간접경비", [FBL200]"연구개발준비금" */
                    /* FBL150 지적재산권 경비 , FBL205  연구개발능률성과급, FBL210 과학문화활동비 , FBL220 연구실안전관리비 , FBL223 연구보안관리비, FBL225 연구윤리활동비 */
       ) x1
  </select>  
  <!-- 해당 계정번호/실행예산차수에 대한 신청일자/신청자 및 상태를 수정 -->
  <!-- kitech.res.exc.xda.ResBgExectSU02 -->
  <update id="updateResExcBdgetExectState" parameterType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo">
UPDATE /* QueryID : kr.re.kitech.biz.res.exc.updateResExcBdgetExectState */ 
		 resbgexect  -- 실행예산관리
  SET
      state   = #{state}  -- 상태
    , req_ymd = #{req_ymd}  -- (전자결재)신청일자
    , req_psn = #{req_psn}  -- (전자결재)신청자
  WHERE ( 1 = 1 )
    AND ( accnt_no      = #{accnt_no} )  -- 계정번호
    AND ( exec_bugt_seq = #{exec_bugt_seq} )  -- 실행예산차수
  </update>  
  
  <!-- 메인계정책임자 조회 -->
  <!-- kitech.res.com.xda.XodrResManSS03 -->
  <select id="selectBudgetResMan" parameterType="kr.re.kitech.biz.res.exc.vo.ResExcExeBdgetInfoVo" resultType="kr.re.kitech.biz.fin.com.vo.AutoBugtVo">
SELECT /* QueryID : kr.re.kitech.biz.res.exc.selectBudgetResMan */ 
		 bugt_ctrl_psn FROM resbgacctm 
WHERE accnt_no = (SELECT main_accnt_no FROM resbgacctm WHERE accnt_no = #{accnt_no})
  </select>
  
</mapper>