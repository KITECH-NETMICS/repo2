<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ev="http://www.w3.org/2001/xml-events"
	xmlns:w2="http://www.inswave.com/websquare" xmlns:xf="http://www.w3.org/2002/xforms">
	<head meta_programName="출원업무TAB메인">
		<w2:type>DEFAULT</w2:type>
		<w2:buildDate/>
		<xf:model>
			<xf:instance>
				<data />
			</xf:instance>
			<w2:dataCollection baseNode="map">
				
				<w2:dataMap baseNode="map" id="dma_search">
				  <w2:keyInfo>				
				       <w2:key id="todo_auth" name="todo_auth" dataType="text"></w2:key>
				       <w2:key id="ref_key" name="ref_key" dataType="text"></w2:key>
				       <w2:key id="page_gbn" name="page_gbn" dataType="text"></w2:key>
				 </w2:keyInfo>
				</w2:dataMap>
				
				<w2:dataMap baseNode="map" id="dma_rev_param">
				  	<w2:keyInfo>				
				       <w2:key id="req_no" name="req_no" dataType="text"></w2:key>
				       <w2:key id="mngmt_no" name="mngmt_no" dataType="text"></w2:key>
				       <w2:key id="ref_no" name="ref_no" dataType="text"></w2:key>
				       <w2:key id="page_detail_id" name="page_detail_id" dataType="text"></w2:key>
				       <w2:key id="job_title" name="job_title" dataType="text"></w2:key>
				       <w2:key id="page_id" name="page_id" dataType="text"></w2:key>
				       <w2:key id="work_id" name="work_id" dataType="text"></w2:key>
				       <w2:key id="main_key" name="main_key" dataType="text"></w2:key>
				 	</w2:keyInfo>
				</w2:dataMap>
				
			</w2:dataCollection>
			<w2:workflowCollection></w2:workflowCollection>

			<!-- 출원업무공통탭 파라미터 조회 -->
			<xf:submission id="sbm_svcpatpcmmansr01" 
						   ref='data:json,dma_search' 
						   target='data:json,{"id":"dma_rev_param","key":"patPcmMainVo"}' 
						   action="SvcPATPCMMANSR01.pwkjson" 
						   ev:submitdone="scwin.sbm_svcpatpcmmansr01_done" method="post" mediatype="application/json" encoding="UTF-8" mode="asynchronous"></xf:submission>
						   
		</xf:model>
		<script src="/cm/js/biz/pat.js" cache="false" />
		<script type="text/javascript" lazy="false"><![CDATA[
 	/****************************************************
 	 * 화면 설명 : 출원업무TAB메인
 	 * 변경 이력 : 2023-09-04	이대훈	최초 작성
 	 ****************************************************/
	 
 	scwin.param = {};
 	scwin.GLOBAL_VARS = {};

	/**
	 * 페이지 로딩 이벤트
	 */
	scwin.onpageload = function() {
	
		scwin.GLOBAL_VARS = {
			req_no: com.getParameter().req_no,
			mngmt_no: com.getParameter().mngmt_no,
			pageId: com.getParameter().pageId || ''
		}
		scwin.param = com.getParameter();
		if (scwin.param.param4 === "apr") {
			btn_list.hide();
			const aprReqNo = scwin.param.req_no;
			scwin.param.ref_key = aprReqNo;
		}

		const roleCode = com.getLoginInfo('roleCode');
		if (roleCode.lastIndexOf("1016121") > 0) { // 특허팀
            dma_search.set("todo_auth", "1");
		} else { // 발명자
            dma_search.set("todo_auth", "0");
		}
		
		dma_search.set("ref_key", scwin.param.ref_key);
		// dma_search.set("ref_key", "I20202250001");
		if (typeof scwin.param.param5 === 'undefined' ) {
			dma_search.set("page_gbn", "ing");
		} else {
			dma_search.set("page_gbn", "end");
		}
			
		com.execute(sbm_svcpatpcmmansr01);
	};
	
	scwin.sbm_svcpatpcmmansr01_done = async function(e) {
	
		scwin.dataCollectionTrim(dma_rev_param);			
        scwin.param.req_no = dma_rev_param.get("req_no");
        scwin.param.mngmt_no = dma_rev_param.get("mngmt_no");
        
        if (scwin.param.param4 === "apr") {
			const aprRefKey = scwin.param.ref_key;
			if(aprRefKey.substr(0,3) === "R26"){
				tabMain.deleteTab(1);
				dma_rev_param.set("main_key", aprRefKey);
			} 
		}
        const rowJSON = dma_rev_param.getJSON();
        rowJSON.req_no = rowJSON.req_no ? rowJSON.req_no : scwin.GLOBAL_VARS.req_no;  
        rowJSON.mngmt_no = rowJSON.mngmt_no ? rowJSON.mngmt_no : scwin.GLOBAL_VARS.mngmt_no;
        
        let dataObject = {
            "type" : "json", 
            "name" : "param",
            "data" : rowJSON
        };
                
        if (typeof scwin.param.param5 === "undefined") {
            const serviceId = dma_rev_param.get("page_id");
            console.log("ret1 : " + serviceId );
            if(serviceId !== ""){
	            const ret1 = await scwin.get_menu_objAsPromise(serviceId);
	            dcrFrame.setSrc(ret1.serviceNewUrl, {"dataObject": dataObject});
            }else{
            	tabMain.deleteTab(0);
            	btnFile.hide();
            	btnMail.hide();
            }
            const ret2 = await scwin.get_menu_objAsPromise('IA07');
            mailFrame.setSrc(ret2.serviceNewUrl, {"dataObject": dataObject});

            const ret3 = await scwin.get_menu_objAsPromise('IA08');
            processFrame.setSrc(ret3.serviceNewUrl, {"dataObject": dataObject});

        } else {
            tabMain.deleteTab(0);
            tabMain.deleteTab(0);
            btnFile.hide();
            btnMail.hide();
        }
        
        let jobTitle = dma_rev_param.get("job_title");
		if (!jobTitle || jobTitle.trim() === "") {
		    jobTitle = "IPMS";
		}
		wfm_title.getWindow().tbx_title.setValue(jobTitle);

        
        const serviceId = dma_rev_param.get("page_detail_id");
        console.log("ret4 : " + serviceId );
        if(serviceId !== ""){
	        const ret4 = await scwin.get_menu_objAsPromise(serviceId);
	        dtlFrame.setSrc(ret4.serviceNewUrl, {"dataObject": dataObject});        	
        }else{
			tabMain.deleteTab(0);
        }
    };
    
    scwin.dataCollectionTrim = function(dataListObj) {
	    const trimObject = obj => {
	        return Object.fromEntries(
	            Object.entries(obj).map(
	                ([key, value]) => [key, typeof value === 'string' ? value.trim() : value]
	            )
	        );
	    };
	
	    let trimData;
	    if (typeof dataListObj.getAllJSON === 'function') {
	        // getAllJSON 메서드가 존재하면 사용
	        trimData = dataListObj.getAllJSON();
	    } else {
	        // 메서드가 존재하지 않으면 기본 JSON 데이터를 사용
	        trimData = dataListObj.getJSON();
	    }
	
	    if (Array.isArray(trimData)) {
	        dataListObj.setJSON(trimData.map(item => trimObject(item)));
	    } else {
	        dataListObj.setJSON(trimObject(trimData));
	    }
	};
    
    scwin.get_menu_objAsPromise = function(serviceId) {
	    return new Promise((resolve, reject) => {
	        com.getMenuObj(serviceId, function(ret) {
	            resolve(ret);
	        });
	    });
	};
	
	scwin.onpageunload = function() {
	};
	
	/**
	 * 목록 버튼 클릭시 이벤트
	 */
	scwin.trigger_list_onclick = function(e) {
	    let menuIdToMove;
	
	    if (scwin.param.param4 === "apr") {
	        if (typeof scwin.param.param5 === "undefined") {
	            // 업무대기함
	            menuIdToMove = "A004";
	        } else {
	            menuIdToMove = scwin.param.param3 === "XAD100" ? "A006" : "A005";
	            // 완료함: A006, 진행함: A005
	        }
	    } else {
	        // 기본 메뉴 이동
	        scwin.GLOBAL_VARS.pageId ? menuIdToMove = scwin.GLOBAL_VARS.pageId : menuIdToMove = "IA09";
	    }
	    com.moveList(menuIdToMove);
	};

	/**
	 * 선택 탭 변경시
	 */
	scwin.tac_sample_onchange = function(tabID,idx,userTabID) {
		com.setFullHeight();
		com.getComponent(userTabID).getWindow().com.file.globalSetting();		
	};
		
	scwin.open_attach_popup = function() {
	
		const mngmtNo = dma_rev_param.get("mngmt_no");
		
		const data = {
	      mngmt_no: mngmtNo
	    };
	
	    com.pop.open(biz.pat.pop.TYPE.PAT_ATTACH, data, function(ret) {});
    
	    /*const baseUrl = gcm.baseUrls.oldBizUrl + "/websquare/popup.html?w2xPath=/kitech/pat/ppo/PatPpoRefFileSearchPopup.xml";
	    const url = `${baseUrl}&mngmt_no=${mngmtNo}`;
	    const windowFeatures = "width=550,height=525,scrollbars=no,resizable=no";
	
	    window.open(url, "_blank", windowFeatures);*/
	};
	
	
	scwin.open_mail_send_popup = function() {

	    const req_no = dma_rev_param.get("req_no");
	    const mngmt_no = dma_rev_param.get("mngmt_no");
	    const sn = com.getLoginInfo('sn');
	    
	    const data = {
			req_no: req_no,
	      	mngmt_no: mngmt_no,
	      	sn: sn
	    };
	    
	    com.pop.open(biz.pat.pop.TYPE.PAT_MAIL_SEND, data, function(ret) {});
	    
	    /*
	    const params = [
	        `req_no=${req_no}`,
	        `mngmt_no=${mngmt_no}`,
	        `sn=${sn}`
	    ];
	    const baseUrl = gcm.baseUrls.oldBizUrl + "/websquare/popup.html?w2xPath=/kitech/pat/ppo/PatPpoMailSendPopup.xml";
	    const windowFeatures = "width=800,height=770,scrollbars=true,resizable=true";
	    const url = `${baseUrl}&${params.join('&')}`;
	
	    window.open(url, "_blank", windowFeatures);
	    */
	};
		
	]]></script>
	<style><![CDATA[
		.IF99 .pageWrap{padding: 0}		
	]]></style>
	</head>
	<body ev:onpageload="scwin.onpageload">
		<w2:wframe id="wfm_title" src="/cm/xml/contentTitle.xml"></w2:wframe>
		<xf:group class="pageWrap IF99" style="">
			<xf:group class="searchSection step">
    			<xf:group class="le">
    				<xf:trigger class="btn" type="button" ev:onclick="scwin.trigger_list_onclick" id="btn_list">
    					<xf:label><![CDATA[목록]]></xf:label>
    				</xf:trigger>
    			</xf:group>
    			<xf:group class="btnbox">
    				<xf:trigger id="btnFile" class="btn icon print" type="button" ev:onclick="scwin.open_attach_popup">
    					<xf:label><![CDATA[관련첨부파일 조회]]></xf:label>
    				</xf:trigger>
    				<xf:trigger id="btnMail" class="btn" type="button" ev:onclick="scwin.open_mail_send_popup">
    					<xf:label><![CDATA[메일발송]]></xf:label>
    				</xf:trigger>
    			</xf:group>
    		</xf:group>
			<xf:group class="tabcont">
				<w2:tabControl id="tabMain" alwaysDraw="true" confirmFalseAction="new" confirmTrueAction="exist" useConfirmMessage="false" useMoveNextTabFocus="false" useTabKeyOnly="true" tabScroll="false" ev:onchange="scwin.tac_sample_onchange">
					<w2:tabs disabled="false" id="dcrFrame" label="의뢰/결과 처리"></w2:tabs>
					<w2:tabs disabled="false" id="dtlFrame" label="상세조회"></w2:tabs>
					<w2:tabs disabled="false" id="mailFrame" label="메일이력"></w2:tabs>
					<w2:tabs disabled="false" id="processFrame" label="프로세스"></w2:tabs>
					<w2:content alwaysDraw="false" id="content1">
						<w2:wframe id="dcrFrame" processMsgFrame="true"></w2:wframe>
					</w2:content>
					<w2:content alwaysDraw="false" id="content2">
						<w2:wframe id="dtlFrame" processMsgFrame="true"></w2:wframe>
					</w2:content>
					<w2:content alwaysDraw="false" id="content3">
						<w2:wframe id="mailFrame" processMsgFrame="true"></w2:wframe>
					</w2:content>
					<w2:content alwaysDraw="false" id="content4">
						<w2:wframe id="processFrame" processMsgFrame="true"></w2:wframe>
					</w2:content>
				</w2:tabControl>
			</xf:group>

		</xf:group>
	</body>
</html>