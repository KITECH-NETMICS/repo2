<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ev="http://www.w3.org/2001/xml-events"
    xmlns:w2="http://www.inswave.com/websquare" xmlns:xf="http://www.w3.org/2002/xforms">
    <head meta_programName="근태일정현황">
    	<w2:type>DEFAULT</w2:type>
    	<w2:buildDate />
    	<xf:model>
    		<xf:instance>
    			<data xmlns="" />
    		</xf:instance>
    		<w2:dataCollection baseNode="map">
    			<w2:dataMap baseNode="map" id="dma_search">
				  <w2:keyInfo>
					  	<w2:key id="syspayno" name="syspayno" dataType="text"></w2:key>
					  	<w2:key id="emp_no" name="emp_no" dataType="text"></w2:key>
					  	<w2:key id="dept_cd" name="dept_cd" dataType="text"></w2:key>
					  	<w2:key id="dept_nm" name="dept_nm" dataType="text"></w2:key>
					  	<w2:key id="divsn_dept" name="divsn_dept" dataType="text"></w2:key>
					  	<w2:key id="divsn_dept_nm" name="divsn_dept_nm" dataType="text"></w2:key>
						<w2:key id="msg_type" name="msg_type" dataType="text"></w2:key>
						<w2:key id="start_ymd" name="start_ymd" dataType="text"></w2:key>
						<w2:key id="close_ymd" name="close_ymd" dataType="text"></w2:key>
						<w2:key id="nm" name="nm" dataType="text"></w2:key>
				 </w2:keyInfo>
				</w2:dataMap>
				<w2:dataMap baseNode="map" id="dma_deptSearch">
				  <w2:keyInfo>
					  	<w2:key id="dept_cd" name="dept_cd" dataType="text"></w2:key>
				 </w2:keyInfo>
				</w2:dataMap>
				<w2:dataMap baseNode="map" id="dma_deptInfoSearch">
				  <w2:keyInfo>
					  	<w2:key id="ymd" name="ymd" dataType="text"></w2:key>
					  	<w2:key id="dept_new_ymd" name="dept_new_ymd" dataType="text"></w2:key>
					  	<w2:key id="dept_cd" name="dept_new_ymd" dataType="text"></w2:key>
				 </w2:keyInfo>
				</w2:dataMap>
				<w2:dataMap baseNode="map" id="dma_holidaySearch">
				  <w2:keyInfo>
						<w2:key id="req_fr_ymd" name="req_fr_ymd" dataType="text"></w2:key>
      					<w2:key id="req_to_ymd" name="req_to_ymd" dataType="text"></w2:key>
				 </w2:keyInfo>
				</w2:dataMap>
				
				<w2:dataList baseNode="list" repeatNode="map" id="dlt_holydayList" saveRemovedData="true">
				  <w2:columnInfo>
				       <w2:column id="ymd" name="ymd" dataType="text"></w2:column>
				       <w2:column id="apply_dept_cd" name="apply_dept_cd" dataType="text"></w2:column>
				       <w2:column id="day" name="day" dataType="text"></w2:column>
				       <w2:column id="day_no" name="day_no" dataType="text"></w2:column>
				       <w2:column id="off_yn" name="off_yn" dataType="text"></w2:column>
				       <w2:column id="off_rmk" name="off_rmk" dataType="text"></w2:column>
				       <w2:column id="rmk" name="rmk" dataType="text"></w2:column>
				       <w2:column id="month_week" name="month_week" dataType="text"></w2:column>
				       <w2:column id="year_week" name="year_week" dataType="text"></w2:column>
				       <w2:column id="regst_psn_syspayno" name="regst_psn_syspayno" dataType="text"></w2:column>
				       <w2:column id="regst_daytm" name="regst_daytm" dataType="text"></w2:column>
				       <w2:column id="updt_psn_syspayno" name="updt_psn_syspayno" dataType="text"></w2:column>
				       <w2:column id="updt_daytm" name="updt_daytm" dataType="text"></w2:column>
				  </w2:columnInfo>
				</w2:dataList>
				
				<w2:dataList baseNode="list" repeatNode="map" id="dlt_deptList" saveRemovedData="true">
				  <w2:columnInfo>
				       <w2:column id="dept_cd" name="dept_cd" dataType="text"></w2:column>
				       <w2:column id="dept_nm" name="dept_nm" dataType="text"></w2:column>
				       <w2:column id="dept_eng_nm" name="dept_eng_nm" dataType="text"></w2:column>
				       <w2:column id="disp_seq" name="disp_seq" dataType="text"></w2:column>
				       <w2:column id="dept_shape" name="dept_shape" dataType="text"></w2:column>
				       <w2:column id="divsn_dept" name="divsn_dept" dataType="text"></w2:column>
				       <w2:column id="divsn_dept_new_ymd" name="divsn_dept_new_ymd" dataType="text"></w2:column>
				       <w2:column id="divsn_dept_nm" name="divsn_dept_nm" dataType="text"></w2:column>
				  </w2:columnInfo>
				</w2:dataList>
				
				<w2:dataList baseNode="list" repeatNode="map" id="dlt_deptInfoList" saveRemovedData="true">
				  <w2:columnInfo>
				       <w2:column id="dept_nm" name="dept_nm" dataType="text"></w2:column>
				       <w2:column id="nm" name="nm" dataType="text"></w2:column>
				       <w2:column id="empno" name="empno" dataType="text"></w2:column>
				       <w2:column id="goal" name="goal" dataType="text"></w2:column>
				       <w2:column id="region" name="region" dataType="text"></w2:column>
				       <w2:column id="clsf" name="clsf" dataType="text"></w2:column>
				       <w2:column id="state_nm" name="state_nm" dataType="text"></w2:column>
				       <w2:column id="flag" name="flag" dataType="text"></w2:column>
				       <w2:column id="posi_nm" name="posi_nm" dataType="text"></w2:column>
				       <w2:column id="ext_no" name="ext_no" dataType="text"></w2:column>
				       <w2:column id="mobile" name="mobile" dataType="text"></w2:column>
				       <w2:column id="email" name="email" dataType="text"></w2:column>
				  </w2:columnInfo>
				</w2:dataList>
				
				<w2:dataList baseNode="list" repeatNode="map" id="dlt_selectedDeptInfo" saveRemovedData="true">
				  <w2:columnInfo>
				       <w2:column id="dept_nm" name="dept_nm" dataType="text"></w2:column>
				       <w2:column id="nm" name="nm" dataType="text"></w2:column>
				       <w2:column id="empno" name="empno" dataType="text"></w2:column>
				       <w2:column id="goal" name="goal" dataType="text"></w2:column>
				       <w2:column id="region" name="region" dataType="text"></w2:column>
				       <w2:column id="clsf" name="clsf" dataType="text"></w2:column>
				       <w2:column id="state_nm" name="state_nm" dataType="text"></w2:column>
				       <w2:column id="flag" name="flag" dataType="text"></w2:column>
				       <w2:column id="posi_nm" name="posi_nm" dataType="text"></w2:column>
				       <w2:column id="ext_no" name="ext_no" dataType="text"></w2:column>
				       <w2:column id="mobile" name="mobile" dataType="text"></w2:column>
				       <w2:column id="email" name="email" dataType="text"></w2:column>
				  </w2:columnInfo>
				</w2:dataList>
								
								
    			<w2:dataMap baseNode="map" id="dma_WorkingStatusSearch">
				  <w2:keyInfo>
				       <w2:key id="month" name="month" dataType="text"></w2:key>
				       <w2:key id="day" name="day" dataType="text"></w2:key>
				       <w2:key id="year" name="year" dataType="text"></w2:key>
				       <w2:key id="dept_cd" name="dept_cd" dataType="text"></w2:key>
				       <w2:key id="syspayno" name="syspayno" dataType="text"></w2:key>
				       <w2:key id="month" name="month" dataType="text"></w2:key>
				       <w2:key id="day" name="day" dataType="text"></w2:key>
				       <w2:key id="year" name="year" dataType="text"></w2:key>
				       <w2:key id="start_ymd" name="start_ymd" dataType="text"></w2:key>
				       <w2:key id="end_ymd" name="end_ymd" dataType="text"></w2:key>
				       <w2:key id="dept_cd" name="dept_cd" dataType="text"></w2:key>
				       <w2:key id="syspayno" name="syspayno" dataType="text"></w2:key>
				 </w2:keyInfo>
				</w2:dataMap>
   				<w2:dataList baseNode="list" repeatNode="map" id="dlt_WorkingStatuslist" saveRemovedData="true">
				  <w2:columnInfo>
				       <w2:column id="start_ymd" name="start_ymd" dataType="text"></w2:column>
				       <w2:column id="cls_ymd" name="cls_ymd" dataType="text"></w2:column>
				       <w2:column id="title" name="title" dataType="text"></w2:column>
				       <w2:column id="scheduleId" name="scheduleId" dataType="text"></w2:column>
				       <w2:column id="repeatType" name="repeatType" dataType="text"></w2:column>
				       <w2:column id="repeatPeriod" name="repeatPeriod" dataType="text"></w2:column>
				       <w2:column id="repeatPeriodOption" name="repeatPeriodOption" dataType="text"></w2:column>
				       <w2:column id="repeatStartDate" name="repeatStartDate" dataType="text"></w2:column>
				       <w2:column id="repeatEndDate" name="repeatEndDate" dataType="text"></w2:column>
				       <w2:column id="categoryId" name="categoryId" dataType="text"></w2:column>
				       <w2:column id="workspaceId" name="workspaceId" dataType="text"></w2:column>
				       <w2:column id="place" name="place" dataType="text"></w2:column>
				       <w2:column id="wholeday" name="wholeday" dataType="text"></w2:column>
				       <w2:column id="schedulePublic" name="schedulePublic" dataType="text"></w2:column>
				       <w2:column id="attendanceRequest" name="attendanceRequest" dataType="text"></w2:column>
				       <w2:column id="registerId" name="registerId" dataType="text"></w2:column>
				       <w2:column id="sendmail" name="sendmail" dataType="text"></w2:column>
				       <w2:column id="color" name="color" dataType="text"></w2:column>
				       <w2:column id="facilityId" name="facilityId" dataType="text"></w2:column>
				       <w2:column id="scheduleType" name="scheduleType" dataType="text"></w2:column>
				       <w2:column id="scheduleGroupId" name="scheduleGroupId" dataType="text"></w2:column>
				       <w2:column id="categoryName" name="categoryName" dataType="text"></w2:column>
				       <w2:column id="icon" name="icon" dataType="text"></w2:column>
				       <w2:column id="participantId" name="participantId" dataType="text"></w2:column>
				       <w2:column id="system_name" name="system_name" dataType="text"></w2:column>
				       <w2:column id="nm" name="nm" dataType="text"></w2:column>
				       <w2:column id="partTimeHours" name="partTimeHours" dataType="text"></w2:column>
				       <w2:column id="start_ymd" name="start_ymd" dataType="text"></w2:column>
				       <w2:column id="cls_ymd" name="cls_ymd" dataType="text"></w2:column>
				       <w2:column id="title" name="title" dataType="text"></w2:column>
				       <w2:column id="scheduleId" name="scheduleId" dataType="text"></w2:column>
				       <w2:column id="repeatType" name="repeatType" dataType="text"></w2:column>
				       <w2:column id="repeatPeriod" name="repeatPeriod" dataType="text"></w2:column>
				       <w2:column id="repeatPeriodOption" name="repeatPeriodOption" dataType="text"></w2:column>
				       <w2:column id="repeatStartDate" name="repeatStartDate" dataType="text"></w2:column>
				       <w2:column id="repeatEndDate" name="repeatEndDate" dataType="text"></w2:column>
				       <w2:column id="categoryId" name="categoryId" dataType="text"></w2:column>
				       <w2:column id="workspaceId" name="workspaceId" dataType="text"></w2:column>
				       <w2:column id="place" name="place" dataType="text"></w2:column>
				       <w2:column id="wholeday" name="wholeday" dataType="text"></w2:column>
				       <w2:column id="schedulePublic" name="schedulePublic" dataType="text"></w2:column>
				       <w2:column id="attendanceRequest" name="attendanceRequest" dataType="text"></w2:column>
				       <w2:column id="registerId" name="registerId" dataType="text"></w2:column>
				       <w2:column id="sendmail" name="sendmail" dataType="text"></w2:column>
				       <w2:column id="color" name="color" dataType="text"></w2:column>
				       <w2:column id="facilityId" name="facilityId" dataType="text"></w2:column>
				       <w2:column id="scheduleType" name="scheduleType" dataType="text"></w2:column>
				       <w2:column id="scheduleGroupId" name="scheduleGroupId" dataType="text"></w2:column>
				       <w2:column id="categoryName" name="categoryName" dataType="text"></w2:column>
				       <w2:column id="icon" name="icon" dataType="text"></w2:column>
				       <w2:column id="participantId" name="participantId" dataType="text"></w2:column>
				       <w2:column id="system_name" name="system_name" dataType="text"></w2:column>
				       <w2:column id="nm" name="nm" dataType="text"></w2:column>
				       <w2:column id="partTimeHours" name="partTimeHours" dataType="text"></w2:column>
				  </w2:columnInfo>
				</w2:dataList>

    			
    		</w2:dataCollection>
    		<w2:workflowCollection></w2:workflowCollection>
    		<!-- 스케줄 조회 -->
    		<xf:submission id="sbm_selectWorkingStatusList" ref='data:json,dma_WorkingStatusSearch'
    			target='data:json,{"id":"dlt_WorkingStatuslist"}' action="SvcCCSCGSCGSMR01.pwkjson" method="post"
    			mediatype="application/json" encoding="UTF-8" mode="asynchronous" processMsg="" ev:submitdone="scwin.sbm_selectWorkingStatusListDone">
    		</xf:submission>
    		
    		<!-- 공휴일 조회 -->
    		<xf:submission id="sbm_selectHolydayList" ref='data:json,dma_holidaySearch'
    			target='data:json,{"id":"dlt_holydayList"}' action="SvcCCSCGSCGSMR02.pwkjson" method="post"
    			mediatype="application/json" encoding="UTF-8" mode="asynchronous" processMsg="" ev:submitdone="scwin.sbm_selectHolydayListDone">
    		</xf:submission>
    		
    		<!-- 부서 신설일 조회 -->
    		<xf:submission id="sbm_selectCodhDeptYmd" ref='data:json,dma_deptSearch'
    			target='data:json,{"id":"dlt_deptList"}' action="SvcCCSCGSCGSMR03.pwkjson" method="post"
    			mediatype="application/json" encoding="UTF-8" mode="asynchronous" processMsg="" ev:submitdone="scwin.sbm_selectCodhDeptYmdDone">
    		</xf:submission>
    		
    		<!-- 인원현황 조회 -->
    		<xf:submission id="sbm_selectCodhDeptInfo" ref='data:json,dma_deptInfoSearch'
    			target='data:json,{"id":"dlt_deptInfoList"}' action="SvcCCSCGSCGSMR04.pwkjson" method="post"
    			mediatype="application/json" encoding="UTF-8" mode="asynchronous" processMsg="" ev:submitdone="scwin.sbm_selectCodhDeptInfoDone">
    		</xf:submission>
    	</xf:model>
    	<script src="/cm/ext/fullcalendar-6.1.5/index.global.js" cache="false"/>
    	<script type="text/javascript"><![CDATA[
    	
    	/**********************************************************************
		 * →  전역변수
		 **********************************************************************/
		var globalCalendar = null;
		var globalCalendarMini = null;
		let combinedEvents = null;
		let eventListSc = null;
		let eventListHo = null;
		let globalInitialDate = null;
		let globalInfoitialDate;
		let selectedDateElement = null;
	   	const option = {processMsg : '로딩중'};
	   
      
	scwin.onpageload = function() {
	
		//enter key event
		com.setEnterKeyEvent(grp_dept, scwin.btn_searchDept_onclick);
		
		var sn = com.getLoginInfo('sn');
		var empno = com.getLoginInfo('empno');
		
		dma_search.set("dept_cd", com.getLoginInfo('deptCode'));
		
		var today = gcm.date.getServerDateTime();
		dma_search.set("close_ymd", today);
		dma_search.set("start_ymd", today);
		dma_search.set("time", "time");	

		
		scwin.btn_searchDept_onclick();
		
	
		let start_ymd = scwin.getFirstDayOfMonth("-");
		let end_ymd = scwin.formatDate(scwin.getLastDayOfMonth(), "-");
		let req_fr_ymd = scwin.getFirstDayOfMonth("");
		let req_to_ymd = scwin.getLastDayOfMonth();
		
		scwin.initialize(start_ymd, end_ymd, dma_search.get('syspayno'), ibx_dept_cd.getValue(), req_fr_ymd, req_to_ymd, scwin.getFirstDayOfMonth("-"));
		
		
		perStatus.setValue(gcm.date.getServerDateTime().substring(4,6) + '월 ' +gcm.date.getServerDateTime().substring(6,8) + '일 인원현황');
		statusCounter0.setValue(0);
		statusCounter1.setValue(0);
		statusCounter2.setValue(0);
		statusCounter3.setValue(0);
		statusCounter4.setValue(0);
		statusCounter5.setValue(0);
		statusCounter6.setValue(0);
		statusCounter7.setValue(0);
		
		scwin.selectDeptInfo(gcm.date.getServerDateTime());
		
		const element = document.getElementById(fullCalendar.id);
		const resizeObserver = new ResizeObserver((entries) => {
		    for (let entry of entries) {
		    	if(globalCalendar){
		    		globalCalendar.updateSize();
		    		globalCalendarMini.updateSize();
		    	} 
		    }
		});
		resizeObserver.observe(element);
		
		
	};
	
	scwin.onpageunload = function() {
		
	};
	
	
	scwin.initialize = function(start_ymd, end_ymd, syspayno, dept_cd, req_fr_ymd, req_to_ymd, initialDate){
	
		if(ibx_dept_cd.getValue() === ''){
			alert('부서는 필수 값입니다.');
			return;
		} 
					
		globalInitialDate = initialDate;
		
		dma_WorkingStatusSearch.set('start_ymd', start_ymd);
		dma_WorkingStatusSearch.set('end_ymd', end_ymd);
		dma_WorkingStatusSearch.set('syspayno', syspayno);
		
		dma_WorkingStatusSearch.set('dept_cd', dept_cd);
		
		dma_holidaySearch.set('req_fr_ymd', req_fr_ymd);
		dma_holidaySearch.set('req_to_ymd', req_to_ymd);
		
		console.log(dma_WorkingStatusSearch.get('start_ymd'));
		console.log(dma_WorkingStatusSearch.get('end_ymd'));
		
		// 스케줄 세팅
		com.execute(sbm_selectWorkingStatusList, option);
	}
	
	scwin.selectDeptInfo = function(initDate){
		// 부서 신설일 조회
		globalInfoitialDate = initDate ? initDate : gcm.date.getServerDateTime();
		
		dma_deptSearch.set("dept_cd", ibx_dept_cd.getValue());
		com.execute(sbm_selectCodhDeptYmd, option);	
	}
	
	scwin.sbm_selectCodhDeptYmdDone = function(e){
		const divsnDeptNewYmd = e.responseJSON.elData.deptInfoVoList[0].divsn_dept_new_ymd;
		dma_deptInfoSearch.set("dept_new_ymd", divsnDeptNewYmd);
		dma_deptInfoSearch.set("ymd", globalInfoitialDate); //yyyymmdd
		dma_deptInfoSearch.set("dept_cd", ibx_dept_cd.getValue());
		com.execute(sbm_selectCodhDeptInfo, option);
	}
	
	scwin.sbm_selectCodhDeptInfoDone = function(e){
		const deptInfo = e.responseJSON.elData.HumPotletGetDepartmentVoList;
		dlt_deptInfoList.setJSON(deptInfo);
		dlt_selectedDeptInfo.setJSON(deptInfo);
		
		let Count = {
		  total    : 0, // 총원
		  work     : 0, // 근무      (0)
		  internal : 0, // 국내출장  (1)
		  external : 0, // 국외출장  (2)
		  local    : 0, // 근거리    (3)
		  vacation : 0, // 휴가      (4)
		  leave    : 0, // 휴직,파견  (5)
		  outwork  : 0  // 재택근무    (6)
		};
		
		Count.total = deptInfo.length;
		
		for (let i = 0; i < deptInfo.length; i++) {
		  const flag = deptInfo[i].flag;  
		  switch (flag) {
		    case '0':
		      Count.work++;
		      break;
		    case '1':
		      Count.internal++;
		      break;
		    case '2':
		      Count.external++;
		      break;
		    case '3':
		      Count.local++;
		      break;
		    case '4':
		      Count.vacation++;
		      break;
		    case '5':
		      Count.leave++;
		      break;
		    case '6':
		      Count.outwork++;
		      break;
		    default: break;
		  }
		}
		
		statusCounter0.setValue(Count.total);
		statusCounter1.setValue(Count.work);
		statusCounter2.setValue(Count.internal);
		statusCounter3.setValue(Count.external);
		statusCounter4.setValue(Count.local);
		statusCounter5.setValue(Count.vacation);
		statusCounter6.setValue(Count.leave);
		statusCounter7.setValue(Count.outwork);
		
		
	}
	
	scwin.sbm_selectWorkingStatusListDone = function(e){
		const dataListSc = e.responseJSON.elData.CgsWorkingStatusVoList;
		dlt_WorkingStatuslist.setJSON(dataListSc);
		eventListSc = scwin.convertToFullCalendarEvents(dataListSc);
		com.execute(sbm_selectHolydayList, option);		
	}
	
	scwin.sbm_selectHolydayListDone = function(e){
		const dataListHo = e.responseJSON.elData.XomDtMstVoList;
		dlt_holydayList.setJSON(dataListHo);
		eventListHo = scwin.holidayConvertToFullCalendarEvents(dataListHo);
		combinedEvents = eventListSc.concat(eventListHo);
		console.log(combinedEvents);
		scwin.search(fullCalendar.id, combinedEvents, globalInitialDate);
	}
	
	
	
	scwin.search = function(_el, _events, initialDate) {
		if(!globalCalendar){
			var calendarEl = document.getElementById(_el);
	    	globalCalendar = new FullCalendar.Calendar(calendarEl, {
		        height: '100%',
		        expandRows: true,
		        eventLimit: 5,
		        fixedWeekCount: false,
		        handleWindowResize: true,
		        slotMinTime: '08:00',
		        slotMaxTime: '20:00',
		        locale: 'ko', // 한국어로 설정
		        headerToolbar: {
		            //left: 'customToday customPrev,customNext title',
		            left: '',
		            center: '',
		            right: '',
		            //right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'
		        },
		        initialView: 'dayGridMonth',
		        initialDate: initialDate,
		        navLinks: false, // 날짜를 선택하면 Day 캘린더나 Week 캘린더로 링크
		        editable: false,
		        selectable: true,
		        nowIndicator: true,
		        dayMaxEvents: true, // allow "more" link when too many events
		        titleFormat : function(date) { // title 설정
				  return date.date.year +". "+(date.date.month +1).toString().padStart(2, '0'); 
				 },  
		        dayCellDidMount: function(info) {
				    const dayOfWeek = info.date.getDay(); // 일요일은 0, 토요일은 6
				    if (dayOfWeek === 0) {
					    info.el.style.backgroundColor = "#fafafa";
					    info.el.style.color = "#f54f3d";
					} else if (dayOfWeek === 6) {
					    info.el.style.backgroundColor = "#fafafa";
					}
				},
		        buttonText: {
		            today: '오늘', // '오늘' 텍스트로 변경
		        },
		        dayCellContent: function(args) { // 날짜 셀의 내용을 사용자 정의
		            return args.date.getDate(); // 월의 날짜만 반환 (1, 2, 3, ...)
		        },
		        eventClick: function(info) {
		            const eventTitle = info.event.title;
		            scwin.showEventPopup(eventTitle, eventPopupEl.id, eventTitleEl.id, closePopupEl.id);
		        },
		        buttonIcons: {
					customPrev: 'chevron-left',
					customNext: 'chevron-right',
		        },
		        customButtons: {
			        customPrev: {
					    text: "이전",
					    click: function() {
					        globalCalendar.prev();
					        const currentDate = globalCalendar.getDate();
		                    const currentMonth = (currentDate.getMonth() + 1).toString().padStart(2, '0');
		                    const currentYear = currentDate.getFullYear();
		                    console.log(currentYear + currentMonth);
		                    
		                    globalCalendarMini.gotoDate(new Date(currentYear, currentDate.getMonth()));
		                    
		                    globalCalendar.removeAllEvents();
		                    scwin.initialize(`${currentYear}-${currentMonth}-01`, scwin.formatDate(scwin.getLastDayOfMonth(currentYear, currentMonth), "-"), dma_search.get('syspayno'), ibx_dept_cd.getValue(), `${currentYear}${currentMonth}01`, scwin.getLastDayOfMonth(currentYear, currentMonth), `${currentYear}-${currentMonth}-01`);
					    }
					},
		            customNext: {
					    text: "다음",
					    click: function() {
					        globalCalendar.next();
					        //globalCalendarMini.next();
					        const currentDate = globalCalendar.getDate();
		                    const currentMonth = (currentDate.getMonth() + 1).toString().padStart(2, '0');
		                    const currentYear = currentDate.getFullYear();
		                    console.log(currentYear + currentMonth);
		                    
		                    globalCalendarMini.gotoDate(new Date(currentYear, currentDate.getMonth()));
		                    
		                    globalCalendar.removeAllEvents();
		                    scwin.initialize(`${currentYear}-${currentMonth}-01`, scwin.formatDate(scwin.getLastDayOfMonth(currentYear, currentMonth), "-"), dma_search.get('syspayno'), ibx_dept_cd.getValue(), `${currentYear}${currentMonth}01`, scwin.getLastDayOfMonth(currentYear, currentMonth), `${currentYear}-${currentMonth}-01`);
					    }
					},
					customToday: {
					    text: "오늘",
					    click: function() {
					        globalCalendar.today();
					        globalCalendarMini.today();
					        const currentDate = globalCalendar.getDate();
		                    const currentMonth = (currentDate.getMonth() + 1).toString().padStart(2, '0');
		                    const currentYear = currentDate.getFullYear();
		                    console.log(currentYear + currentMonth);
		                    globalCalendar.removeAllEvents();
		                    scwin.initialize(`${currentYear}-${currentMonth}-01`, scwin.formatDate(scwin.getLastDayOfMonth(currentYear, currentMonth), "-"), dma_search.get('syspayno'), ibx_dept_cd.getValue(), `${currentYear}${currentMonth}01`, scwin.getLastDayOfMonth(currentYear, currentMonth), `${currentYear}-${currentMonth}-01`);
					    }
					}
		        },
		        eventDidMount: function(info) {
				    info.el.setAttribute('title', info.event.title);
				},
		        windowResize: function(arg) {
		        	//scwin.globalCalendarChange();
		        	globalCalendar.updateSize();
			  	},
				events: _events,
		    });
		
		    globalCalendar.render();
		    scwin.search_mini(fullCalendarMini.id, _events, initialDate);
		}else{
			globalCalendar.removeAllEvents();
			globalCalendar.addEventSource(_events);
			scwin.search_mini(fullCalendarMini.id, _events, initialDate);
		}
	    
	};
	
	scwin.search_mini = function(_el, _events, initialDate) {
		if(!globalCalendarMini){
			var calendarEl = document.getElementById(_el);
	    	globalCalendarMini = new FullCalendar.Calendar(calendarEl, {
	    		initialView: 'dayGridMonth',
	    		fixedWeekCount: false,
			    locale: 'ko', // 한국어 설정
			    contentHeight: 200, // 세로 크기 설정
			    aspectRatio: 1, // 가로 세로 비율을 1:1로 설정하여 가로 크기도 250px이 되게 함
			    headerToolbar: true, // 헤더 툴바 제거
			    dayCellClassNames: ['mini-calendar'], // 각 날짜 셀에 mini-calendar 클래스 적용
		        navLinks: false, // 날짜를 선택하면 Day 캘린더나 Week 캘린더로 링크
		        editable: false,
		        titleFormat : function(date) { // title 설정
				  return date.date.year +". "+(date.date.month +1).toString().padStart(2, '0'); 
				 },
				 dayCellContent: function(args) { // 날짜 셀의 내용을 사용자 정의
		            return args.date.getDate(); // 월의 날짜만 반환 (1, 2, 3, ...)
		        },
		        headerToolbar: {
		            left: 'title',
		            center: '',
		            right: 'customPrev,customToday,customNext',
		        },
		        buttonIcons: {
					customPrev: 'chevron-left',
					customNext: 'chevron-right',
		        },
		        customButtons: {
			        customPrev: {
					    text: "이전",
					    click: function() {
					        globalCalendarMini.prev();
					        globalCalendarMini.updateSize();
					        globalCalendar.prev();
					        const currentDate = globalCalendar.getDate();
		                    const currentMonth = (currentDate.getMonth() + 1).toString().padStart(2, '0');
		                    const currentYear = currentDate.getFullYear();		                    
		                    
		                    globalCalendar.removeAllEvents();
		                    scwin.initialize(`${currentYear}-${currentMonth}-01`, scwin.formatDate(scwin.getLastDayOfMonth(currentYear, currentMonth), "-"), dma_search.get('syspayno'), ibx_dept_cd.getValue(), `${currentYear}${currentMonth}01`, scwin.getLastDayOfMonth(currentYear, currentMonth), `${currentYear}-${currentMonth}-01`);
					        
					    }
					},
		            customNext: {
					    text: "다음",
					    click: function() {
					        globalCalendarMini.next();
					        globalCalendarMini.updateSize();
					        
					        globalCalendar.next();
					        const currentDate = globalCalendar.getDate();
		                    const currentMonth = (currentDate.getMonth() + 1).toString().padStart(2, '0');
		                    const currentYear = currentDate.getFullYear();
	                    
		                    globalCalendar.removeAllEvents();
		                    scwin.initialize(`${currentYear}-${currentMonth}-01`, scwin.formatDate(scwin.getLastDayOfMonth(currentYear, currentMonth), "-"), dma_search.get('syspayno'), ibx_dept_cd.getValue(), `${currentYear}${currentMonth}01`, scwin.getLastDayOfMonth(currentYear, currentMonth), `${currentYear}-${currentMonth}-01`);
					    }
					},
					customToday: {
					    text: "오늘",
					    click: function() {
					        globalCalendar.today();
					        globalCalendarMini.today();
					        
					        const currentDate = globalCalendar.getDate();
		                    const currentMonth = (currentDate.getMonth() + 1).toString().padStart(2, '0');
		                    const currentYear = currentDate.getFullYear();
		                    globalCalendar.removeAllEvents();
		                    scwin.initialize(`${currentYear}-${currentMonth}-01`, scwin.formatDate(scwin.getLastDayOfMonth(currentYear, currentMonth), "-"), dma_search.get('syspayno'), ibx_dept_cd.getValue(), `${currentYear}${currentMonth}01`, scwin.getLastDayOfMonth(currentYear, currentMonth), `${currentYear}-${currentMonth}-01`);
					    }
					}
		        },
		        dateClick: function (info) {
			      var date = new Date(info.date);
			      var year = date.getFullYear();
			      var month = (date.getMonth() + 1).toString().padStart(2, '0');
			      var day = date.getDate().toString().padStart(2, '0');
			      console.log(year + month + day);
			      globalInfoitialDate = year + month + day;
			      perStatus.setValue(month + '월 ' + day + '일 인원현황');
			      scwin.selectDeptInfo(globalInfoitialDate);
			      if (selectedDateElement) {
			        selectedDateElement.classList.remove('selected-mini');
			      }	
				  info.dayEl.classList.add('selected-mini');
				  selectedDateElement = info.dayEl;
			      
			    },
		        dayCellDidMount: function(info) {
				    const dayOfWeek = info.date.getDay(); // 일요일은 0, 토요일은 6
				    if (dayOfWeek === 0) {
					    info.el.style.backgroundColor = "#fafafa";
					    info.el.style.color = "#f54f3d";
					} else if (dayOfWeek === 6) {
					    info.el.style.backgroundColor = "#fafafa";
					}
				},
				events: _events,
	    	});
	    	globalCalendarMini.render();
		}else{
			globalCalendarMini.removeAllEvents();
			globalCalendarMini.addEventSource(_events);
		}
	}
	
	scwin.btn_search_onclick = function() {
		scwin.globalCalendarChange();
	};
	
	
	scwin.btn_down_excel_onclick = function() {
		if (dlt_outwork.getTotalRow() > 6000)
		{
			com.alert("6000건 이상");
		} else {
			var now = com.getServerDateTime("yyyyMMdd");
			var name = '재택근무신청서_' + now + '.xlsx';
			
			var option = {
				    fileName : name
			};
			com.downloadGridExcel(grd, option);
		}
	};
	
	scwin.selectHumBtn = function(data) {
		// 버튼(img)으로 팝업함수 바로 호출 처음 변수에 아무것도 넣지 않으면 최초 서브미션도 실행 안함. 
		data == "img" ? data = { empno : ""} : data = { empno : tb_empno.getValue(), nm : tb_empno.getValue(), work_clsf : "HAG010" };
		
		com.pop.open( com.pop.TYPE.HUM, data, function(ret){
			dma_search.set("emp_no", ret.empno);
			dma_search.set("nm", ret.nm);
			dma_search.set("syspayno", ret.syspayno);
			dma_search.set("dept_cd", ret.dept_cd);
			dma_search.set("dept_nm", ret.dept_nm);
			
			scwin.globalCalendarChange();
			scwin.selectDeptInfo(globalInfoitialDate);
			
			if (com.getLoginInfo("uid").substring(0, 3) === 'eip') {
				tb_divsn_dept.setValue("");
				tb_divsn_dept_nm.setValue("");
			}
			else {
				dma_search.set("divsn_dept", ret.divsn_dept);
				dma_search.set("divsn_dept_nm", ret.divsn_dept_nm);
			}
		});
	};
	
	
	scwin.tb_empno_onkeypress = function(e) {
		if(event.keyCode == 13){
			scwin.selectHumBtn();
		}
	};
	
	scwin.btn_search_hum_onclick = function(e) {
		scwin.selectHumBtn("img");
	};
	
	/*
     * 부서 변경
     */
	scwin.btn_searchDept_onclick = function(e) {
		com.pop.open(com.pop.TYPE.DEPT, { ref_yn : "N", dept_cd: dma_search.get("dept_cd")}, function(ret) {
			dma_search.set("dept_cd", ret.dept_cd);
			dma_search.set("dept_nm", ret.dept_nm);
			if(globalCalendar)scwin.globalCalendarChange();
			
		});
	};
	
	/*
     * 부서 초기화
     */
	scwin.ibx_dept_cd_onviewchange = function(info) {
		scwin.selectDeptInfo(globalInfoitialDate);
		dma_search.set("dept_nm", "");
		/*
		if(info.newValue === ''){
			dma_search.set("dept_cd", info.oldValue);
			alert('부서는 필수 값입니다.');
			return;
		}*/
	};
	
	// 근무자 빈값일경우 이름, 시스템사번 데이터셋 초기화
	scwin.tb_empno_onchange = function(info) {
		console.log("근무자 초기화 ");
		if(info.newValue == "") {	
			dma_search.set("nm", "");
			dma_search.set("syspayno", "");
			scwin.globalCalendarChange();	
		}
	};
	
	/*
	 * 해당 월의 마지막 날짜를 구하기
	 */
	scwin.getLastDayOfMonth = function(year, month) {
	    // 파라미터가 없을 때 현재 시간 기준으로 처리
	    if (!year || !month) {
	        const now = new Date();
	        year = now.getFullYear();
	        month = now.getMonth() + 1;
	    }	
	    // 해당 월의 마지막 날짜를 구하기
	    const lastDay = new Date(year, month, 0).getDate();	
	    // 결과를 "YYYYMMDD" 형식으로 반환
	    return `${year}${month.toString().padStart(2, "0")}${lastDay.toString().padStart(2, "0")}`;
	}
	
	scwin.getFirstDayOfMonth = function(split){
		const today = new Date();
		const firstDayOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);
		const year = firstDayOfMonth.getFullYear();
		const month = String(firstDayOfMonth.getMonth() + 1).padStart(2, '0');
		const day = String(firstDayOfMonth.getDate()).padStart(2, '0');
		return `${year}${split}${month}${split}${day}`;
	}
	
	scwin.convertToFullCalendarEvents = function(eventList){
		return eventList.map(event => {
			let colorCode = '';
			let titleText = '';
			let className = '';
			let textColor = '#606060';
			if(event.categoryId === '1') className = 'fc-category1-class-container'
			if(event.categoryId === '2') className = 'fc-category2-class-container'
			if(event.categoryId === '3') className = 'fc-category3-class-container'
			if(event.categoryId === '4') className = 'fc-category4-class-container'
			if(event.categoryId === '5') {className = 'fc-category5-class-container';}
			titleText = `${event.title}`;
			if(event.place) titleText = `${event.title} | ${event.place}`; 
			
			// 날짜를 더하는 함수 추가
	        function addDays(date, days) {
	            const result = new Date(date);
	            result.setDate(result.getDate() + days);
	            return result;
	        }
	        
	        const endDate = addDays(event.cls_ymd, 1); // 종료 날짜에 하루를 더합니다.
			
			return {
				title: titleText,
				start: event.start_ymd,
				end: endDate.toISOString().split('T')[0],
				className: className,
				textColor: textColor,
			};
		});
	}
	
	scwin.holidayConvertToFullCalendarEvents = function (eventList) {
	  return eventList
	    .filter((event) => event.off_yn === "Y" && event.off_rmk !== "")
	    .map((event) => {
	      let colorCode = "#f8d1d1";
	      return {
	        title: event.off_rmk,
	        start: scwin.formatDate(event.ymd, "-"),
	        end: scwin.formatDate(event.ymd, "-"),
	        //backgroundColor: colorCode,
	        //borderColor: colorCode,
	        textColor: '#9a1313',
	        isHoliday: true,
	        className: 'fc-holiday-class-container',
	      };
	    });
	};

	
	scwin.showEventPopup = function(title, eventPopupId, eventTitleId, closePopupId){
	  const eventPopup = document.querySelector('#' + eventPopupId);
	  const eventTitleElement = document.querySelector('#' + eventTitleId);
	  const closeButton = document.querySelector('#' + closePopupId);
	
	  eventTitleElement.innerText  = title;
	  eventPopup.style.display = "flex";
	
	  closeButton.onclick = function () {
	    eventPopup.style.display = "none";
	  };
	  
	  // 바깥 영역 클릭 시 팝업 숨기기
		window.onclick = function(event) {
		    if (event.target == eventPopup) {
		        eventPopup.style.display = "none";
		    }
		};
	}
	
	scwin.formatDate = function(str, split){
	  const year = str.slice(0, 4);
	  const month = str.slice(4, 6);
	  const day = str.slice(6, 8);
	
	  return `${year}${split}${month}${split}${day}`;
	}
	
	scwin.globalCalendarChange = function(){
		const currentDate = globalCalendar.getDate();
        const currentMonth = (currentDate.getMonth() + 1).toString().padStart(2, '0');
        const currentYear = currentDate.getFullYear();
        console.log(currentYear + currentMonth);
        globalCalendar.removeAllEvents();
        scwin.initialize(`${currentYear}-${currentMonth}-01`, scwin.formatDate(scwin.getLastDayOfMonth(currentYear, currentMonth), "-"), dma_search.get('syspayno'), ibx_dept_cd.getValue(), `${currentYear}${currentMonth}01`, scwin.getLastDayOfMonth(currentYear, currentMonth), `${currentYear}-${currentMonth}-01`);
	}
	
	scwin.statusCounterOnClcik = function(e){
		debugger;
		const targetText = e.target.getInnerHTML();
		if(targetText !== '0') selectedDeptInfoGrid.show();
		
		let flag = e.target.id.slice(-1);	
		if(flag !== '0'){
			flag = parseInt(flag) - 1;
			let filteredData = dlt_deptInfoList.getAllJSON().filter(item => item.flag === flag.toString());
			if (filteredData.length > 0) dlt_selectedDeptInfo.setJSON(filteredData);			
			
		}else{
			dlt_selectedDeptInfo.setJSON(dlt_deptInfoList.getAllJSON());
		}
	}
	
	scwin.deptInfoClose = function(e){
		selectedDeptInfoGrid.hide();
	}
	
	/*
		FullCalendar에서 이벤트 객체에 사용할 수 있는 속성은 다음과 같습니다
		id: 이벤트의 고유 식별자. 문자열 또는 숫자가 될 수 있습니다.
		groupId: 관련 이벤트를 그룹화하는 데 사용되는 식별자입니다. 문자열 또는 숫자가 될 수 있습니다.
		title: 이벤트의 제목으로 화면에 표시됩니다.
		url: 이벤트를 클릭하면 이동할 URL입니다.
		start: 이벤트의 시작 날짜 및 시간입니다. 문자열 또는 Date 객체가 될 수 있습니다.
		end: 이벤트의 종료 날짜 및 시간입니다. 문자열 또는 Date 객체가 될 수 있습니다.
		allDay: 이벤트가 종일 이벤트인지 여부를 나타내는 부울 값입니다.
		display: 이벤트의 표시 방식을 제어합니다. 'auto', 'block', 'list-item', 'background', 'inverse-background', 'none' 중 하나의 값이 될 수 있습니다.
		editable: 이벤트의 드래그 및 크기 조정 가능 여부를 제어하는 부울 값입니다.
		startEditable: 이벤트의 시작 시간을 드래그하여 변경할 수 있는지 여부를 제어하는 부울 값입니다.
		durationEditable: 이벤트의 지속 시간을 드래그하여 변경할 수 있는지 여부를 제어하는 부울 값입니다.
		resourceEditable: 이벤트가 리소스 간 드래그될 수 있는지 여부를 제어하는 부울 값입니다.
		resourceId: 이벤트가 속한 리소스의 ID입니다.
		classNames: 이벤트 요소에 적용할 CSS 클래스 이름의 배열입니다.
		backgroundColor: 이벤트의 배경색입니다.
		borderColor: 이벤트의 테두리 색상입니다.
		textColor: 이벤트의 글자 색상입니다.
		extendedProps: 추가 사용자 지정 속성을 포함하는 객체입니다. 이 속성들은 이벤트 객체 내에서 별도로 저장되고 렌더링에 영향을 주지 않습니다.
	*/
	
	]]></script>
   	<style>
   	<![CDATA[
:root {--fc-small-font-size: .9em;}
/*.data-w-comcgsc11000d .inpSch,.data-w-comcgsc11000d .inp{height:100% !important;}*/
.data-w-comcgsc11000d .font_red {color : red;}
.data-w-comcgsc11000d .txt_sys {display: inline-block;}
.data-w-comcgsc11000d .font_bold {font-weight : bold;}
.data-w-comcgsc11000d .fs12 {font-size : 12px;}
.data-w-comcgsc11000d .df_tit{padding:0 0 0 15px;font-size:12px;line-height:24px;font-weight:bold;background:url(/cm/images/sample/bg_df_tit_ico.png) no-repeat 0 7px }
.data-w-comcgsc11000d .schbox{display:flex;flex-wrap: wrap;width:100% !important }
.data-w-comcgsc11000d .schboxDiv{display: flex;align-items: center;margin: 0;height:30px }
/*.data-w-comcgsc11000d .schboxDiv .label{font-weight: bold;font-size: 12px;height: 100%;display: inline-flex;align-items: center;text-align: center;border: 1px solid #0000003b;min-width: 63px;justify-content: center;border-right: 0;}*/
.data-w-comcgsc11000d .event-tooltip {position: absolute;background-color: rgba(0, 0, 0, 0.7);color: white;padding: 5px 10px;border-radius: 4px;z-index: 100;display: none;}
.data-w-comcgsc11000d .event-popup {position: fixed;top: 0;left: 0;width: 100%;height: 100%;background-color: rgba(0, 0, 0, 0.5);display: none;justify-content: center;align-items: center;z-index: 10000;}
.data-w-comcgsc11000d .event-popup-content {background-color: white;padding: 20px;border-radius: 4px;}
.data-w-comcgsc11000d .full-calendar-large .fc-event-title {overflow: hidden;text-overflow: ellipsis;white-space: nowrap;}
.data-w-comcgsc11000d .full-calendar-large .fc .fc-daygrid-day-number{padding: 4px 0 0 10px;}
.data-w-comcgsc11000d .full-calendar-large .fc-day-today.fc-daygrid-day::before {content: '';position: absolute;top: 18px;left: 17px;width: 25px;height: 25px;background-color: #135de6;border-radius: 50%;z-index: 0;transform: translate(-50%, -50%);}
.data-w-comcgsc11000d .full-calendar-large .fc-day-today.fc-daygrid-day {position: relative;}
.data-w-comcgsc11000d .full-calendar-large .fc-day-today .fc-daygrid-day-top > a{color: white;}
.data-w-comcgsc11000d .full-calendar-large .fc-toolbar-chunk{display:flex;}
.data-w-comcgsc11000d .full-calendar-large .fc-toolbar-title{font-size: 16px !important;font-weight: 500;display: flex;align-items: center;}
.data-w-comcgsc11000d .fc-customPrev-button,.data-w-comcgsc11000d .fc-customNext-button,.data-w-comcgsc11000d .fc-customToday-button {background-color: transparent !important;border: 1px solid #ccc !important;color: #333 !important;cursor: pointer !important;display: flex !important;align-items: center;}
.data-w-comcgsc11000d .fc-customPrev-button,.data-w-comcgsc11000d .fc-customNext-button{padding: 0 5px !important;}
.data-w-comcgsc11000d .fc-customToday-button{padding: 5px 15px !important;border-radius: 2px;font-weight: bold;}
.data-w-comcgsc11000d .fc-customPrev-button,.data-w-comcgsc11000d .fc-customNext-button{border: none !important;}
/*.data-w-comcgsc11000d .fc-customPrev-button:hover,.data-w-comcgsc11000d .fc-customNext-button:hover,.data-w-comcgsc11000d .fc-customToday-button:hover,.data-w-comcgsc11000d .search:hover {background-color: #f0f1f5 !important;}*/
.data-w-comcgsc11000d th.fc-col-header-cell.fc-day {border-right: none;border-left: none;}
.data-w-comcgsc11000d .fc-day.fc-day-sun{color: #f54f3d;}
.data-w-comcgsc11000d .full-calendar-large .fc-day.fc-day-sun {width: calc((100% / 7) - 2%);}
.data-w-comcgsc11000d .full-calendar-large .fc-day.fc-day-sat {width: calc((100% / 7) - 2%);}
.data-w-comcgsc11000d .full-calendar-large .fc-scrollgrid-sync-inner{text-align: left;font-size: 1.1em;padding: 5px 0;}
.data-w-comcgsc11000d .full-calendar-large .fc-daygrid-day-top{display: flex;padding-left: 5px;width: 30px;align-items: center;justify-content: center;}
.data-w-comcgsc11000d .full-calendar-large .fc-category1-class-container.fc-event-start{border-left: 3px solid #8b8b8b !important;}
.data-w-comcgsc11000d .full-calendar-large .fc-category2-class-container.fc-event-start{border-left: 3px solid #2196F3 !important;}
.data-w-comcgsc11000d .full-calendar-large .fc-category3-class-container.fc-event-start{border-left: 3px solid #51aeff !important;}
.data-w-comcgsc11000d .full-calendar-large .fc-category4-class-container.fc-event-start{border-left: 3px solid #F44336 !important;}
.data-w-comcgsc11000d .full-calendar-large .fc-category5-class-container.fc-event-start{border-left: 3px solid #57c6b4 !important;}
.data-w-comcgsc11000d .full-calendar-large .fc-category1-class-container{background-color: #c1c1c1;border: none;border-radius: 0;}
.data-w-comcgsc11000d .full-calendar-large .fc-category2-class-container{background-color: #2196F3;border: none;border-radius: 0;}
.data-w-comcgsc11000d .full-calendar-large .fc-category3-class-container{background-color: #b6dbfb;border: none;border-radius: 0;}
.data-w-comcgsc11000d .full-calendar-large .fc-category4-class-container{background-color: #F44336;border: none;border-radius: 0;}
.data-w-comcgsc11000d .full-calendar-large .fc-category5-class-container{background-color: #ddf4f0;border: none;border-radius: 0;}
.data-w-comcgsc11000d .full-calendar-large .fc-holiday-class-container{border-left: 3px solid #da1b1b !important;background-color: #f8d1d1;border: none;border-radius: 0;}
.data-w-comcgsc11000d .full-calendar-large .fc-toolbar-chunk{z-index:11}
.data-w-comcgsc11000d .full-calendar-mini .fc-daygrid-day-events{display:none}
.data-w-comcgsc11000d .full-calendar-mini .fc-daygrid-day-events{display:none}
.data-w-comcgsc11000d .full-calendar-mini .fc-daygrid-day-bottom{display:none}
.data-w-comcgsc11000d .full-calendar-mini .fc-daygrid-day-frame{display: flex;min-height: 100%;position: relative;align-items: center;justify-content: center;}
.data-w-comcgsc11000d .full-calendar-mini .fc-theme-standard td{vertical-align: middle;}
.data-w-comcgsc11000d .full-calendar-mini td.fc-day.mini-calendar{border:none}
.data-w-comcgsc11000d .full-calendar-mini th.fc-col-header-cell.fc-day{border:none}
.data-w-comcgsc11000d .full-calendar-mini .fc-toolbar-title{font-size: 14px;font-weight: 500;}
.data-w-comcgsc11000d .full-calendar-mini .fc-header-toolbar{margin: 5px 0 10px 0 !important;}
.data-w-comcgsc11000d .full-calendar-mini tr.fc-scrollgrid-section.fc-scrollgrid-section-body.fc-scrollgrid-section-liquid > td{border:none}
.data-w-comcgsc11000d .full-calendar-mini table.fc-scrollgrid.fc-scrollgrid-liquid{border:none}
.data-w-comcgsc11000d .full-calendar-mini tr.fc-scrollgrid-section.fc-scrollgrid-section-header > th{border:none}
.data-w-comcgsc11000d .full-calendar-mini td.fc-day{position:relative}
.data-w-comcgsc11000d .full-calendar-mini td.fc-day.selected-mini:before {content: '';position: absolute;top: 50%;left: 50%;width: 25px !important;height: 25px !important;background-color: slategrey;border-radius: 50%;transform: translate(-50%, -50%);}
.data-w-comcgsc11000d .full-calendar-mini td.fc-day.selected-mini .fc-daygrid-day-number{color:white}
.data-w-comcgsc11000d .full-calendar-mini .fc-day{cursor:pointer}
.data-w-comcgsc11000d .full-calendar-mini .fc-day-today::before {content: '';position: absolute;top: 50%;left: 50%;width: 25px !important;height: 25px !important;background-color: #135de6;border-radius: 50%;transform: translate(-50%, -50%);}
.data-w-comcgsc11000d .full-calendar-mini .fc-day-today .fc-daygrid-day-number{color:white}
.data-w-comcgsc11000d .per-status-wrap {display: flex;justify-content: space-between;padding: 0 5px;padding: 5px 5px;margin: 2px 0;}
.data-w-comcgsc11000d .per-status-wrap.wrap1{background-color: rgba(139, 195, 74, 0.2);border-color: #8bc34a;border-left: 3px solid #8bc34a;}
.data-w-comcgsc11000d .per-status-wrap.wrap2{background-color: rgba(33, 150, 243, 0.2);border-color: #2196f3;border-left: 3px solid #2196f3;}
.data-w-comcgsc11000d .per-status-wrap.wrap3{background-color: rgba(81, 174, 255, 0.2);border-color: #51aeff;border-left: 3px solid #51aeff;}
.data-w-comcgsc11000d .per-status-wrap.wrap4{background-color: rgba(244, 67, 54, 0.2);border-color: #f44336;border-left: 3px solid #f44336;}
.data-w-comcgsc11000d .per-status-wrap.wrap5{background-color: rgba(63, 81, 181, 0.2);border-color: #3f51b5;border-left: 3px solid #3f51b5;}
.data-w-comcgsc11000d .per-status-wrap.wrap6{background-color: rgba(87, 198, 180, 0.2);border-color: #57c6b4;border-left: 3px solid #57c6b4;}
.data-w-comcgsc11000d .per-status-wrap.wrap7{background-color: rgba(87, 198, 180, 0.2);border-color: #57c6b4;border-left: 3px solid #57c6b4;}
.data-w-comcgsc11000d .per-status-wrap.wrap8{background-color: rgba(139, 139, 139, 0.2);border-color: #8b8b8b;border-left: 3px solid #8b8b8b;}
.data-w-comcgsc11000d .per-status-wrap div{width:100%}
.data-w-comcgsc11000d .per-status-wrap div:nth-child(2){text-align:right;cursor:pointer}
.fc .fc-toolbar.fc-header-toolbar{margin-bottom: 1em;}
.close-grid-btn{width: 14px;height: 14px;background: url(/cm/images/v2_icon_set_v1.16.78a4ed66e145ca082f6e3a751f074035.png) no-repeat -1109px -367px;display: inline-block;border: none;margin: 0 0 5px 0;}
.data-w-comcgsc11000d .searchSection{display: flex;min-height: 57px;align-items: center;padding: 5px 14px 5px 0;}
.data-w-comcgsc11000d .btn-box{display: flex;align-items: center;justify-content: center;}
.data-w-comcgsc11000d .btn.search{margin:5px 2px}
.data-w-comcgsc11000d .schbox{display:flex;flex-wrap: wrap;width:100% !important}
.data-w-comcgsc11000d .schboxDiv{display: flex;align-items: center;margin: 5px 0 5px 0;}
.data-w-comcgsc11000d .schboxDiv .label{font-weight: bold;font-size: 12px;height: 100%;display: inline-flex;align-items: center;text-align: right;margin-right: 5px;min-width: 60px;justify-content: flex-end;border: 0;}
   	]]></style>
    </head>
    <body ev:onpageload="scwin.onpageload">
    <w2:wframe id="wfm_title" src="/cm/xml/contentTitle.xml" style=""></w2:wframe>
    		<!-- <w2:wframe id="wfm_title" src="/cm/xml/contentTitle.xml" style=""></w2:wframe> -->
    	<xf:group id="" class="pageWrap data-w-comcgsc11000d" style="height: calc(100% - 100px);display:flex">
    	
    		<xf:group id="left_wrap_container" style="width: 250px;padding-right: 15px;">
    			<xf:group>
    				<xf:group id="fullCalendarMini" class="full-calendar-mini" style="height:233px;"></xf:group>
    			</xf:group>
    			<xf:group>
    				<xf:group tagname="div">
    					<w2:textbox id="perStatus" tagname="p" style="text-align:center;margin: 25px 0 0 0;"></w2:textbox>
    				</xf:group>
    				<xf:group class="per-status-container" tagname="div">
    					<xf:group class="per-status-wrap wrap1" tagname="div">
    						<xf:group tagname="div">총원</xf:group>
    						<w2:textbox id="statusCounter0" tagname="div" ev:onClick="scwin.statusCounterOnClcik" />
    					</xf:group>
    					<xf:group class="per-status-wrap wrap2" tagname="div">
    						<xf:group tagname="div">근무인원</xf:group>
    						<w2:textbox id="statusCounter1" tagname="div" ev:onClick="scwin.statusCounterOnClcik" />
    					</xf:group>
    					<xf:group class="per-status-wrap wrap3" tagname="div">
    						<xf:group tagname="div">국내출장</xf:group>
    						<w2:textbox id="statusCounter2" tagname="div" ev:onClick="scwin.statusCounterOnClcik" />
    					</xf:group>
    					<xf:group class="per-status-wrap wrap4" tagname="div">
    						<xf:group tagname="div">국외출장</xf:group>
    						<w2:textbox id="statusCounter3" tagname="div" ev:onClick="scwin.statusCounterOnClcik" />
    					</xf:group>
    					<xf:group class="per-status-wrap wrap5" tagname="div">
    						<xf:group tagname="div">근거리출장</xf:group>
    						<w2:textbox id="statusCounter4" tagname="div" ev:onClick="scwin.statusCounterOnClcik" />
    					</xf:group>
    					<xf:group class="per-status-wrap wrap6" tagname="div">
    						<xf:group tagname="div">휴가</xf:group>
    						<w2:textbox id="statusCounter5" tagname="div" ev:onClick="scwin.statusCounterOnClcik" />
    					</xf:group>
    					<xf:group class="per-status-wrap wrap7" tagname="div">
    						<xf:group tagname="div">휴직파견</xf:group>
    						<w2:textbox id="statusCounter6" tagname="div" ev:onClick="scwin.statusCounterOnClcik" />
    					</xf:group>
    					<xf:group class="per-status-wrap wrap8" tagname="div">
    						<xf:group tagname="div">재택근무</xf:group>
    						<w2:textbox id="statusCounter7" tagname="div" ev:onClick="scwin.statusCounterOnClcik" />
    					</xf:group>
    				</xf:group>
    			</xf:group>
    		</xf:group>
    		
    		<xf:group id="right_wrap_container" style="width: 100%">
    		
	    		<xf:group style="" id="" class="searchSection">
    			<xf:group id="" class="schbox">
    			
    				<!-- 부서 -->
						<xf:group tagname="div" class="schboxDiv" style="margin-right: 10px;">
							<w2:textbox tagname="p" class="label" label="부서" ></w2:textbox>
							<xf:group tagname="p" style="" class="">
								<xf:group class="inpSch" id="grp_dept" style="width: 100px;">
	   								<xf:input adjustMaxLength="false" class="inp" id="ibx_dept_cd" readOnlyClass="inp"
	   									ref="data:dma_search.dept_cd" style="" title="부서명" ev:onviewchange="scwin.ibx_dept_cd_onviewchange">
	   								</xf:input>
	   								<xf:trigger class="btn" ev:onclick="scwin.btn_searchDept_onclick" id="btn_searchDept" style=""
	   									title="부서 조회" type="button">
	   									<xf:label><![CDATA[검색]]></xf:label>
	   								</xf:trigger>
	   							</xf:group>
	   							<xf:input adjustMaxLength="false" class="inp" id="" ref="data:dma_search.dept_nm" style="width: 150px;"
	   								title="부서 상세" disabled="true">
	   							</xf:input>
							</xf:group>
						</xf:group>
						<!-- 부서 -->
						
						<!-- 성명 -->
						<xf:group tagname="div" style="" class="schboxDiv">
							<w2:textbox tagname="p" class="label" label="성명" ></w2:textbox>
							<xf:group tagname="p" style="" class="">
								<xf:group style="width: 100px;" id="" class="inpSch">
									<xf:input adjustMaxLength="false" style="" id="tb_empno" class="inp" title="성명" ev:onkeypress="scwin.tb_empno_onkeypress" ref="data:dma_search.emp_no" ev:onchange="scwin.tb_empno_onchange">
									</xf:input>
									<xf:trigger style="" id="btn_search_syspayno" type="button" class="btn" title="성명 조회"
										ev:onclick="scwin.btn_search_hum_onclick">
										<xf:label><![CDATA[검색]]></xf:label>
									</xf:trigger>
								</xf:group>
								<xf:input adjustMaxLength="false" style="width: 100px;" id="tb_nm" class="inp" title="성명상세 "
									ref="data:dma_search.nm" disabled="true">
								</xf:input>
							</xf:group>
						</xf:group>
						<!-- 성명 -->
					
    			</xf:group>
    			
    			
    			<!-- 버튼박스 -->
				<xf:group class="btn-box">

					<!-- 조회버튼 -->
						<xf:group tagname="div" style="" class="schboxDiv">
							<xf:trigger class="btn search" ev:onclick="scwin.btn_search_onclick" id="btn_search" type="button">
		    					<xf:label><![CDATA[조회]]></xf:label>
		    				</xf:trigger>	
						</xf:group>					
						<!-- 조회버튼 -->
									
				</xf:group>
				<!-- 버튼박스 -->
				
    			
    		</xf:group>
	    		<!-- <xf:group style="" id="" class="titleSection">
	    			<xf:group class="le" id="" style="">
	    				<xf:group class="result" id="">
	    					<w2:span id="" label="*조회결과 " style=""></w2:span>
	    					<w2:span class="numtotal" id="tbx_result" label="0" style=""></w2:span>
	    					<w2:span id="" label="건" style=""></w2:span>
	    				</xf:group>
	    			</xf:group>
	    		</xf:group> -->
	    		
	    		<xf:group id="fullCalendar" class="full-calendar-large">
	    			
	    		</xf:group>
	    		
	    		<xf:group id="eventPopupEl" class="event-popup" tagname="div">
				  <xf:group class="event-popup-content" tagname="div">
				    <xf:group id="eventTitleEl" tagname="h3"></xf:group>
				    <xf:trigger id="closePopupEl" type="button" class="btn" title="팝업닫기" style="float: right;margin-top: 15px;border: none;box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.1);">
						<xf:label><![CDATA[닫기]]></xf:label>
					</xf:trigger>
				  </xf:group>
				</xf:group>
    		
    		</xf:group>
    		
    	</xf:group>
    	
    	<xf:group id="selectedDeptInfoGrid" style="display:none;height: 270px;width: 650px;position: absolute;top: 290px;left: 238px;z-index: 99;background-color: white;padding: 10px;border: 2px solid #ddd;overflow: auto;">
    		<xf:group style="text-align: right;">
	    		<xf:trigger id="closeGridEl" type="button" class="close-grid-btn" title="팝업닫기" style="" ev:onclick="scwin.deptInfoClose"></xf:trigger>
			</xf:group>
    		
    		<w2:gridView scrollByColumnAdaptive="false" rowNumVisible="true" rowStatusWidth="50" selectedRowColor="#fbf2cd"
    			rowNumHeaderValue="No." scrollByColumn="false" defaultCellHeight="28" rowStatusHeaderValue="상태" noResultMessage="조회 결과가 없습니다."
    			rowNumBackgroundColor="#fff" noResultMessageClass="noResult" rowStatusVisible="false" selectedCellColor="#fbf2cd" rowNumWidth="60"
    			dataList="data:dlt_selectedDeptInfo" evenRowBackgroundColor="#f7faff" style="height: 85px;" autoFit="allColumn" id="grd" visibleRowNum="all"
    			class="grid" rowMouseOverColor="#e7f0fb" summaryAuto="true" ev:oncellclick="" fixedRow="0" filterFocusMode="outfocus" sortEvent="onclick" sortable="true">
    			<w2:caption style="" id="caption1" value="this is a grid caption."></w2:caption>
    			<w2:header style="" id="header1">
    				<w2:row style="" id="row1">
    					<w2:column width="90" inputType="text" style="height:28px;" id="column28" value="개인번호" displayMode="label"></w2:column>
    					<w2:column width="90" inputType="text" style="height:28px;" id="column7" value="성명" displayMode="label"></w2:column>
    					<w2:column width="80" inputType="text" style="height:28px;" id="column5" value="근무상태" displayMode="label"></w2:column>
    					<w2:column width="120" inputType="text" style="height:28px;" id="column3" value="직급" displayMode="label"></w2:column>
    					<w2:column width="120" inputType="text" style="height:28px;" id="column20" value="전화번호" displayMode="label"></w2:column>
    					<w2:column width="120" inputType="text" style="height:28px;" id="column29" value="휴대폰" displayMode="label"></w2:column>
    					<w2:column width="200" inputType="text" style="height:28px;" id="column27" value="메일" displayMode="label"></w2:column>
    				</w2:row>
    			</w2:header>
    			<w2:gBody style="" id="gBody1">
    				<w2:row style="" id="row2">
    					<w2:column inputType="text" id="empno" displayMode="label" readOnly="true"></w2:column>
    					<w2:column inputType="text" id="nm" displayMode="label" readOnly="true"></w2:column>
    					<w2:column inputType="text" id="state_nm" displayMode="label" readOnly="true"></w2:column>
    					<w2:column inputType="text" id="posi_nm" displayMode="label" readOnly="true"></w2:column>
    					<w2:column inputType="text" id="ext_no" displayMode="label" readOnly="true"></w2:column>
    					<w2:column inputType="text" id="mobile" displayMode="label" readOnly="true"></w2:column>
    					<w2:column inputType="text" id="email" displayMode="label" readOnly="true"></w2:column>
    				</w2:row>
    			</w2:gBody>
    		</w2:gridView>
    	</xf:group>
    	
    </body>
</html>
