<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ev="http://www.w3.org/2001/xml-events"
    xmlns:w2="http://www.inswave.com/websquare" xmlns:xf="http://www.w3.org/2002/xforms">
    <head meta_programName="LNB" meta_vertical_guides="" meta_horizontal_guides="">
    	<w2:type>DEFAULT</w2:type>
        <w2:buildDate/>
        <xf:model>
        	<xf:instance>
        		<data xmlns=""/>
        	</xf:instance>
        	<w2:dataCollection baseNode="map">
        		<w2:dataList baseNode="list" repeatNode="map" id="dlt_menu" saveRemovedData="true">
        			<w2:columnInfo>
        				<w2:column id="serviceID" name="화면ID" dataType="text"></w2:column>
        				<w2:column id="serviceCode" name="서비스코드" dataType="text"></w2:column>
        				<w2:column id="parentDivCode" name="부모코드" dataType="text"></w2:column>
        				<w2:column id="childNode" name="자식유무" dataType="text"></w2:column>
        				<w2:column id="serviceLevel" name="레벨" dataType="text"></w2:column>
        				<w2:column id="serviceOrder" name="정렬순서" dataType="text"></w2:column>
        				<w2:column id="cn" name="메뉴명" dataType="text"></w2:column>
        				<w2:column id="serviceUrl" name="EIP2화면경로" dataType="text"></w2:column>
        				<w2:column id="serviceNewUrl" name="EIP3화면경로" dataType="text"></w2:column>
        				<w2:column id="useYN" name="메뉴표시여부" dataType="text"></w2:column>
        				<w2:column id="betaServiceYN" name="베타서비스여부" dataType="text"></w2:column>
        				<w2:column id="permission" name="버튼권한" dataType="text"></w2:column>
        			</w2:columnInfo>
        		</w2:dataList>
        		<w2:dataList baseNode="list" repeatNode="map" id="dlt_apr_menu" saveRemovedData="true">
        			<w2:columnInfo>
        				<w2:column id="serviceID" name="화면ID" dataType="text"></w2:column>
        				<w2:column id="serviceCode" name="서비스코드" dataType="text"></w2:column>
        				<w2:column id="parentDivCode" name="부모코드" dataType="text"></w2:column>
        				<w2:column id="childNode" name="자식유무" dataType="text"></w2:column>
        				<w2:column id="serviceLevel" name="레벨" dataType="text"></w2:column>
        				<w2:column id="serviceOrder" name="정렬순서" dataType="text"></w2:column>
        				<w2:column id="cn" name="메뉴명" dataType="text"></w2:column>
        				<w2:column id="serviceUrl" name="EIP2화면경로" dataType="text"></w2:column>
        				<w2:column id="serviceNewUrl" name="EIP3화면경로" dataType="text"></w2:column>
        				<w2:column id="useYN" name="메뉴표시여부" dataType="text"></w2:column>
        				<w2:column id="betaServiceYN" name="베타서비스여부" dataType="text"></w2:column>
        				<w2:column id="permission" name="버튼권한" dataType="text"></w2:column>
        			</w2:columnInfo>
        		</w2:dataList>        		
        		<w2:dataList baseNode="list" repeatNode="map" id="dlt_recomMenu" saveRemovedData="true">
        			<w2:columnInfo>
        				<w2:column id="serviceID" name="화면ID" dataType="text"></w2:column>
        				<w2:column id="serviceCode" name="서비스코드" dataType="text"></w2:column>
        				<w2:column id="parentDivCode" name="부모코드" dataType="text"></w2:column>
        				<w2:column id="childNode" name="자식유무" dataType="text"></w2:column>
        				<w2:column id="serviceLevel" name="레벨" dataType="text"></w2:column>
        				<w2:column id="serviceOrder" name="정렬순서" dataType="text"></w2:column>
        				<w2:column id="cn" name="메뉴명" dataType="text"></w2:column>
        				<w2:column id="serviceUrl" name="EIP2화면경로" dataType="text"></w2:column>
        				<w2:column id="serviceNewUrl" name="EIP3화면경로" dataType="text"></w2:column>
        				<w2:column id="useYN" name="메뉴표시여부" dataType="text"></w2:column>
        				<w2:column id="betaServiceYN" name="베타서비스여부" dataType="text"></w2:column>
        				<w2:column id="permission" name="버튼권한" dataType="text"></w2:column>
        			</w2:columnInfo>
        		</w2:dataList>
        		<w2:dataList baseNode="list" repeatNode="map" id="dlt_myMenu" saveRemovedData="true">
        			<w2:columnInfo>
        				<w2:column dataType="text" name="사번" id="syspayno"></w2:column>
        				<w2:column id="service_id" name="메뉴서비스코드" dataType="text"></w2:column>
        				<w2:column id="menu_id" name="메뉴아이디" dataType="text"></w2:column>
        				<w2:column id="menu_up_id" name="메뉴아이디" dataType="text"></w2:column>
        				<w2:column id="menu_lvl" name="레벨" dataType="text"></w2:column>
        				<w2:column id="menu_seq" name="정렬순서" dataType="text"></w2:column>
        				<w2:column id="menu_folder_nm" name="메뉴명" dataType="text"></w2:column>
        			</w2:columnInfo>
        		</w2:dataList>
        		<w2:dataMap baseNode="map" id="dma_search">
        			<w2:keyInfo>
        				<w2:key id="cn" name="성명" dataType="text"></w2:key>
        				<w2:key id="uid" name="로그인아이디" dataType="text"></w2:key>
        				<w2:key id="syspayno" name="사번아이디" dataType="text"></w2:key>
        				<w2:key id="procClsf" name="업무구분" dataType="text"></w2:key>
        				<w2:key id="tool" name="검색구분" dataType="text"></w2:key>
        				<w2:key id="status" name="APR구분" dataType="text"></w2:key>
        				<w2:key id="taskStatus" name="상태" dataType="text"></w2:key>
        				<w2:key id="instStatus" name="인스턴스상태" dataType="text"></w2:key>
        				<w2:key id="taskName" name="업무명" dataType="text"></w2:key>
        				<w2:key id="budgetControl" name="예산통제예외여부" dataType="text"></w2:key>
        				<w2:key id="start_ymd" name="시작연도" dataType="text"></w2:key>
        				<w2:key id="accnt_state" name="계정상태" dataType="text"></w2:key>
        			</w2:keyInfo>
        		</w2:dataMap>
        		<w2:linkedDataList id="ldt_menuLeaf" bind="dlt_menu">
        			<w2:condition type="filter"><![CDATA[childNode == 'N' && useYN == 'Y']]></w2:condition>
        			<w2:condition type="sort"><![CDATA[cn]]></w2:condition>
        		</w2:linkedDataList>
        	</w2:dataCollection>
        	<w2:workflowCollection></w2:workflowCollection>
			<xf:submission id="sbm_menu" ref='data:json,dma_search' target='data:json,{"id":"dlt_menu","key":"serviceVoList"}' action="/SvcMenuList.pwkjson" method="post"
				mediatype="application/json" encoding="UTF-8" mode="asynchronous">
			</xf:submission>
			<xf:submission id="sbm_myMenu" ref='data:json,dma_search' target='data:json,{"id":"dlt_myMenu","key":"mymenuVoList"}' action="/MymenuClassList.pwkjson" method="post"
				mediatype="application/json" encoding="UTF-8" mode="asynchronous">
			</xf:submission>
			<xf:submission id="sbm_recomMenu" ref='data:json,dma_search' target='data:json,{"id":"dlt_recomMenu","key":"serviceVoList"}' action="/SvcRecommMenuList.pwkjson" method="post"
				mediatype="application/json" encoding="UTF-8" mode="asynchronous">
			</xf:submission>
			<xf:submission id="sbm_aprWaitTot" ref='data:json,dma_search' target='data:json' action="/SvcAprWaitTot.pwkjson" method="post" mediatype="application/json" encoding="UTF-8" mode="asynchronous" />
			<xf:submission id="sbm_workWaitTot" ref='data:json,dma_search' target='data:json' action="/SvcAprWaitTot.pwkjson" method="post" mediatype="application/json" encoding="UTF-8" mode="asynchronous" />
			<!-- 예산통제 카운트 조회 -->
			<xf:submission id="sbm_budgetWorkWaitTot" ref='data:json,dma_search' target='data:json' action="/SvcBudgetWaitTot.pwkjson" method="post" mediatype="application/json" encoding="UTF-8" mode="asynchronous" />
			<!-- 예산통제 집행가능 카운트 조회 -->
			<xf:submission id="sbm_budgetWorkWaitCnt" ref='data:json,dma_search' target='data:json' action="/SvcBudgetWaitCnt.pwkjson" method="post" mediatype="application/json" encoding="UTF-8" mode="asynchronous" />
			<xf:submission id="sbm_aprRejectTot" ref='data:json,dma_search' target='data:json' action="/SvcAprRejectTot.pwkjson" method="post" mediatype="application/json" encoding="UTF-8" mode="asynchronous" />
        </xf:model>
        <script type="text/javascript" lazy="false"><![CDATA[

			var shiftPressed = false;
			var ctrlPressed = false;
			var glovalMenuObj;
			// 나의메뉴 펼침상태
			var isMyMenuExpand = true;
			
			/**
			 * 결재 메뉴
			 */
			scwin.getAprMenu = function() {
				return [
					 { serviceID: "#", serviceCode: "A2",   parentDivCode: "P",  serviceLevel: 1, serviceLevel: 0, cn: "전자결재", serviceNewUrl: "" }
					,{ serviceID: "A001", serviceCode: "AP02", parentDivCode: "A2",  serviceLevel: 2, serviceLevel: 2, cn: "결재문서", serviceNewUrl: "/ui/apr/layoutSimple.xml" }
					,{ serviceID: "A002", serviceCode: "AP02", parentDivCode: "A2",  serviceLevel: 2, serviceLevel: 2, cn: "신청서양식함", serviceNewUrl: "/ui/apr/listDocument.xml" }
					,{ serviceID: "A003", serviceCode: "AP02", parentDivCode: "A2",  serviceLevel: 2, serviceLevel: 2, cn: "결재대기함", serviceNewUrl: "/ui/apr/listApprWait.xml" }
					,{ serviceID: "A004", serviceCode: "AP02", parentDivCode: "A2",  serviceLevel: 2, serviceLevel: 2, cn: "업무대기함", serviceNewUrl: "/ui/apr/listWorkWait.xml" }
					,{ serviceID: "A005", serviceCode: "AP02", parentDivCode: "A2",  serviceLevel: 2, serviceLevel: 2, cn: "결재진행함", serviceNewUrl: "/ui/apr/listRunning.xml" }
					,{ serviceID: "A006", serviceCode: "AP02", parentDivCode: "A2",  serviceLevel: 2, serviceLevel: 2, cn: "결재완료함", serviceNewUrl: "/ui/apr/listComplet.xml" }
					,{ serviceID: "A007", serviceCode: "AP02", parentDivCode: "A2",  serviceLevel: 2, serviceLevel: 2, cn: "대결완료함", serviceNewUrl: "/ui/apr/listInstead.xml" }
					,{ serviceID: "A008", serviceCode: "AP02", parentDivCode: "A2",  serviceLevel: 2, serviceLevel: 2, cn: "담당자완료함", serviceNewUrl: "/ui/apr/listAuthComplet.xml" }
					,{ serviceID: "A009", serviceCode: "AP02", parentDivCode: "A2",  serviceLevel: 2, serviceLevel: 2, cn: "결재반려함", serviceNewUrl: "/ui/apr/listRejected.xml" }					
					,{ serviceID: "A010", serviceCode: "AP02", parentDivCode: "A2",  serviceLevel: 2, serviceLevel: 2, cn: "작성중문서함", serviceNewUrl: "/ui/apr/listSaved.xml" }
					,{ serviceID: "B504", serviceCode: "AP02", parentDivCode: "A2",  serviceLevel: 2, serviceLevel: 2, cn: "예산통제대기함", serviceNewUrl: "/ui/apr/layoutBugtCtrl.xml" }
				];
			};
			
			scwin.getSampleMenu = function() {
				var arrMenu = [];
				
				/*
				var arrSample = $p.top().wdc_layout.getWindow("SAMPLE").dlt_sample.getAllJSON();
				var menuObj = {};
				menuObj[gcm.MENU_INFO.MENU_ID] = "S";
				menuObj[gcm.MENU_INFO.MENU_NM] = "UI 공통 샘플";
				menuObj[gcm.MENU_INFO.LEVEL] = 1;
				arrMenu.push(menuObj);
				for (i=0; i<arrSample.length; i++) {
					menuObj = {};
					menuObj[gcm.MENU_INFO.MENU_ID] = arrSample[i]["MENU_ID"];
					menuObj[gcm.MENU_INFO.P_MENU_ID] = arrSample[i]["P_MENU_ID"];
					menuObj[gcm.MENU_INFO.MENU_NM] = arrSample[i]["MENU_NM"];
					menuObj[gcm.MENU_INFO.SRC_PATH] = arrSample[i]["SRC_PATH"];
					menuObj[gcm.MENU_INFO.LEVEL] = arrSample[i]["LEVEL"] + 1;
					menuObj[gcm.MENU_INFO.AUTH] = arrSample[i]["permission"];
					arrMenu.push(menuObj);
				}*/
				return arrMenu;
			};
			
			scwin.openContextMenu = function(left, top) {
				// UI 처리
				const contextMenu = document.getElementById(context_menu.getID());
				contextMenu.style.left = left + "px";
				contextMenu.style.top = top + "px";
				contextMenu.classList.remove("visible");
				setTimeout(function(){
					contextMenu.classList.add("visible");				
				});
			};

			scwin.openLabelTooltip = function(left, top, label, index) {
				// UI 처리
				const labelTooltip = document.getElementById(label_Tooltip.getID());
				const labelTooltipText = document.getElementById(labelTooltip_text.getID());

				labelTooltipText.setAttribute("trvMenuIndex", index);
				labelTooltipText.innerHTML = label;
				labelTooltip.style.left = left + "px";
				labelTooltip.style.top = top + "px";
			};
	
			/**
			 * 페이지 로딩 이벤트
			 */
			scwin.onpageload = function() {

				document.onkeydown = function(event) {
					shiftPressed = event.keyCode==16;
					ctrlPressed = event.keyCode==17;
				}
				document.onkeyup = function(event) {
					if( event.keyCode==16 ){ shiftPressed = false; }
					if( event.keyCode==17 ){ ctrlPressed = false; }
				}
				
				document.addEventListener('mouseout', function(event) {
				    if (!event.relatedTarget) {
				        shiftPressed = false;
				        ctrlPressed = false;
				    }
				});
				
				document.addEventListener('mouseover', function(event) {
				    if (!event.relatedTarget) {
				        shiftPressed = false;
				        ctrlPressed = false;
				    }
				});
								

				document.addEventListener('click', function(e){
					if(glovalMenuObj != undefined){
						var url = '/?serviceid=' + glovalMenuObj.serviceID
						if (shiftPressed){
							console.log("Shift and click!");
							window.open( url, glovalMenuObj.cn)
							shiftPressed = false;
						}
						if (ctrlPressed){
							console.log("Control and click!");
							window.open( url)
							ctrlPressed = false;
						}
						glovalMenuObj = null;
					}
					
					const contextMenu = document.getElementById("mf_wfm_side_context_menu");
					if (e.target.offsetParent != contextMenu) {
						contextMenu.classList.remove("visible");
					}
				});
				
				/**
				 * 전자결재 문서함 아이콘 메뉴 영역 contextMenu 오버라이딩
				 */
				sideMenuList.bind("contextmenu", function(e){
					const serviceid = $p.getComponentById(e.target.id).getUserData('userData1');
					if (serviceid && 4 == serviceid.length) {
						e.preventDefault();
						
						// 비즈니스 로직 처리, 선택된 메뉴를 글로벌 변수에 적재
						glovalMenuObj = gcm.win.getMenuObj(serviceid);

						// UI 처리
						scwin.openContextMenu(e.clientX, e.clientY);
					}
				});
				
				/**
				 * 추천 메뉴 영역 contextMenu 오버라이딩
				grp_recomRoot.bind("contextmenu", function(e){
					let serviceid = e.target.getAttribute('data-serviceid');
					if (serviceid && 4 == serviceid.length) {
						e.preventDefault();
						// 비즈니스 로직 처리, 선택된 메뉴를 글로벌 변수에 적재
						gcm.win.getMenuObj(serviceid, function(serviceObj) {
							glovalMenuObj = serviceObj;
							// UI 처리
							scwin.openContextMenu(e.clientX, e.clientY);
						});
					}
				});
				
				 */
				/**
				 * 마이 메뉴 영역 contextMenu 오버라이딩
				grp_myMenuRoot.bind("contextmenu", function(e){
					let node = eval(e.target.id);
					let serviceid = node.getUserData(gcm.MENU_INFO.SERVICE_ID);
					if (serviceid && 4 == serviceid.length) {
						e.preventDefault();
						// 비즈니스 로직 처리, 선택된 메뉴를 글로벌 변수에 적재
						gcm.win.getMenuObj(serviceid, function(serviceObj) {
							glovalMenuObj = serviceObj;
							// UI 처리
							scwin.openContextMenu(e.clientX, e.clientY);
						});
					}
				});			

				 */
				labelTooltip_text.bind("mouseleave", function(e){
					scwin.openLabelTooltip(0, 0, "", "");
				});

				/**
				 * 메뉴의 고정핀,펼침상태 사용자가 마지막 사용한 값으로 기본값 세팅한다.
				 * localStorage 값을 확인하고 해당 항목의 값을 기반으로 요소에서 CSS 클래스를 추가하거나 제거한다.
				 * localStorage 수정 항목과 더 많은 항목이 있는지 확인하고 해당 값을 검색하여 값을 기반으로 grp_container 및 grp_side 요소에서 클래스를 추가하거나 제거한다.
				 */
				if (localStorage.getItem("more") == null) {
					$p.top().grp_container.addClass("fix");
					grp_side.addClass("more");
					localStorage.setItem("more",grp_side.hasClass("more"));
					localStorage.setItem("fix", "true");
				} else {
					if (localStorage.getItem("fix") == 'true'){
						$p.top().grp_container.addClass("fix");
					} else {
						$p.top().grp_container.removeClass("fix");
					} 
					if (localStorage.getItem("more") == 'true'){
						grp_side.addClass("more");
					} else {
						grp_side.removeClass("more");
						$p.top().grp_container.removeClass("fix");
					}  
				}
			
				if (localStorage.getItem("selectMenu") != '') {
					var value = localStorage.getItem("selectMenu");
					switch (value) {
						case 'menu':
							btn_menu.trigger('onclick',[]);
							break;
						case 'recomm':
							btn_recomm.trigger('onclick',[]);
							break;
						case 'myMenu':
							btn_myMenu.trigger('onclick',[]);
							break;
						default:
							btn_recomm.trigger('onclick',[]);
					}
				} else {
				  btn_recomm.trigger('onclick',[]);
				}
				
				//btn_recomm.trigger('onclick',[]);
				if (/^localhost|8080$/.exec(location.host) || /^9999|20230946|20130576|20220977|20170701|20160348/.exec(com.getLoginInfo('sn'))) {
					grp_sample.show('');
				}
		
				// 전자결재 메뉴 추가 #1, 전체 메뉴 조회 전 이동하는 기능을 지원하기 위해
				dlt_apr_menu.setJSON( scwin.getAprMenu(), false);				
				
				// 전체공통코드 및 전체메뉴 조회
				scwin.getAllCommonCodeAndMenus();
				
				// 추천메뉴 조회
				scwin.selectRecommendMenu();
				
				// 좌측 카운트 일괄 조회
				scwin.refreshCount();
				
				// 좌측 카운트 조회 인터벌 시작
				scwin.startIntervalForCount();

				// 메뉴검색 펼침상태로 변경
				scwin.btn_srch_onclick();
				//scwin.btn_fix_onclick();
				//scwin.btn_lnb_onclick();
			};
			
			
			/**
			 * 전체공통코드 및 전체메뉴 조회
			 * 메뉴 조회와 URL get 파라미터로 넘아온 화면을 독립적으로 처리하도록 병렬 처리한다.
			 */
			scwin.getAllCommonCodeAndMenus = function() {
				if (gcm.CMNCD_INFO.isIndexAll === true) { 
					// 공통코드 전체 조회
					gcm.cd.getCmnCdAll(scwin, function() {

						// 첫 화면 오픈 (신청서양식함 or 파라미터(get)으로 넘어온 서비스ID 에 해당하는 화면
						scwin.openInitPage();		
						
						// 메뉴 전체 조회
						scwin.selectAllMenu();
						
						// 나의메뉴 조회
						scwin.searchMyMenu();
					});
				} else {
					var codeOptions = [{ code : "XAD"}];
					com.setCmnCd(codeOptions, function() {	
						// 첫 화면 오픈 (신청서양식함 or 파라미터(get)으로 넘어온 서비스ID 에 해당하는 화면
						scwin.openInitPage();		
						
						// 메뉴 전체 조회
						scwin.selectAllMenu();
						
						// 나의메뉴 조회
						scwin.searchMyMenu();
					});
				}
			};

			/**
			 * 전체 메뉴 조회
			 */
			scwin.selectAllMenu = function() {	
				// 메뉴 조회 (서버세션의 아이디로 처리)
				console.log("Server Start:", new Date().toLocaleString('ko-kr'));
				com.execute(sbm_menu, {
					successCallback : function(e) {
						console.log("Client Close:", new Date().toLocaleString('ko-kr'));
						
						// 하위 메뉴 없는 상위 분류 필터로 삭제
						dlt_menu.setFilter({
							type:"func", 
							colIndex:"childNode", 
							key : (value, customParam, index) => {
								if (value && value.trim() === "Y" && dlt_menu.getMatchedJSON("parentDivCode", dlt_menu.getCellData(index, "serviceCode")).length < 1 ) {
									return false;
								}
								return true;
							},
							condition : "and"
						});
						// 로딩 이미지 제거
						loading_allmenu.remove();

						btn_myMenuMgt.show('');
						// grp_menuListOuter.removeClass('loading');

						// 전자결재 메뉴 추가 #2, 전체 메뉴 조회 후 전자결재 메뉴 이동을 위해 추가

						// EnterKey Event 바인딩
						scwin.enterKeyEventBind();

						grp_menu.setStyle("overflow", "auto");
						grp_myMenu.setStyle("overflow", "auto");			
					},
					processMsg: ""
				});
			};

			/**
			 * 초기 페이지를 오픈한다.
			 * get방식으로 넘어온 화면 정보가 있으면 오픈 한다.
			 */
			scwin.openInitPage = function() {
				// serviceId파라미터로 대상 화면 정보가 넘어옴	
				var serviceId = $p.top().$p.getParameter("serviceId") || $p.top().$p.getParameter("serviceid");

				if (!com.isEmpty(serviceId)) {
					var menus = scwin.getAprMenu();
					var aprMenu = menus.filter( function( menu) {
						return menu.serviceID == serviceId;
					});
					
					if (aprMenu && 1 == aprMenu.length) {
						// 전자결재 메뉴 예외 처리
						com.openMenu(aprMenu[0]);
					} else {
						// 동적으로 메뉴정보를 가져온다. 해당 데이터가 없는 경우 []리턴
						com.executeDynamic({id : "sbm_getMenu", action : "SvcGetMenu.pwkjson"}, {
							  requestData: { serviceID : serviceId }
							, processMsg : ""	// silence
							, successCallback: function (ret) {
								com.openMenu(ret.responseJSON.elData, WebSquare.net.getAllParameter());
							}
						});
					}
					
				} else {
					// 정책적으로 결정된 초기화면 오픈 (현재: 신청서양식함, 추후: 대시보드)					
					com.openMenu({ serviceID: "A002", serviceCode: "AP02", parentDivCode: "A2",  serviceLevel: 2, serviceLevel: 2, cn: "신청서양식함", serviceNewUrl: "/ui/apr/listDocument.xml" }, {});		
				}
			};			
			
			/**
			 * 각 문서함 카운트 조회 인터벌 시작 => 최초 index 페이지 진입시 수행
			 * @date 2022. 08. 29
			 * @author James
			*/ 			
			scwin.startIntervalForCount = function() {
				var delay = 1000 * 60 * 5;	// 5분 

				setInterval( function () {
					scwin.getDataApprCnt();
				}, delay);
			};
			
			
			/**
			 * 각 문서함 카운트 전체 리플래시 => 문서함 이동시 즉시 수행되어 카운트 갱신
			 * @date 2022. 08. 29
			 * @author James
			*/ 
			scwin.refreshCount = function() {

				// 모든 카운트 조회
				window.setTimeout(scwin.getDataApprCnt, 100);	
			};

			
			/**
			 * 결재대기함 카운트 처리
			 * @date 2022. 08. 29 
			 * @author James
			*/ 
			scwin.getDataApprCnt = function() {		
				// 결재대기함 카운트 조회
				com.initDataMap(dma_search);
				dma_search.set("procClsf","approval");
				dma_search.set("tool","approval");
				dma_search.set("instStatus","Running");
				dma_search.set("taskStatus","NEW");
				dma_search.set("status","");
				com.execute(sbm_aprWaitTot, {
					successCallback : function(e) {
						tot_aprWait.show()
						tot_aprWait.setValue(e.responseJSON.elData.totalCount);
						if(e.responseJSON.elData.totalCount == 0) tot_aprWait.hide();

						scwin.getBudgetWorkCnt();
					},
					processMsg: ""
				});				
			};
			
			/**
			 * 예산통제 카운트 처리
			 * @date 2023. 05. 17 
			 * @author Chris
			*/ 
			scwin.getBudgetWorkCnt = function() {
				// 예산통제 카운트 관련 조회
				dma_search.set("procClsf","work");
				dma_search.set("tool","work");
				dma_search.set("instStatus","Running");
				dma_search.set("taskStatus","NEW");
				//dma_search.set("taskName","예산통제");
				dma_search.set("budgetControl","only");
								
				com.execute(sbm_budgetWorkWaitTot, {
					successCallback : function(e) {
						dma_search.set("taskName","");
						if(e.responseJSON.elData.totalCount > 0){
							tot_budgetWorkWait.setValue(e.responseJSON.elData.totalCount);
							grp_budget.show();
							tot_budgetWorkWait.show();
						} 
			  			scwin.getBudgetRakCnt();
					},
					processMsg: ""
				});
			};
			
			/**
			 * 예산통제 집행가능 카운트 처리
			 * @date 2023. 05. 30 
			 * @author Chris
			*/ 
			scwin.getBudgetRakCnt = function() {
				// 예산통제 카운트 집행가능 관련 조회
				var today = gcm.date.getServerDateTime();
				dma_search.set("syspayno", com.getLoginInfo("sn"));
				dma_search.set("start_ymd", today.substr(0,4) + '%');
				dma_search.set("accnt_state", "RAK041");
				
				com.execute(sbm_budgetWorkWaitCnt, {
					successCallback : function(e) {	
						if(e.responseJSON.elData.totalCount > 0){
							grp_budget.show();
						} 
				
			  			scwin.getDataWorkCnt();
					},
					processMsg: ""
				});
			};
			
			
			/**
			 * 업무대기함 카운트 처리
			 * @date 2022. 08. 29 
			 * @author James
			*/ 
			scwin.getDataWorkCnt = function() {
				// 업무대기함 카운트 관련 조회
				dma_search.set("procClsf","work");
				dma_search.set("tool","work");
				dma_search.set("instStatus","Running");
				dma_search.set("taskStatus","NEW");
				dma_search.set("budgetControl","except");
				com.execute(sbm_workWaitTot, {
					successCallback : function(e) {
						tot_workWait.show();
						tot_workWait.setValue(e.responseJSON.elData.totalCount);
						if(e.responseJSON.elData.totalCount == 0) tot_workWait.hide();
				
			  			scwin.getDataRejectCnt();
					},
					processMsg: ""
				});
			}				

			/**
			 * 문서유통 결재대기함 jsonp  건수 처리
			 * @date 2022. 08. 29 
			 * @author James
			*/ 
			scwin.getDataRejectCnt = function() {
				// 반려함 카운트 조회
				dma_search.set("procClsf","reject");
				dma_search.set("tool","");
				dma_search.set("taskStatus","reject");
				dma_search.set("status","XAD015");
				com.execute(sbm_aprRejectTot, {
					successCallback : function(e) {
						tot_reject.show();
						tot_reject.setValue(e.responseJSON.elData.totalCount);
						if(e.responseJSON.elData.totalCount == 0) tot_reject.hide();

			  			scwin.getDataKdocCnt();
					},
					processMsg: ""
				});				
			}

			/**
			 * 문서유통 결재대기함 jsonp  건수 처리
			 * @date 2022. 08. 29 
			 * @author James
			*/ 
			scwin.getDataKdocCnt = function() {
				$.ajax({
					url: gcm.baseUrls.kdocUrl + "/xclickr3_kitech/gate/dispatcherPortal.jsp",
					dataType: "jsonp",
					success: function(data){
						// 문서유통 결제대기함 jsonp  건수 response 처리
						tot_kdocWait.setValue((data != null && data instanceof Array && 0 < data.length) ? data[0].total : 0);
						tot_kdocWait.show();
						if(tot_kdocWait.getValue() == 0) tot_kdocWait.hide();
					},
					error: function(xhr){
						console.log("실패-", xhr);
						tot_kdocWait.hide();
					}
				});
			};	

			
			/**
			 * 검색 박스의 Enter Key 이벤트를 바인딩한다.
			 * @date 2022. 10. 07
			*/ 
			scwin.enterKeyEventBind = function() {
				// $(".side .menu li a").on("click", scwin.menuList_onclick);
				
				acb_menu.bind('onkeydown', function(){
					if (event.target.value[0 ] == ' ') {
						event.target.value = event.target.value.trim();
					}
					if ('' === scwin.input_menu_name.trim() || event.key != 'Enter') {
						return false;
					}
					var menuObj = ldt_menuLeaf.getMatchedJSON(gcm.MENU_INFO.MENU_NM, scwin.input_menu_name, false)[0];
					// 화면 열기
					scwin.acb_menu_openMenu(menuObj);
				});
			};
			
			
			/**
			 * 선택한 메뉴를 토글한다.
			 *
			 * @date 2022. 10. 07
			 */ 
			scwin.toggleMenu = function(serviceId, serviceCode) {
				if (serviceId.startsWith('A0')) {
					$('.side .menu .mClick').removeClass("mClick");					
					$('.side .menu .' + serviceId).addClass("mClick");
					return false;
				}

				// 메뉴 오픈				
				var preBtnComp = com.getComponent($('a:not(.ico).w2anchor2.on')[0].id);
				switch(preBtnComp) {
					case btn_menu: 
						console.log("all menu");
						trvMenu.findNodeByValue(serviceCode, true);
						break;
					case btn_recomm: 
					case btn_myMenu:
						console.log("recomm or mymenu");
						let leafNode = $(preBtnComp == btn_recomm ? grp_recomm.render : grp_myMenu.render).find("li .leaf a");
						let fdNode = leafNode.filter(function(idx, nd){
							let ndData = preBtnComp == btn_recomm ? $(nd).data("serviceid") : $(nd).attr("serviceid") ;	
							console.log(idx, nd, ndData, serviceId);				
							return ndData == serviceId;
						});
		
						if(fdNode) {
							let tgtNode = fdNode[0]; 
							$p.$(".msel").removeClass("msel");
							$(tgtNode).addClass("msel");
							let parentNds = $(tgtNode).parents(".menuListBox li");
							parentNds.each(function(idx, el){
								if(!$(el).hasClass("leaf")) {
									$(el).removeClass("off");
									$(el).addClass("on");
								}
							});					
						}
						
						break;
				}

				if (!grp_side.hasClass("more")){	
					grp_side.toggleClass("more");	// LBN 펼침
				}
				// 메뉴 고정 확인 및 고정
				if (!$p.top().grp_container.hasClass("fix")){
					// $p.top().grp_container.toggleClass("fix");							
				}
			}

			/**
			 * 나의메뉴 조회 (사번으로 조회)
			 */
			scwin.searchMyMenu = function(pMenuId) {
				dma_search.set("syspayno", com.getLoginInfo("sn"));
				com.execute(sbm_myMenu, {
					successCallback : function(e) {
						// 로딩 이미지 제거
						loading_mymenu.hide();
						
						var paramObj = {};
						
						paramObj.menuIdCol 	  = "menu_id";
						paramObj.serviceIdCol = "menu_folder_nm";
						paramObj.menuLevelCol = "menu_lvl";
						paramObj.menuNm		  = "menu_folder_nm";
						paramObj.pMenuIdCol	  = "menu_up_id";

						scwin.genarateMenuTree("myMenu", dlt_myMenu, paramObj, grp_myMenuRoot, false);
						if(isMyMenuExpand){
							$p.$("#grp_myMenu li").removeClass("off");
							$p.$("#grp_myMenu li").addClass("on");
						}
					},
					processMsg: ""
				});
			};
			
						
			/**
			*	메뉴 구성
			*	@param menuStr				 (String)	메뉴 이름
			*	@param dataList				 (Object)	메뉴 데이터리스트
			*	@param paramObj				 (Object)	메뉴 파라미터
			*	@param paramObj.menuIdCol	 (String)	메뉴 ID컬럼명
			*	@param paramObj.serviceIdCol (String)	메뉴 서비스ID컬럼명
			*	@param paramObj.menuLevelCol (String)	메뉴 레벨 컬럼명
			*	@param paramObj.menuNm		 (String)	메뉴 메뉴이름 컬럼명
			*	@param paramObj.pMenuIdCol	 (String)	메뉴 메뉴이름 컬럼명
			*	@param isMyMenu 			 (Boolean)	나의 메뉴 구분	default : true	
			**/
			scwin.genarateMenuTree = function(menuStr, dataList, paramObj, rootComp, isNotMyMenu) {
				isNotMyMenu = com.isEmpty(isNotMyMenu) ? true : false;
				
				var filter = [{ columnId : paramObj.menuLevelCol, operator : "==", value : 1}];
				if (isNotMyMenu) filter.push({ columnId : gcm.MENU_INFO.USE_YN, operator : "==", value : "Y", logical : "&&" });
				var list1stMenu = gcm.data.getMatchedJSON(scwin, dataList, filter);
				let child = WebSquare.util.getChildren(rootComp);
				child.forEach(obj => obj.remove());

				scwin._genMenuRecursive(menuStr, dataList, paramObj, isNotMyMenu, list1stMenu, rootComp, 0);
			};
			
			scwin._genMenuRecursive = function(menuStr, dataList, paramObj, isNotMyMenu, parentMenuArr, groupComp, depth) {
				parentMenuArr.forEach(function(menuObj, i) {
					var grpCompId = `${groupComp.getOriginalID()}_${i}_grp_${menuStr}_${depth}_Menu`;
					var btnCompId = `${groupComp.getOriginalID()}_${i}_btn_${menuStr}_${depth}_Menu`;
					var grp_Menu  = com.createComponent(grpCompId, "group", { "tagname" : "li"}, groupComp);
					var btn_Menu  = com.createComponent(btnCompId, "textbox", { "tagname": "a"}, grp_Menu);
					
					grp_Menu.addClass("mDeth");
					btn_Menu.bind("onclick", scwin.treeMenuClick);
					btn_Menu.bind("contextmenu", scwin.treeMenu_contextmenu);
					btn_Menu.setValue(menuObj[paramObj.menuNm]);
					btn_Menu.setUserData(gcm.MENU_INFO.MENU_ID, menuObj[gcm.MENU_INFO.SERVICE_ID] || menuObj[paramObj.menuIdCol]);
					
					// 하위 메뉴
					var childMenuFilter = [ { columnId : paramObj.pMenuIdCol, operator : "LIKE", value : menuObj[paramObj.menuIdCol].trim()}];
					var childMenuArr = gcm.data.getMatchedJSON(scwin, dataList, childMenuFilter);
					
					if (childMenuArr.length == 0 && !(menuObj[paramObj.menuIdCol].includes("FOLDER"))) {
						btn_Menu.setUserData("isLeaf", true);
						grp_Menu.addClass("leaf");
						$(btn_Menu.render).attr("serviceId", menuObj[paramObj.serviceIdCol]);
					} else {
						grp_Menu.addClass("off"); // 닫힌 폴더
						var childGrpId   = `${groupComp.getOriginalID()}_${i}_grp_${menuStr}_${depth}_childMenu`;
						var childGrpComp = com.createComponent(childGrpId, "group", { "tagname" : "ul"}, grp_Menu);
						
						scwin._genMenuRecursive(menuStr, dataList, paramObj, isNotMyMenu, childMenuArr, childGrpComp, ++depth);
					}
					
					
				});
			};
			
			/**
			 * 메뉴 트리 클릭 이벤트 
			 */
			scwin.menuClick = function() {
				if (this.isLeaf()) {
					// 화면 열기
					var menuObj = gcm.win.getMenuObj( this.getSelectedValue());
					glovalMenuObj = menuObj;

					if (!shiftPressed && !ctrlPressed){
						if (com.openMenu(menuObj)) {
							if (!scwin.isFixLnb()){
								scwin.btn_lnb_onclick(); // LNB 접기
							}				
						} 
					}
				} 

				// 선택 처리
				$p.$(".msel").removeClass("msel");
				this.addClass("msel");
			};
			
			/**
			 * 트리메뉴 클릭 이벤트 
			 */
			scwin.treeMenuClick = function() {
				var isLeaf = this.getUserData("isLeaf");
				if (isLeaf) {
					// 화면 열기
					var menuId = this.getUserData(gcm.MENU_INFO.MENU_ID);

					gcm.win.getMenuObj(menuId, function(menuObj) {
						glovalMenuObj = menuObj;
						if(!shiftPressed && !ctrlPressed){
							if (com.openMenu(menuObj)) {
								if (!scwin.isFixLnb()){
									scwin.btn_lnb_onclick(); // LNB 접기
								}
							} 
						}					
					});
				} else {
					// 폴더 아이콘 
					if ($(this.render).parent().hasClass("off")) {
						// 폴더 펼치기
						$(this.render).parent().removeClass("off")
						$(this.render).parent().addClass("on")
					} else {
						// 폴더 접기
						$(this.render).parent().removeClass("on")
						$(this.render).parent().addClass("off")
					}
				}
				// 선택 처리
				$p.$(".msel").removeClass("msel");
				this.addClass("msel"); 
			};	
			
			/**
			 * LNB 토글
			 */
			scwin.btn_lnb_onclick = function() {
				grp_side.toggleClass("more");
				localStorage.setItem("more",grp_side.hasClass("more"));
				if (!grp_side.hasClass("more") && $p.top().grp_container.hasClass("fix")) {			
					$p.top().grp_container.removeClass("fix");
					// localStorage.setItem("fix",$p.top().grp_container.hasClass("fix"));
				}
				// 로컬 스토리지에서 메뉴 고정 여부 값을 가져온다.
				if (grp_side.hasClass("more") && "true" == localStorage.getItem("fix")) {
					$p.top().grp_container.removeClass("fix");
					$p.top().grp_container.addClass("fix");
					// localStorage.setItem("fix",$p.top().grp_container.hasClass("fix"));
				}
				// WebSquare.localStorage.setItem("more", grp_side.hasClass("more"));
			};
			
			/**
			 * LNB 고정
			 */
			scwin.btn_fix_onclick = function() {
				$p.top().grp_container.toggleClass("fix");
				// WebSquare.localStorage.setItem("fix", $p.top().grp_container.hasClass("fix"));
				localStorage.setItem("fix", $p.top().grp_container.hasClass("fix"));
			};
			
			/**
			 * LNB 고정 여부 확인
			 */
			scwin.isFixLnb = function() {
				return $p.top().grp_container.hasClass("fix");
			};
		
			
			/**
			 * 전체메뉴 아이콘 클릭 이벤트
			 */
			scwin.btn_menu_onclick = function() {
				btn_menu.addClass("on");
				btn_myMenu.removeClass("on");
				grp_menu.show("");
				grp_myMenu.hide();
				spa_menuTab.setValue("전체메뉴");
				// WebSquare.localStorage.setItem("selectMenu", "btn_menu");
				localStorage.setItem("selectMenu", "btn_menu");
			};
			
			/**
			 * 나의메뉴 아이콘 클릭 이벤트
			 */
			scwin.btn_myMenu_onclick = function() {
				btn_myMenu.addClass("on");
				btn_menu.removeClass("on");
				grp_myMenu.show("");
				grp_menu.hide();
				spa_menuTab.setValue("나의메뉴");
				// WebSquare.localStorage.setItem("selectMenu", "btn_myMenu");
				localStorage.setItem("selectMenu", "btn_myMenu");
			};
			
			/**
			 * 나의메뉴 관리 팝업
			 */
			scwin.btn_myMenuMgt_onclick = function(e) {
				// 나의메뉴 관리 팝업
				var options = { 
					  id : "myMenuMgtPop"
					, popupName : "나의메뉴 관리"
					, width : 1000, height: 600 
				};
				com.openPopup("/cm/xml/myMenuMgtPop2.xml", options, null, function(retObj) {
					// 삭제된 나의메뉴가 열려있으면  화면타이틀 아이콘 토글
					for (var i=0; i<retObj.length; i++) {
						if (retObj[i]["menu_lvl"] == "2") {
							var winObj = $p.top().wdc_layout.getWindowByWindowId(retObj[i]["service_id"]);
							if (!com.isEmpty(winObj) && !com.isEmpty(winObj.wfm_title)) {
								winObj.wfm_title.getWindow().btn_myMenu.toggleClass("on");
							}
						}
					}
					// 나의메뉴 재조회
					$p.top().wfm_side.getWindow().scwin.searchMyMenu();
				});
			};
				
			/**
			 * 메뉴검색 토글
			 */
			scwin.btn_srch_onclick = function() {
				if (btn_srch.hasClass("on")) {
					acb_menu.hide();
					grp_menu.setStyle("top", "");
					grp_myMenu.setStyle("top", "");
					grp_recomm.setStyle("top", "");
				} else {
					acb_menu.show("")
					grp_menu.setStyle("top", "160px");
					grp_myMenu.setStyle("top", "150px");
					grp_recomm.setStyle("top", "150px");
					acb_menu.setEditMode();
				}
				btn_srch.toggleClass("on");
			};
		
			/**
			 * 메뉴검색에서 검색된 메뉴 선택
			 */
			scwin.acb_menu_onselected = function(info) {
				var menuObj = ldt_menuLeaf.getMatchedJSON(gcm.MENU_INFO.MENU_ID, info.newValue, true)[0];
				scwin.acb_menu_openMenu(menuObj);
			};
			
			scwin.acb_menu_openMenu = function(menuObj) {
				
				// 화면 열기
				if (com.openMenu(menuObj)) {
					scwin.toggleMenu(menuObj[gcm.MENU_INFO.SERVICE_ID], menuObj[gcm.MENU_INFO.MENU_ID]);
					if (!scwin.isFixLnb()){
						scwin.btn_lnb_onclick(); // LNB 접기
					}
				
				}
			}
			
			/**
			 * 메뉴 접기
			 */
			scwin.btn_fold_onclick = function() {
				trvMenu.spanAll(false);
				if (btn_myMenu.hasClass("on")) {
					$p.$("#grp_myMenuRoot li").removeClass("on");
					$p.$("#grp_myMenuRoot li").addClass("off");
				}
				if (btn_recomm.hasClass("on")) {
					$p.$("#grp_recomRoot li").removeClass("on");
					$p.$("#grp_recomRoot li").addClass("off");
				}
			};
			
			/**
			 * 메뉴 펼치기
			 */
			scwin.btn_expand_onclick = function() {
				trvMenu.spanAll(true);
				if (btn_myMenu.hasClass("on")) {
					$p.$("#grp_myMenu li").removeClass("off");
					$p.$("#grp_myMenu li").addClass("on");
				}
				if (btn_recomm.hasClass("on")) {
					$p.$("#grp_recomRoot li").removeClass("off");
					$p.$("#grp_recomRoot li").addClass("on");
				}
			};
			
			
			/**
			 * 샘플 목록
			 * @date 2022. 08. 24
			 */ 
			scwin.btn_recommend_onclick = function() {				
				btn_recommend.addClass("on");
				btn_menu.removeClass("on");
				grp_recomm.show("");
				grp_menu.hide();
				spa_menuTab.setValue("추천메뉴");
				// WebSquare.localStorage.setItem("selectMenu", "btn_recomm");
				localStorage.setItem("selectMenu", "btn_recomm");
			};
			
			/**
			 * 샘플 목록
			 * @date 2022. 08. 24
			 */ 
			scwin.menuList_onclick = function() {
				var btnComp = com.getComponent(event.target.parentElement.id);
				if (!btnComp.hasClass("mClick")) {
					$('.side .menu .mClick').removeClass("mClick");
					btnComp.addClass("mClick");
				}
			};
			
					
			/**
			 * 전자결재 메뉴 클릭 이벤트 핸들러
			 */
			scwin.apr_btns_onclick = function() {
				if (0 < this.getID().indexOf('btn_kdocWait')) {
					// 문서유통 예외 처리
					window.open(gcm.baseUrls.kdocUrl, "_blank");
					
				} else {
					var className = this.getParent().getClass();
					var serviceid = className.substr(className.indexOf('A0'));
					if(serviceid.length < 3) serviceid = className.substr(className.indexOf('B5'));
					/*
					if ('A003' == serviceid) {
						alert("금일 전산시스템 작업으로 인해 [결재대기함] 사용이 불가하오니 많은 양해부탁드립니다. (~22:00)");
						return;
					}*/
					
					if (-1 < $p.top().wdc_layout.windows.findIndex( function( win) { return win.windowId.startsWith('A0'); })) {
						glovalMenuObj = gcm.win.getMenuObj(serviceid);
						document.body.click();
						if(!shiftPressed && !ctrlPressed){
							// 기존 전자결재 메뉴가 있으면 이동
							com.movePageMenu(serviceid, { sideYn : "Y"});
						}
					} else {
						glovalMenuObj = gcm.win.getMenuObj(serviceid);
						document.body.click();
						if(!shiftPressed && !ctrlPressed){
							// 전자결재 메뉴가 모두 닫혀있는 상태에서는 새창으로 오픈
							var menuObj = gcm.win.getMenuObj(serviceid);
							com.openMenu(menuObj, { sideYn : "Y"});
						}
					}
					// 활성 탭 타이틀 설정
					var selectedTab = document.querySelectorAll('.w2windowContainer_nameLayer.w2windowContainer_selectedNameLayer');
					if(selectedTab.length > 0){
						selectedTab[0].textContent;
						document.title = selectedTab[0].textContent + " : KITECH EIP3.0 전자결재"	
					}

				}
				
				// 메뉴 고정 확인 및 고정
				if (!$p.top().grp_container.hasClass("fix")){
					grp_side.removeClass("more");
				}
				
				// 각 결재함 카운트 갱신
				scwin.refreshCount();
				
				// MDI 탭 색상 변경
				gcm.util.changeTabColor();
			}
			
			scwin.input_menu_name = "";
			scwin.acb_menu_oneditkeyup = function(info,e) {
				scwin.input_menu_name = info.newValue;
			};
			
			scwin.selectRecommendMenu = function() {
				com.execute(sbm_recomMenu, {
					successCallback : function(e) {
						var paramObj = {};
						
						paramObj.menuIdCol 	  = gcm.MENU_INFO.MENU_ID;
						paramObj.serviceIdCol = gcm.MENU_INFO.SERVICE_ID;
						paramObj.menuLevelCol = gcm.MENU_INFO.LEVEL;
						paramObj.menuNm		  = gcm.MENU_INFO.MENU_NM;
						paramObj.pMenuIdCol	  = gcm.MENU_INFO.P_MENU_ID;
						
						scwin.genarateMenuTree("recom", dlt_recomMenu, paramObj, grp_recomRoot);
					}
				});	
			}
			
			scwin.btn_sample_onclick = function(e) {
				var menuObj = {};
				menuObj[gcm.MENU_INFO.MENU_ID] = "SAMPLE";
				menuObj[gcm.MENU_INFO.MENU_NM] = "샘플목록";
				menuObj[gcm.MENU_INFO.NEW_PATH] = "/ui/zam/sample/indexSample.xml";
				gcm.win.openMenu(menuObj)
			}
			
			scwin.menuClsf_onclick = function(e) {
				var btnComp = com.getComponent(this.getID());
				var preBtnComp = com.getComponent($('a:not(.ico).w2anchor2.on')[0].id);
				
				if (!btnComp.hasClass("on")) {
					preBtnComp.removeClass("on");
					btnComp.addClass("on");
				}
				var comp = btnComp.getOriginalID().split('_')[1];
				var preComp = preBtnComp.getOriginalID().split('_')[1];
				// WebSquare.localStorage.setItem("selectMenu", comp);
				localStorage.setItem("selectMenu", comp);				
				
				if (comp != preComp) {
					com.getComponent('grp_' + comp).show("");
					com.getComponent('grp_' + preComp).hide();
					spa_menuTab.setValue(btnComp.getValue());
				}
			}
		
					
			/**
			 * treeview 컴포넌트의 oncontextmenu 이벤트 해들러
			 */
			scwin.trvMenu_onrightbuttonclick = function(node, left, top) {
				if (this.isLeaf()) {

					// 비즈니스 로직 처리, 선택된 메뉴를 글로벌 변수에 적재
					glovalMenuObj = gcm.win.getMenuObj( node.value);
					// UI 처리
					scwin.openContextMenu(left, top);
				}
			};
			
			scwin.MOUSE_LEFT_BUTTON		= 0;
			scwin.MOUSE_MIDDLE_BUTTON	= 1;
			scwin.MOUSE_RIGHT_BUTTON	= 2;
			scwin.MOUSE_BACK_BUTTON		= 3;
			scwin.MOUSE_FORWARD_BUTTON	= 4;
			
			/**
			 * 트리메뉴 구성한 Button 컴포넌트의 oncontextmenu 이벤트 해들러
			 */
			scwin.treeMenu_contextmenu = function(e) {
				if (com.isEmpty(e)) return;
				e.preventDefault();
				
				var isLeaf = this.getUserData("isLeaf");
				var button = e.button;
				
				if (isLeaf && button === scwin.MOUSE_RIGHT_BUTTON) {
					let node = eval(e.target.id);
					var menuId = this.getUserData(gcm.MENU_INFO.MENU_ID);
					
					gcm.win.getMenuObj(menuId, function(menuObj) {
						// 비즈니스 로직 처리, 선택된 메뉴를 글로벌 변수에 적재
						glovalMenuObj = menuObj;

						var left = e.clientX;
						var top  = e.clientY;
						// UI 처리
						scwin.openContextMenu(left, top);
					});
				}
			};
			


			/**
			 * contextmenu 클릭 이벤트 해들러
			 */
			scwin.contextMenu_onclick = function(e) {
				if (glovalMenuObj){
					const url = '/?serviceid=' + glovalMenuObj.serviceID
					const contextMenu = document.getElementById("mf_wfm_side_context_menu");
					switch(this) {
						case newTab: 
							console.log("newTab"); 
							window.open( url, glovalMenuObj.cn); 
							contextMenu.classList.remove("visible"); 
							break;
						// 새 창으로 열기 삭제요청 (2023-08-16 이윤민 행정원)
						// case newWin: 
						// 	console.log("newWin"); 
						// 	window.open( url, glovalMenuObj.cn, "_blank"); 
						// 	contextMenu.classList.remove("visible"); 
						// 	break;
//						case newSec:
//							console.log("newSec"); 
//							windows.create({"url": url, "incognito": true });
//							contextMenu.classList.remove("visible"); 
//							break;
						case linkCopy:	
							console.log("linkCopy");
							const fullUrl = gcm.baseUrls.newBizUrl + url;
							navigator.clipboard.writeText(fullUrl).then(function(x) {
								alert("URL이 복사되었습니다.\n" + fullUrl);
							}); 
							contextMenu.classList.remove("visible"); 
							break;
					}
					
				}
			};
	
	/**
	 * 커스텀 툴팁
	 */
	scwin.trvMenu_onlabelover = function(index, node, value) {
		let nodeJson = dlt_menu.getMatchedJSON("serviceCode", value)[0];
		let nodeElement = document.getElementById(this.getID() + "_label_" + index);

		if (nodeElement.offsetWidth < nodeElement.scrollWidth) {
			let x = nodeElement.getBoundingClientRect().left;
			let y = nodeElement.getBoundingClientRect().top;
			let cn = nodeJson.cn;

			scwin.openLabelTooltip(x, y, cn, index);
		} else {
			scwin.openLabelTooltip(0, 0, "", "");
		}
	}

	/**
	 * 커스텀 라벨 툴팁 클릭 이벤트
	 */
	scwin.labelTooltip_onclick = function() {
		let trvMenuIndex = this.render.getAttribute("trvMenuIndex")
		let nodeSpan = !trvMenu.isOpen(trvMenuIndex);
		trvMenu.findNodeByIndex(trvMenuIndex, true);
		trvMenu.spanNode(trvMenuIndex, nodeSpan, false);
		setTimeout(function(){ trvMenu.trigger("click") }, 10);
	}]]></script>
    </head>
    <body ev:onpageload="scwin.onpageload">
    <style><![CDATA[
		.menuBox,.side.more{
			-webkit-user-select:none;
			-moz-user-select:none;
			-ms-user-select:none;
			user-select:none
		}
		.dbSpinnerWrap{
		    display: flex;
		    width: 100%;
		    height: 100%;
		    justify-content: center;
		    align-items: center;
		}
		.dbSpinner {
			position: absolute;
		    width: 90px;
		    height: 90px;
		    border-radius: 50%;
		    background-color: transparent;
		    border: 2px solid #fff;
		    border-top: 2px solid #adadad;
		    border-bottom: 2px solid #adadad;
		    -webkit-animation: 1s spin linear infinite;
		    animation: 1.3s spin linear infinite;
		    justify-content: center;
		    align-items: center;
		}
		
		.dbWord{
			color: #adadad;font-size: 11px;
			-webkit-animation: breathing 1.5s ease-out infinite;
		    animation: breathing 1.5s ease-out infinite;
		
		}
		
		@-webkit-keyframes spin {
		    from {
		        -webkit-transform: rotate(0deg);
		        transform: rotate(0deg);
		    }
		    to {
		        -webkit-transform: rotate(360deg);
		        transform: rotate(360deg);
		    }
		}
		
		@keyframes spin {
		    from {
		        -webkit-transform: rotate(0deg);
		        transform: rotate(0deg);
		    }
		    to {
		        -webkit-transform: rotate(360deg);
		        transform: rotate(360deg);
		    }
		}
		
		@-webkit-keyframes breathing {
			0% {opacity: 0.1;}
			25% {opacity: 0.5;}
		  	60% {opacity: 1;}
		  	100% {opacity: 0.1;}
		}
		@keyframes breathing {
			0% {opacity: 0.1;}
			25% {opacity: 0.5;}
			60% {opacity: 1;}
			100% {opacity: 0.1;}
		}    

		#mf_wfm_side_context_menu {
			position: fixed;
			z-index: 10000;
			width: 160px;
			background: #1b1a1a;
			border-radius: 5px;
			transform: scale(0);
			transform-origin: top left;
		}

		#mf_wfm_side_context_menu.visible {
		  transform: scale(1);
		  transition: transform 200ms ease-in-out;
		}

		#mf_wfm_side_context_menu .item {
		  padding: 8px 10px;
		  font-size: 12px;
		  color: #eee;
		  cursor: pointer;
		  border-radius: inherit;
		}
		
		#mf_wfm_side_context_menu .item:hover {
		  background: #343434;
		}
				
		#mf_wfm_side_label_Tooltip {
			position: fixed;
			z-index: 10000;
			background: #fff;
			border-radius: 5px;
		}
		
		#mf_wfm_side_label_Tooltip .item {
		  padding: 2px 3px;
		  font-size: 12px;
		  color: #000;
		  cursor: pointer;
		  border-radius: inherit;
		}
		
		]]></style>
    	<xf:group class="side" id="grp_side" style="">
    		<w2:anchor class="side_drawer" id="btn_lnb" outerDiv="false" style="" ev:onclick="scwin.btn_lnb_onclick">
    			<xf:label><![CDATA[메뉴펼침]]></xf:label>
    		</w2:anchor>
	<!-- <xf:group style="display:none;" id="grp_menuListOuter" class="loading"></xf:group> -->
    		<xf:group class="menu" id="sideMenuList" style="" tagname="ul">
    			<xf:group class="li_aprdoc A002" tagname="li">
    				<w2:anchor escape="false" id="btn_aprdoc" userData1="A002" outerDiv="false" style="" ev:onclick="scwin.apr_btns_onclick">
    					<xf:label><![CDATA[신청서<br>양식함]]></xf:label>
    				</w2:anchor>
    			</xf:group>
    			<xf:group class="li_aprWait A003" tagname="li">
    				<w2:anchor escape="false" id="btn_aprWait" userData1="A003" outerDiv="false" style="" ev:onclick="scwin.apr_btns_onclick">
    					<xf:label><![CDATA[결재<br>대기함]]></xf:label>
    				</w2:anchor>
    				<w2:textbox class="menu_num" id="tot_aprWait" label="0" style="display:none"></w2:textbox>
    			</xf:group>
    			<xf:group class="li_workWait A004" tagname="li">
    				<w2:anchor escape="false" id="btn_workWait" userData1="A004" outerDiv="false" style="" ev:onclick="scwin.apr_btns_onclick">
    					<xf:label><![CDATA[업무<br>대기함]]></xf:label>
    				</w2:anchor>
    				<w2:textbox id="tot_workWait" label="0" style="display:none" class="menu_num"></w2:textbox>
    			</xf:group>
    			
    			<xf:group id="grp_budget" class="li_workWait B504" tagname="li" style="display:none;">
    				<w2:anchor escape="false" id="btn_budgetWorkWait" userData1="A004" outerDiv="false" style="" ev:onclick="scwin.apr_btns_onclick">
    					<xf:label><![CDATA[예산통제<br>대기함]]></xf:label>
    				</w2:anchor>
    				<w2:textbox id="tot_budgetWorkWait" label="0" style="display:none" class="menu_num"></w2:textbox>
    			</xf:group>

    			<xf:group id="grp_kdocWait" class="li_kdocWait" tagname="li">
    				<w2:anchor escape="false" id="btn_kdocWait" outerDiv="false" style="" ev:onclick="scwin.apr_btns_onclick">
    					<xf:label><![CDATA[문서유통<br>대기함]]></xf:label>
    				</w2:anchor>
    				<w2:textbox class="menu_num" id="tot_kdocWait" label="0" style="display:none"></w2:textbox>
    			</xf:group>

    			<xf:group class="li_aprRunnig A005" tagname="li">
    				<w2:anchor escape="false" id="btn_aprRunnig" userData1="A005" outerDiv="false" style="" ev:onclick="scwin.apr_btns_onclick">
    					<xf:label><![CDATA[결재<br/>진행함]]></xf:label>
    				</w2:anchor>
    			</xf:group>
    			<xf:group class="li_apr06 A006" tagname="li">
    				<w2:anchor escape="false" id="btn_aprComplet" userData1="A006" outerDiv="false" style="" ev:onclick="scwin.apr_btns_onclick">
    					<xf:label><![CDATA[결재<br/>완료함]]></xf:label>
    				</w2:anchor>
    			</xf:group>
    			<xf:group class="li_apr07 A007" tagname="li">
    				<w2:anchor escape="false" id="btn_instead" userData1="A007" outerDiv="false" style="" ev:onclick="scwin.apr_btns_onclick">
    					<xf:label><![CDATA[대결<br/>완료함]]></xf:label>
    				</w2:anchor>
    			</xf:group>
    			<xf:group class="li_apr08 A008" tagname="li">
    				<w2:anchor escape="false" id="btn_authComplet" userData1="A008" outerDiv="false" style="" ev:onclick="scwin.apr_btns_onclick">
    					<xf:label><![CDATA[담당자<br/>완료함]]></xf:label>
    				</w2:anchor>
    			</xf:group>
    			<xf:group class="li_apr09 A009" tagname="li">
    				<w2:anchor escape="false" id="btn_reject" userData1="A009" outerDiv="false" style="" ev:onclick="scwin.apr_btns_onclick">
    					<xf:label><![CDATA[결재<br/>반려함]]></xf:label>
    				</w2:anchor>
    				<w2:textbox class="menu_num" id="tot_reject" label="0" style="display:none"></w2:textbox>
    			</xf:group>
    			<xf:group class="li_apr10 A010" tagname="li">
    				<w2:anchor escape="false" id="btn_saved" userData1="A010" outerDiv="false" style="" ev:onclick="scwin.apr_btns_onclick">
    					<xf:label><![CDATA[작성중<br/>문서함]]></xf:label>
    				</w2:anchor>
    			</xf:group>
    			<xf:group class="A011" id="grp_sample" style="display:none;" tagname="li">
    				<w2:anchor escape="false" id="btn_sample" outerDiv="false" style="" ev:onclick="scwin.btn_sample_onclick">
    					<xf:label><![CDATA[샘플목록]]></xf:label>
    				</w2:anchor>
    			</xf:group>
    		</xf:group>
    		<xf:group tagname="div" id="context_menu">
    			<xf:group id="newTab" tagname="div" class="item" ev:onclick="scwin.contextMenu_onclick">새탭으로 링크 열기</xf:group>
<!--    			<xf:group id="newWin" tagname="div" class="item" ev:onclick="scwin.contextMenu_onclick">새창으로 링크 열기</xf:group>-->
<!--    			<xf:group id="newSec" tagname="div" class="item" ev:onclick="scwin.contextMenu_onclick">시크릿창에서 링크 열기</xf:group>-->
    			<xf:group id="linkCopy" tagname="div" class="item" ev:onclick="scwin.contextMenu_onclick">링크 주소 복사</xf:group>
    		</xf:group>
    		<xf:group tagname="div" id="label_Tooltip">
    			<xf:group id="labelTooltip_text" tagname="div" class="item" ev:onclick="scwin.labelTooltip_onclick"></xf:group>
    		</xf:group>
    	</xf:group>
    	<xf:group class="menuBox" id="" style="">
    		<xf:group class="basis" id="">
    			<w2:anchor class="on" id="btn_menu" outerDiv="false" style="" ev:onclick="scwin.menuClsf_onclick">
    				<xf:label><![CDATA[전체메뉴]]></xf:label>
    			</w2:anchor>
    			<w2:anchor id="btn_recomm" outerDiv="false" style="" class="" ev:onclick="scwin.menuClsf_onclick">
    				<xf:label><![CDATA[추천메뉴]]></xf:label>
    			</w2:anchor>
    			<w2:anchor id="btn_myMenu" outerDiv="false" style="" ev:onclick="scwin.menuClsf_onclick">
    				<xf:label><![CDATA[나의메뉴]]></xf:label>
    			</w2:anchor>
    		</xf:group>
    		<xf:group class="bartit" id="">
    			<xf:group class="txt_menu" id="">
    				<w2:span id="spa_menuTab" label="전체메뉴" style=""></w2:span>
    			</xf:group>
    			<xf:group class="btns" id="">
    				<w2:anchor class="ico_search" id="btn_srch" outerDiv="false" style="" tooltip="메뉴검색"
    					ev:onclick="scwin.btn_srch_onclick">
    					<xf:label><![CDATA[메뉴검색]]></xf:label>
    				</w2:anchor>
    				<w2:anchor class="ico_fold" id="btn_fold" outerDiv="false" style="" tooltip="모두접기"
    					ev:onclick="scwin.btn_fold_onclick">
    					<xf:label><![CDATA[메뉴접기]]></xf:label>
    				</w2:anchor>
    				<w2:anchor class="ico_list" id="btn_expand" outerDiv="false" style="" tooltip="모두펼치기"
    					ev:onclick="scwin.btn_expand_onclick">
    					<xf:label><![CDATA[메뉴펼치기]]></xf:label>
    				</w2:anchor>
    				<w2:anchor class="ico_fix" ev:onclick="scwin.btn_fix_onclick" id="btn_fix" outerDiv="false" style="" tooltip="메뉴고정">
    					<xf:label><![CDATA[메뉴고정]]></xf:label>
    				</w2:anchor>
    			</xf:group>
    		</xf:group>
    		<w2:autoComplete allOption="" chooseOption="" class="allmenu" editType="select" id="acb_menu" ref="" search="contain"
    			style="display: none;" submenuSize="auto" useKeywordHighlight="true" visibleRowNum="10" chooseOptionLabel="" placeholder="메뉴명 검색"
    			ev:onselected="scwin.acb_menu_onselected" ev:oneditkeyup="scwin.acb_menu_oneditkeyup" caseSensitive="false">
    			<w2:choices>
    				<w2:itemset nodeset="data:ldt_menuLeaf">
    					<w2:label ref="cn"></w2:label>
    					<w2:value ref="serviceCode"></w2:value>
    				</w2:itemset>
    			</w2:choices>
    		</w2:autoComplete>
    		<xf:group id="grp_menu" class="menuListBox" style="overflow: hidden">
    			<xf:group tagname="div" id="loading_allmenu" class="dbSpinnerWrap">
    				<xf:group tagname="div" class="dbWord">Loading...</xf:group>	
					<xf:group tagname="div" class="dbSpinner"></xf:group>
				</xf:group>

    			<w2:treeview showTreeDepth="0" tooltipGroupClass="false" dataType="listed" style="" id="trvMenu" class="treev"
    				ev:onclick="scwin.menuClick" toggleEvent="onclick" ev:onrightbuttonclick="scwin.trvMenu_onrightbuttonclick" ev:onlabelover="scwin.trvMenu_onlabelover">
    				<w2:itemset nodeset="data:dlt_menu">
    					<w2:label ref="cn"></w2:label>
    					<w2:value ref="serviceCode"></w2:value>
    					<w2:depth ref="serviceLevel"></w2:depth>
    					<w2:folder ref=""></w2:folder>
    					<w2:checkbox ref=""></w2:checkbox>
    					<w2:checkboxDisabled ref=""></w2:checkboxDisabled>
    					<w2:image ref=""></w2:image>
    					<w2:iconImage ref=""></w2:iconImage>
    					<w2:selectedImage ref=""></w2:selectedImage>
    					<w2:expandedImage ref=""></w2:expandedImage>
    					<w2:leafImage ref=""></w2:leafImage>
    				</w2:itemset>
    			</w2:treeview>
    		</xf:group>
    		<xf:group id="grp_recomm" class="menuListBox" style="display: none;">
    			<xf:group tagname="ul" style="" id="grp_recomRoot" class="menuList">
    			</xf:group>
    		</xf:group>
    		<xf:group id="grp_myMenu" style="display: none; overflow: hidden" class="menuListBox">
    			<xf:group tagname="div" id="loading_mymenu" class="dbSpinnerWrap">
    				<xf:group tagname="div" class="dbWord">Loading...</xf:group>	
					<xf:group tagname="div" class="dbSpinner"></xf:group>
				</xf:group>
    			<xf:group tagname="ul" style="" id="grp_myMenuRoot" class="menuList">
    			</xf:group>
    		</xf:group>
    		<xf:group id="" style="">
    			<xf:trigger style="display:none;" id="btn_myMenuMgt" type="button" class="btn btn_mymenuSet" ev:onclick="scwin.btn_myMenuMgt_onclick">
    				<xf:label><![CDATA[나의메뉴관리]]></xf:label>
    			</xf:trigger>
    		</xf:group>
    	</xf:group>
    </body>
</html>
